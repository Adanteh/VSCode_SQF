{"ARMA3": {"BIS_fnc_getFromPairs": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Searches the associative array for the 1st occurance of the key string and returns the value associated with it. Syntax: _value = [_associativeArray:array,_key:string,_defaultValue] call BIS_fnc_getFromPairs; Example: 2 = [[[\"apple\",3],[\"pear\",2]],\"pear\"] call BIS_fnc_getFromPairs; Returns: * if found: value stored under the key * if not found: nil or _defaultValue */"}, "getPilotCameraTarget": {"syntax": "getPilotCameraTarget object", "server": false, "broadcasted": false, "description": "Returns the target of the object airplane or helicopter pilotCamera tracking.", "example": "_pilotCamTrack = (getPilotCameraTarget vehicle player) select 0; _pilotCamTargetPos = (getPilotCameraTarget vehicle player) select 1; _pilotCamTarget = (getPilotCameraTarget vehicle player) select 2;", "local": true}, "tvSetPictureColor": {"syntax": "tvSetPictureColor [idc, path, color]", "server": false, "broadcasted": false, "description": "Sets the colour of the picture (set via tvSetPicture) under the specified tree view path.", "example": "tvSetPictureColor [101, [0,2], [1,0,1,1]];", "local": true}, "BIS_fnc_splitString": {"syntax": "[stringToSplit, separators, byStr] call BIS_fnc_splitString", "server": false, "broadcasted": false, "description": "Split spring according to given separators", "example": "[\"this is a test\", \" \"] call BIS_fnc_splitString; // returns [\"this\", \"is\", \"a\", \"test\"]", "local": false}, "getCompatiblePylonMagazines": {"syntax": "vehicle getCompatiblePylonMagazines pylon", "server": false, "broadcasted": false, "description": "Get array of compatible pylon magazines", "example": "vehicle player getCompatiblePylonMagazines 0; // returns array of arrays containing all compatible magazines", "local": false}, "BIS_fnc_showRespawnMenu": {"example": "[\"open\"] call BIS_fnc_showRespawnMenu; // spawn does work as well", "server": false, "broadcasted": false, "local": false, "description": "Triggers the respawn screen in the given mode"}, "BIS_fnc_moduleCuratorAddCameraArea": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "curatorEditingAreaType": {"syntax": "curatorEditingAreaType obj", "server": false, "broadcasted": false, "description": "Returns type of edit areas assigned to curator (blacklist/whitelist).", "example": "Example needed", "local": false}, "isEqualTypeArray": {"syntax": "arr1 isEqualTypeArray arr2", "server": false, "broadcasted": false, "description": "Compares types of all elements of one array to types of all elements of another array.", "example": "_arr = [1,true,\"three\"]; _arr isEqualTypeArray [0,objNull,\"\"]; // false _arr isEqualTypeArray [0,false,\"\"]; // true", "local": false}, "BIS_fnc_setRespawnInventory": {"syntax": "[target, inventory] call BIS_fnc_setRespawnInventory", "server": false, "broadcasted": false, "description": "Set respawn loadouts.", "example": "[ player, [\"B_T_Recon_TL_F\"] ] call BIS_fnc_setRespawnInventory;", "local": false}, "BIS_fnc_taskParent": {"syntax": "taskName call BIS_fnc_taskParent", "server": false, "broadcasted": false, "description": "Return a sub-task's parent task.", "example": "\"BIS_task_01\" call BIS_fnc_taskParent;", "local": false}, "canSuspend": {"syntax": "canSuspend", "server": false, "broadcasted": false, "description": "Returns true if sleep, uiSleep or waitUntil commands can be used in current scope. Usually when suspension is not allowed but used, for example when code is executed in unscheduled environment, the script engine would ignore any suspension command and throw error: \"Suspending not allowed in this context\". Using canSuspend command allows to detect the correct environment for the code.", "example": "onEachFrame { systemChat str canSuspend; //false [] spawn {hint str canSuspend}; //true onEachFrame {}; };", "local": false}, "getAmmoCargo": {"syntax": "getAmmoCargo vehicle", "server": true, "broadcasted": false, "description": "Returns the amount of ammo resources in the cargo space of a rearm vehicle.", "example": "value = getAmmoCargo myVehicleName;", "local": false}, "BIS_fnc_ORBATAddGroupOverlay": {"syntax": "[target, texture, colour, widthMulti, heightMulti, angle, text, shadow] call BIS_fnc_ORBATAddGroupOverlay", "server": false, "broadcasted": false, "description": "Register texture(s) to be displayed over CfgORBAT group.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\", \"\\A3\\weapons_f\\data\\UI\\icon_MG_CA.paa\", [0,0,01], 3, 3, 0, \"Some Text\", true ] call BIS_fnc_ORBATAddGroupOverlay;", "local": false}, "BIS_fnc_moduleCuratorSetCostsSide": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_arsenal": {"syntax": "[mode,params] call BIS_fnc_arsenal", "server": false, "broadcasted": false, "description": "Function used for Virtual Arsenal. The function features four different modes, each mode comes with its own paramters.", "example": "[ \"Open\", [ true ] ] call BIS_fnc_arsenal;Opens Arsenal with all items", "local": false}, "BIS_fnc_diagConfig": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Prints config entries. Parameter(s): 0: CONFIG - config class which will be searched (default: configFile) 1: STRING or ARRAY - entry name(s) whose values will be printed 2: STRING - scan mode, can be one of following: \"controls\" - recursively scans controls in root, class controls, class controlsBackground and in RscControlsGroup controls (type = 15). \"turrets\" - recursively scans vehicles's turrets. \"weapons\" - scans weapon muzzles and modes. (default) - scans just class roots. Returns: STRING Results are printed to debug log and wiki compatible table is copied to clipboard. */"}, "BIS_fnc_moduleUnits": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "simulCloudOcclusion": {"syntax": "simulCloudOcclusion [pos1,pos2]", "server": false, "broadcasted": false, "description": "Returns clouds occlusion between two given points (0 - no clouds, 1 - full clouds).", "example": "canSeeSun = (simulCloudOcclusion == 0)", "local": false}, "ctrlModelDirAndUp": {"syntax": "ctrlModelDirAndUp control", "server": false, "broadcasted": false, "description": "Returns vectorDir and vectorUp of the model used in 3D Dialog Control.", "example": "_vectorDirAndUp = ctrlModelDirAndUp _control3D;", "local": false}, "BIS_fnc_filterString": {"syntax": "[ text, filter ] call BIS_fnc_filterString;", "server": false, "broadcasted": false, "description": "Removes characters from a string based on the list of allowed characters.", "example": "[\"Player 1 @%!@$\"] call BIS_fnc_filterString; Returns \"Player1\"", "local": false}, "logNetwork": {"syntax": "logNetwork logFile", "server": false, "broadcasted": false, "description": "Registers new log file recording a network traffic and returns handle of the log. The log file is saved inside the Arma 3 root folder.", "example": "_handle = logNetwork [\"myLog.txt\",[\"\"]];", "local": false}, "BIS_fnc_curatorChallengeDestroyVehicle": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "getPilotCameraPosition": {"syntax": "getPilotCameraPosition object", "server": true, "broadcasted": false, "description": "Returns model space coordinates of the object airplane or helicopter pilotCamera .", "example": "_pilotCamPos = getPilotCameraPosition vehicle player", "local": false}, "tvCollapse": {"syntax": "tvCollapse [idc, path]", "server": false, "broadcasted": false, "description": "Collapses tree item pointed to by the path. IDC means id of parent Tree View.", "example": "tvCollapse [101, [0]];", "local": true}, "BIS_fnc_simpleObjectData": {"syntax": "[classname] call BIS_fnc_simpleObjectData", "server": false, "broadcasted": false, "description": "Get complete data needed for simple object creation.", "example": "[\"B_Boat_Armed_01_minigun_F\"] call BIS_fnc_simpleObjectData;", "local": false}, "animateSource": {"syntax": "object animateSource [source, phase, speed]", "server": true, "broadcasted": true, "description": "Process an animation of the object. If animate uses class name from CfgModels Animations, animateSource uses name defined by source property. This allows to use just one command on a bunch of animations related to the same source simultaneously. Since Arma 3 v1.65.138459 speed of animation can be altered with coefficient.", "example": "house animateSource [\"Door_1_source\", 1, true];", "local": false}, "setDefaultCamera": {"syntax": "setDefaultCamera [position, direction]", "server": false, "broadcasted": false, "description": "Sets the position and direction for the camera used after camera is set on no object (log out view when leaving MP game for example)", "example": "setDefaultCamera [[5000,5000,200],[1,1,-1]];", "local": false}, "ctrlTextWidth": {"syntax": "ctrlTextWidth control", "server": false, "broadcasted": false, "description": "Returns the control text width. Supported control types are:", "example": "_w = ctrlTextWidth _ctrl;", "local": false}, "openDLCPage": {"syntax": "openDLCPage dlcID", "server": false, "broadcasted": false, "description": "Opens a Steam page of the app with given appId. Only works for known appId (game + linked DLCs)", "example": "openDLCPage 288520", "local": false}, "BIS_fnc_rscLayer": {"syntax": "[layerName] call BIS_fnc_rscLayer", "server": false, "broadcasted": false, "description": "Register RSC layer.", "example": "_id = [\"myLayerName\"] call BIS_fnc_rscLayer;", "local": false}, "BIS_fnc_setServerVariable": {"syntax": "[namespace, varName, value] call BIS_fnc_setServerVariable", "server": false, "broadcasted": false, "description": "Set variable stored only on server. Clients can the download it using BIS_fnc_getServerVariable. Used when you want to share variables only to specific clients to prevent large traffic.", "example": "[nil, \"playerHealth\", damage player] call BIS_fnc_setServerVariable;", "local": false}, "setMass": {"syntax": "myObject setMass [mass, time]", "server": false, "broadcasted": true, "description": "Changes the mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.", "example": "myObject setMass [10,0.5];", "local": true}, "getFatigue": {"syntax": "getFatigue unit", "server": true, "broadcasted": false, "description": "Returns fatigue of given unit.", "example": "value = getFatigue player;", "local": false}, "isAutonomous": {"syntax": "isAutonomous uav", "server": true, "broadcasted": false, "description": "Returns true if UAV is in autonomous mode.", "example": "bool = isAutonomous uav;", "local": false}, "mineActive": {"syntax": "mineActive obj", "server": true, "broadcasted": false, "description": "Checks if the given mine is active.", "example": "if (mineActive _mine) then {hint \"BOOM!\"};", "local": false}, "BIS_fnc_playSound": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "getWeaponSway": {"syntax": "getWeaponSway unit", "server": false, "broadcasted": false, "description": "Returns current size of weapon sway of a given unit, in radians", "example": "_sway = getWeaponSway player;", "local": false}, "remove3DENLayer": {"syntax": "remove3DENLayer layerID", "server": false, "broadcasted": false, "description": "Remove Eden Editor editing layer.", "example": "_myLayer = -1 add3DENLayer \"Enemy Base\"; remove3DENLayer _myLayer\u00a0;", "local": false}, "BIS_fnc_exportCfgWeapons": {"syntax": "[mode, patches] call BIS_fnc_exportCfgWeapons", "server": false, "broadcasted": false, "description": "Export list of weapons for Community Wiki.", "example": "[\"Weapon\"] call BIS_fnc_exportCfgWeapons;", "local": false}, "BIS_fnc_moduleObjective": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_ordinalNumber": {"syntax": "[number, language, isFeminine] call BIS_fnc_ordinalNumber", "server": false, "broadcasted": false, "description": "Return number as ordinal number (e.g. 1 become \"1st\")", "example": "_second = [42] call BIS_fnc_ordinalNumber; // will return \"42nd\" for English-speaking players", "local": false}, "arrayIntersect": {"syntax": "array1 arrayIntersect array2", "server": false, "broadcasted": false, "description": "Intersects array1 with array2 returning array of unique common elements. Additionally, using the same array for array1 and array2 will simply return array of unique elements. Intersects only 1st dimension of an array.", "example": "_arr1 = [1,2,3,4,5,2,3,4]; _arr2 = [4,5,6,1,2,3,5,6]; hint str (_arr1 arrayIntersect _arr2); // [4,5,1,2,3]", "local": false}, "BIS_fnc_mapSize": {"syntax": "terrainName call BIS_fnc_mapSize", "server": false, "broadcasted": false, "description": "Returns map size.", "example": "\"Altis\" call BIS_fnc_mapSize;", "local": false}, "vectorUpVisual": {"syntax": "vectorUpVisual objectName", "server": true, "broadcasted": false, "description": "Return object's up vector in world Position coordinates ( [x, y, z] ) in render time scope.", "example": "_vUp = vectorUpVisual vehicle player;", "local": false}, "ppEffectForceInNVG": {"syntax": "number ppEffectForceInNVG bool", "server": false, "broadcasted": false, "description": "Forces use of Post process effects in NVG.", "example": "_ppGrain ppEffectForceInNVG true;", "local": false}, "customRadio": {"syntax": "unit customRadio [channel, message]", "server": true, "broadcasted": false, "description": "Sends the message to the custom radio channel. The message is defined in the description.ext file or radio protocol.", "example": "_soldierOne customRadio [1, \"WordEnemy\"];", "local": false}, "channelEnabled": {"syntax": "channelEnabled channel", "server": false, "broadcasted": false, "description": "Returns true or false depending on whether the given channel is enabled or disabled. For more information about enabling/disabling of chat channels see enableChannel. Channel / Number correspondence:", "example": "_isGlobalChatEnabled = (channelEnabled 0) select 0; // Check if user can use text on global channel", "local": false}, "BIS_fnc_moduleDamage": {"syntax": "[logic, vehicles, isActivated] call BIS_fnc_moduleDamage", "server": false, "broadcasted": false, "description": "Damage given vehicles.", "example": "[myLogic, vehicle player, true] call BIS_fnc_moduleDamage;", "local": false}, "vectorMultiply": {"syntax": "vector vectorMultiply scalar", "server": false, "broadcasted": false, "description": "Multiplies 3D vector by a scalar.", "example": "_newVector = [1,2,3] vectorMultiply 3; //[3,6,9]", "local": false}, "vehicleReportRemoteTargets": {"syntax": "vehicleReportRemoteTargets vehicle", "server": false, "broadcasted": false, "description": "Gets whether the vehicle shares acquired targets via datalink with the Side center.", "example": "vehicleReportRemoteTargets (vehicle player);", "local": false}, "serverCommandExecutable": {"syntax": "serverCommandExecutable command", "server": false, "broadcasted": false, "description": "Returns true if the serverCommand can be performed on the machine and in this exact environment, otherwise false. serverCommand can be executed only from User Interface Event Handlers, and this command also checks if that's the case.", "example": "_canKick = serverCommandAvailable \"#kick\";", "local": false}, "BIS_fnc_curatorSayMessage": {"syntax": "[speaker, sentence] call BIS_fnc_curatorSayMessage", "server": false, "broadcasted": false, "description": "Plays some radio message from CfgRadio locally.", "example": "[ player, \"mp_groundsupport_01_casrequested_BHQ_0\" ] call BIS_fnc_curatorSayMessage;", "local": false}, "BIS_fnc_locationDescription": {"syntax": "position call BIS_fnc_locationDescription", "server": false, "broadcasted": false, "description": "Return location description (e.g. \"NE of Agia Marina\")", "example": "hint format [\"Player's position:\u00a0%1\", player call BIS_fnc_locationDescription];", "local": false}, "magazinesAmmo": {"syntax": "magazinesAmmo vehicle", "server": false, "broadcasted": false, "description": "Returns array of arrays of all vehicle's magazines and their ammo count (also works on supply boxes). When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use magazinesAmmoFull to return all magazines.", "example": "_magazinesAmmo = magazinesAmmo player; /* [ [\"30Rnd_65x39_caseless_mag\",30], [\"30Rnd_65x39_caseless_mag\",30], [\"16Rnd_9x21_Mag\",16], [\"SmokeShellGreen\",1], [\"Chemlight_green\",1], [\"HandGrenade\",1] ] */", "local": false}, "ctRemoveHeaders": {"syntax": "ctrl ctRemoveHeaders indices", "server": false, "broadcasted": false, "description": "Takes array of header indices as a parameter and removes headers with those indices. Indices of remaining headers will be recomputed.", "example": "_control ctRemoveHeaders [0, 1, 2];", "local": true}, "confirmSensorTarget": {"syntax": "vehicle confirmSensorTarget [side, isConfirmed]", "server": false, "broadcasted": false, "description": "Sets for which Side the entity becomes a \"confirmed hostile\" target - a target that becomes highlighted red on the sensors display.", "example": "(vehicle player) confirmSensorTarget [west, true];", "local": false}, "setObjectMaterialGlobal": {"syntax": "obj setObjectMaterialGlobal [selection, material]", "server": true, "broadcasted": true, "description": "Set the material of the given selection on all computers in a network session.", "example": "player setObjectMaterialGlobal [0, \"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];", "local": false}, "BIS_fnc_createLogRecord": {"syntax": "[owner, title, text] call BIS_fnc_createLogRecord", "server": false, "broadcasted": false, "description": "Create a dated, timed diary record in the owner's \"Log\" subject.", "example": "[player, \"Title\", \"This is a log entry. Have fun!\"] call BIS_fnc_createLogRecord;", "local": false}, "isUAVConnected": {"syntax": "isUAVConnected uav", "server": false, "broadcasted": false, "description": "Returns true if UAV is connected to some terminal.", "example": "bool = isUAVConnected cursorTarget;", "local": false}, "simulWeatherSync": {"syntax": "simulWeatherSync", "server": false, "broadcasted": false, "description": "Synchronizes Simul Weather with Arma weather, generates all keyframes.", "example": "simulWeatherSync;", "local": false}, "BIS_fnc_VRCourseTargetDesignation1": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "BIS_fnc_playEndMusic": {"syntax": "play call BIS_fnc_playEndMusic", "server": false, "broadcasted": false, "description": "Play mission end music (when it's nearing the end)", "example": "true call BIS_fnc_playEndMusic;", "local": false}, "profileNameSteam": {"syntax": "profileNameSteam", "server": false, "broadcasted": false, "description": "Returns name of the current Steam profile.", "example": "_mySteamProfileName = profileNameSteam;", "local": false}, "setStatValue": {"syntax": "setStatValue [name, value]", "server": false, "broadcasted": false, "description": "Sets a value to a given stat.", "example": "setStatValue [\"ExpWarlockDown\", 1]; //Unlocks the \"Warlock Down\" Steam achivement", "local": false}, "sideEmpty": {"syntax": "sideEmpty", "server": false, "broadcasted": false, "description": "Returns empty side, for example static buildings in Eden Editor.", "example": "_sideEmpty = sideEmpty;", "local": false}, "BIS_fnc_error": {"syntax": "[param1,param2,...,param10] call BIS_fnc_error;", "server": false, "broadcasted": false, "description": "Log error message and display it (bottom of the UI). If it's called from a function, it'll include the function name before your content. Output is: \"profileName/log: ERROR: <your content>\"", "example": "[\"Player is too far away (%1)\",player distance dude] call BIS_fnc_error;", "local": false}, "BIS_fnc_diagKeyLayout": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Exports default key layout to wiki template. Parameter(s): _this select 0: STRING - category, can be one of following \"\" - all controls in game \"All\" \"BasicInfantryControls\" \"Car\" \"Air\" \"Helicopter\" \"Submarine\" \"Buldozer\" \"UserActions\" _this select 1: STRING - selection method, can be one of following \"\" - single tap \"double\" - double tap \"LCtrl\" - with left control pressed \"RCtrl\" - with right control pressed \"LShift\" - with left shift pressed \"RShift\" - with right shift pressed Returns: STRING - wiki export text (also copied to clipboard) */"}, "BIS_fnc_damagePulsing": {"syntax": "call BIS_fnc_damagePulsing", "server": false, "broadcasted": false, "description": "Game pulsing damage effect.", "example": "call BIS_fnc_damagePulsing;", "local": false}, "BIS_fnc_wpSuppress": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "assignItem": {"syntax": "unit assignItem item", "server": true, "broadcasted": true, "description": "Assigns existing item from inventory (uniform, vest, backpack) to a correct slot. If the slot is occupied by another item, it gets replaced.", "example": "bluforUnit addItem \"NVGoggles\"; bluforUnit assignItem \"NVGoggles\"; opforUnit addItem \"NVGoggles_OPFOR\"; opforUnit assignItem \"NVGoggles_OPFOR\"; independentUnit addItem \"NVGoggles_INDEP\"; independentUnit assignItem \"NVGoggles_INDEP\";", "local": false}, "difficultyEnabledRTD": {"syntax": "difficultyEnabledRTD", "server": false, "broadcasted": false, "description": "Returns true if rotorlib simulation is enabled. Forcing by mission is included", "example": "_rtdOn = difficultyEnabledRTD", "local": false}, "isEqualTo": {"syntax": "val1 isEqualTo val2", "server": false, "broadcasted": false, "description": "Performs strict comparison between var1 and var2 and returns true if equal, otherwise false. Strict means that it would check that both arguments are of the same data type and then compare the values.", "example": "_arr1 = [1,[2,[3]]]; _arr2 = [1,[2,[3]]]; if (_arr1 isEqualTo _arr2) then {hint \"Arrays match!\"}", "local": false}, "BIS_fnc_openFieldManual": {"syntax": "[topic, hint, display, filter] call BIS_fnc_openFieldManual", "server": false, "broadcasted": false, "description": "Opens Field Manual in briefing (SP, MP Server, MP Client) and players's map or journal. Selects the topic and hint passed as parameters. Can apply a (search) filter if desired.", "example": "[\"Damage\", \"HitDamage\"] call BIS_fnc_openFieldManual;", "local": false}, "BIS_fnc_call": {"syntax": "[params, code] call BIS_fnc_call;", "server": false, "broadcasted": false, "description": "Execute given code with or without parameter.", "example": "Show a message for the current player. [[\"Hello\"], {hint (_this select 0);}] call BIS_fnc_call;", "local": false}, "difficulty": {"syntax": "difficulty", "server": false, "broadcasted": false, "description": "Returns high-level selected difficulty mode. Returned value will be: 0 (Recruit), 1 (Regular), 2 (Veteran) or 3 (Elite)", "example": "value = difficulty;", "local": false}, "BIS_fnc_moduleGroupID": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "setSlingLoad": {"syntax": "vehicle setSlingLoad cargo", "server": false, "broadcasted": false, "description": "Creates sling loading from first object to second object if possible. To unload cargo, pass objNull as second param.", "example": "_success = heli1 setSlingLoad veh1;", "local": false}, "BIS_fnc_setOvercast": {"syntax": "[1] call BIS_fnc_setOvercast;", "server": false, "broadcasted": false, "description": "Instantly set weather conditions and share it across network. Must be executed in scheduled environment.", "example": "[0.5] call BIS_fnc_setOvercast;", "local": false}, "showChat": {"syntax": "showChat bool", "server": false, "broadcasted": false, "description": "Shows/hides the whole chat window.", "example": "showChat false;", "local": false}, "get3DENMouseOver": {"syntax": "get3DENMouseOver", "server": false, "broadcasted": false, "description": "Returns the Eden Entity the mouse is hovering over in Eden Editor.", "example": "systemChat str get3DENMouseOver;// returns: [\"Object\",B Alpha 1-1:1]", "local": false}, "setVehicleReceiveRemoteTargets": {"syntax": "vehicle setVehicleReceiveRemoteTargets bool", "server": false, "broadcasted": false, "description": "Sets that the vehicle will be able to receive targets acquired by someone else via datalink from the Side center.", "example": "(vehicle player) setVehicleReceiveRemoteTargets true;", "local": false}, "BIS_fnc_exportCuratorCostTable": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Generate spreadsheet with object classes and copy it to clipboard. The table will generate export code to be used in BIS_fnc_curatorObjectRegisteredTable Parameter(s): 0 (Optional): ARRAY of STRINGs - supported addons (classes from CfgPatches). When empty, all preloaded addons will be added. Use empty string to export just the cost calculation. 1 (Optional): STRING - format, can be \"ods\" or \"xls\" 2 (Optional): STRING - name of sheet with cost calculation. When empty, the calculation will be inserted on top of the table 3 (Optional): ARRAY of SIDEs or NUMBERs - filter only objects of listed sides or side IDs. Supported sides are west, east, resistance, civilian, sideUnknown and sideLogic 4 (Optional): CODE - condition for class to be listed. Config path to the class is passed as an argument (default: {true}) 5 (Optional): CODE - default cost, must return STRING. When empty string is returned, no default cost will be used (default: {\"\"}) Returns: BOOL */"}, "roleDescription": {"syntax": "roleDescription unit", "server": false, "broadcasted": false, "description": "Returns unit description set in Editor and visible on role selection screen in MP. Works in MP and SP.", "example": "_playerRole = roleDescription player;", "local": false}, "isEqualTypeAll": {"syntax": "arr isEqualTypeAll val", "server": false, "broadcasted": false, "description": "Compares types of all elements of an array to the type of a single value.", "example": "_arr = [1,2,3,4,5,6,7,8,9,0]; _arr isEqualTypeAll \"\"; //false _arr isEqualTypeAll 0; //true", "local": false}, "BIS_fnc_ctrlSetScale": {"syntax": "[control,scale,time] spawn BIS_fnc_ctrlSetScale", "server": false, "broadcasted": false, "description": "Scale a control while maintaining its centering.", "example": "_finalPos = [_ctrl, 1.5, 3] spawn BIS_fnc_ctrlSetScale;", "local": false}, "BIS_fnc_respawnMenuSpectator": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "ctrlHTMLLoaded": {"syntax": "ctrlHTMLLoaded control", "server": false, "broadcasted": false, "description": "Returns true when HTML content was successfully loaded.", "example": "_control htmlLoad \"test.html\"; if (!ctrlHTMLLoaded _control) then { hint \"Loading test.html failed!\"; };", "local": false}, "BIS_fnc_moduleObjectiveFind": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_curatorChallengeSpawnLightning": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "ctFindHeaderRows": {"syntax": "ctrl ctFindHeaderRows index", "server": false, "broadcasted": false, "description": "Takes index of a header as a parameter. Returns array of indices of rows under this header.", "example": "_array = _control ctFindHeaderRows 0;", "local": true}, "diag_codePerformance": {"syntax": "diag_codePerformance [code, arguments, cycles]", "server": false, "broadcasted": false, "description": "Attempts to run given code with given arguments given number of cycles in unscheduled environment and returns average time it took to run the code as well as actual number of executions performed. The command will return as soon as possible if the tested code is slow and the duration of the command exceeds 1 second. Engine alternative to BIS_fnc_codePerformance", "example": "_result = diag_codePerformance [{private _a = 123;}, 0, 10000];", "local": false}, "add3DENLayer": {"syntax": "parentLayerID add3DENLayer name", "server": false, "broadcasted": false, "description": "Add an editing layer in Eden Editor.", "example": "_myLayer = -1 add3DENLayer \"Enemy Base\"; _myLayerFort = _myLayer add3DENLayer \"Fortifications\"; _myLayerPatrol = _myLayer add3DENLayer \"Patrols\";", "local": false}, "BIS_fnc_quotations": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Display a quotation video. Parameters: _this select 0: STRING - Path to quotation video file. _this select 1: STRING - String, localized or not, used for subtitles. */"}, "getShadowDistance": {"syntax": "getShadowDistance", "server": false, "broadcasted": false, "description": "Gets the shadows rendering distance.", "example": "_value = getShadowDistance;", "local": false}, "ctrlTextHeight": {"syntax": "ctrlTextHeight control", "server": false, "broadcasted": false, "description": "Returns the control text height. Supported control types are:", "example": "_h = ctrlTextHeight _ctrl;", "local": false}, "BIS_fnc_moduleTriggers": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "groupOwner": {"syntax": "groupOwner group", "server": true, "broadcasted": false, "description": "Returns ID of client to which the group is local. Can be run only from server. When called from client, it always returns 0", "example": "_clientID = groupOwner _someGroup;", "local": false}, "setLightFlareMaxDistance": {"syntax": "light setLightFlareMaxDistance distance", "server": false, "broadcasted": false, "description": "Sets max distance where the flare is visible.", "example": "myLight setLightFlareMaxDistance 500;", "local": true}, "BIS_fnc_deleteInventory": {"syntax": "[unit,input] call BIS_fnc_deleteInventory", "server": false, "broadcasted": false, "description": "Delete loadout saved using BIS_fnc_saveInventory.", "example": "[ player, [ missionNamespace, \"BIS_inv\"] ] call BIS_fnc_deleteInventory;", "local": false}, "setWaypointName": {"syntax": "waypoint setWaypointName name", "server": false, "broadcasted": false, "description": "Changes the waypoint name.", "example": "[_grp,2] setWaypointName \"myName\";", "local": false}, "enableRopeAttach": {"syntax": "vehicle enableRopeAttach enable", "server": false, "broadcasted": false, "description": "Enable/disable ability to attach or be attached to ropes for given vehicle", "example": "(vehicle player) enableRopeAttach false;", "local": false}, "tvSetPictureColorDisabled": {"syntax": "control tvSetPictureColorDisabled [path, color]", "server": false, "broadcasted": false, "description": "Sets the color of left picture of a tree item defined by path when item is disabled", "example": "_control tvSetPictureColorDisabled [[0], [1,0,1,1]]", "local": false}, "BIS_fnc_getTurrets": {"syntax": "[input, outputType] call BIS_fnc_getTurrets", "server": false, "broadcasted": false, "description": "Return vehicle turrets.", "example": "[ vehicle player ] call BIS_fnc_getTurrets;", "local": false}, "deleteAt": {"syntax": "array deleteAt index", "server": false, "broadcasted": false, "description": "Removes array element at the given index and returns removed element (modifies the original array, just like resize or set). Will not issue error when -1 index is passed making it ideal for using with find(see Example 2) or findIf(see Example 3) command", "example": "_arr = [1,2,3]; _rem = _arr deleteAt 1; hint str [_rem, _arr]; //[2,[1,3]]", "local": false}, "squadParams": {"syntax": "squadParams unit", "server": true, "broadcasted": false, "description": "Returns data about squad of given unit loaded from squad.xml.", "example": "_info = squadParams player;", "local": false}, "allSimpleObjects": {"syntax": "allSimpleObjects [className1, className2,...classNameN]", "server": false, "broadcasted": false, "description": "Returns array of all simple objects that belong to the listed class names. If the array of types is empty [], all simple objects are returned including those without class name.", "example": "allSimpleObjects [\"Box_NATO_Equip_F\", \"Land_CampingChair_V2_F\"];", "local": false}, "BIS_fnc_friendlySides": {"syntax": "toCheck call BIS_fnc_sortAlphabetically", "server": false, "broadcasted": false, "description": "Returns sides allied to the given side / object.", "example": "player call BIS_fnc_friendlySides; // can return [FRIENDLY,WEST,GUER,CIV]", "local": false}, "ctrlSetAngle": {"syntax": "control ctrlSetAngle [angle, centerX, centerY]", "server": false, "broadcasted": false, "description": "Sets the rotation of an ST_PICTURE control. Rotation will be done within the control boundaries, so if the X and Y are given off center, the picture may get clipped by the control boundaries. Doesn't require ctrlCommit. Procedural textures filled controls do not rotate.", "example": "_control ctrlSetAngle [25, 0.5, 0.5];", "local": false}, "BIS_fnc_animalBehaviour": {"syntax": "[animal] call BIS_fnc_animalBehaviour", "server": false, "broadcasted": false, "description": "Animal behaviour control. Called by Animals_F\\Data\\Scripts\\main.fsm.", "example": "[animal] call BIS_fnc_animalBehaviour;", "local": false}, "moveInAny": {"syntax": "unit moveInAny vehicle", "server": true, "broadcasted": true, "description": "Moves unit to the first available seat in a vehicle. The order of priorities is the same order used in squad command when you order subordinates to get in vehicle to any position and is the same order used in Zeus when you drag units to a vehicle.", "example": "player moveInAny tank;", "local": false}, "canAdd": {"syntax": "object canAdd item", "server": false, "broadcasted": false, "description": "Checks if given object can be stored in inventory of given object or any inventory container (uniform, vest, backpack) of given unit.", "example": "if (player canAdd \"FirstAidKit\") then { player addItem \"FirstAidKit\"; } else { hint \"Not enough space\"; };", "local": false}, "goggles": {"syntax": "goggles unit", "server": true, "broadcasted": false, "description": "Returns name of currently used goggles (for NVGoggles use hmd).", "example": "_goggles = goggles assaultDiver; //G_Diving", "local": false}, "BIS_fnc_removeVirtualBackpackCargo": {"syntax": "[object,backpackClasses,removeGlobally] call BIS_fnc_removeVirtualBackpackCargo", "server": false, "broadcasted": false, "description": "Remove virtual backpacks from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualBackpackCargo;", "local": false}, "removeAllOwnedMines": {"syntax": "removeAllOwnedMines unit", "server": false, "broadcasted": false, "description": "Removes ownership of all owned mines/explosive devices of the given unit", "example": "removeAllOwnedMines player;", "local": false}, "BIS_fnc_effectFiredHeliRocket": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "removeAllCuratorCameraAreas": {"syntax": "removeAllCuratorCameraAreas curatorObj", "server": false, "broadcasted": false, "description": "Delete all curator camera areas.", "example": "removeAllCuratorCameraAreas myCurator;", "local": false}, "deleteVehicleCrew": {"syntax": "vehicle deleteVehicleCrew unit", "server": true, "broadcasted": true, "description": "Deletes a member of the crew of a vehicle. Human players cannot be deleted.", "example": "heli deleteVehicleCrew driver heli;", "local": false}, "BIS_fnc_getCfgDataBool": {"syntax": "config call BIS_fnc_getCfgDataBool", "server": false, "broadcasted": false, "description": "Gets a number defined in config]] and retype it into a boolean. Everything bigger then 0 is true, otherwise it's false.", "example": "_value = (missionConfigFile >> \"Characters\" >> \"Default\" >> \"equipAdjust\") call BIS_fnc_getCfgDataBool;", "local": false}, "hmd": {"syntax": "hmd unit", "server": true, "broadcasted": false, "description": "Returns class name of currently used Head Mounted Display. Returns an empty string if the slot is empty.", "example": "_nvgs = hmd player; //NVGoggles", "local": false}, "BIS_fnc_moduleTimeTrial": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "BIS_fnc_setRespawnDelay": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Increase the respawn time based on a condition Parameter(s): 0: CODE - Condition, must return BOOL 1: NUMBER - delay in seconds which is applied when the condition is true 2: STRING - description displayed when the delay is in effect Returns: NOTHING */"}, "unitIsUAV": {"syntax": "unitIsUAV unit", "server": false, "broadcasted": false, "description": "Returns true if the unit type is UAV - coresponding to transport param \"isUAV\"", "example": "_isUAV = unitIsUAV veh;", "local": false}, "resetSubgroupDirection": {"syntax": "resetSubgroupDirection unit", "server": false, "broadcasted": false, "description": "Resets direction of subgroup.", "example": "resetSubgroupDirection myUnit;", "local": false}, "BIS_fnc_addCuratorAreaFromTrigger": {"syntax": "[curatorLogic,triggers,checkedPosition,triggerType,editingArea,cameraArea] call BIS_fnc_addCuratorAreaFromTrigger", "server": false, "broadcasted": false, "description": "Add curator editing / camera area based on triggers.", "example": "[ BIS_curator,[trigger_1,trigger_2],[0,0,0],true, true, true ] call BIS_fnc_addCuratorAreaFromTrigger;", "local": false}, "visibleScoretable": {"syntax": "visibleScoretable", "server": false, "broadcasted": false, "description": "Checks whether the score table is visible.", "example": "_visible = visibleScoretable;", "local": false}, "BIS_fnc_VRCourseCommandingMovement2": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "isPipEnabled": {"syntax": "isPipEnabled", "server": false, "broadcasted": false, "description": "Returns true if Picture in Picture (Render to Texture) is enabled.", "example": "PIPon = isPipEnabled;", "local": false}, "BIS_fnc_rankParams": {"syntax": "[source, infoType] call BIS_fnc_rankParams", "server": false, "broadcasted": false, "description": "Return information about military rank.", "example": "_shortRank = [player, \"displayNameShort\"] call BIS_fnc_rankParams;", "local": false}, "handgunMagazine": {"syntax": "handgunMagazine unit", "server": true, "broadcasted": false, "description": "Returns either single element array, containing class name of currently loaded in the handgun magazine, or an empty array if unit has no handgun or handgun is not loaded. This command is used for infantry weapons only.", "example": "hint handgunMagazine player; //[\"16Rnd_9x21_Mag\"]", "local": false}, "set3DENLinesVisible": {"syntax": "set3DENLinesVisible [showMap, showScene]", "server": false, "broadcasted": false, "description": "Toggle visibility of Eden Editor lines.", "example": "set3DENLinesVisible [ false, false ]; Hide all lines", "local": false}, "BIS_fnc_getVirtualBackpackCargo": {"syntax": "object call BIS_fnc_getVirtualBackpackCargo", "server": false, "broadcasted": false, "description": "Get virtual backpacks from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "BIS_ammoBox call BIS_fnc_getVirtualBackpackCargo;", "local": false}, "addItemCargo": {"syntax": "box addItemCargo [item, count]", "server": false, "broadcasted": false, "description": "Creates new items and stores them in given container. Works with items, weapons and magazines. For global variant see addItemCargoGlobal", "example": "supplyBox addItemCargo [\"optic_ARCO\", 10];", "local": true}, "remove3DENConnection": {"syntax": "remove3DENConnection [type, from, to]", "server": false, "broadcasted": false, "description": "Remove connection between entities.", "example": "remove3DENConnection [\"RandomStart\",get3DENSelected \"Object\",\"marker_0\"] Remove random start on marker \"marker_0\" from all selected objects.", "local": false}, "ctrlCreate": {"syntax": "display ctrlCreate [class, idc, controlsGroup]", "server": false, "broadcasted": false, "description": "Creates a new control in the given display. The control class could be existing class from main config or custom class defined in mission config (mission config is searched first). Some of the common controls defined in main config that can be used with this command:", "example": "_display ctrlCreate [\"RscText\", 1234];", "local": false}, "BIS_fnc_crewCount": {"syntax": "param call BIS_fnc_crewCount;", "server": false, "broadcasted": false, "description": "Function that counts amount of seats, both for crew and cargo seats.", "example": "crewCount = [\"B_Heli_Light_01_F\",false] call BIS_fnc_crewCount; // Counts all available seats excluding cargo slots. Returns 6 (see notes).", "local": false}, "BIS_fnc_tridentClient": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "ctrlSetModelDirAndUp": {"syntax": "control ctrlSetModelDirAndUp [dir, up]", "server": false, "broadcasted": false, "description": "Sets orientation of 3D control model. It is similar to setVectorDirAndUp command for an object.", "example": "_ctrl3D ctrlSetModelDirAndUp [[0,1,0],[0,0,1]]; //default orientation", "local": false}, "addGoggles": {"syntax": "unit addGoggles type", "server": false, "broadcasted": false, "description": "Create a new item and try to link it into goggles slot. This command doesn't add NVGoggles. Use addItem and assignItem or just linkItem for latter.", "example": "player addGoggles \"G_Tactical_Clear\";", "local": false}, "BIS_fnc_removeCuratorIcon": {"syntax": "[object, id] call BIS_fnc_removeCuratorIcon", "server": false, "broadcasted": false, "description": "Remove icon displayed in curator interface.", "example": "[curatorModule, 5] call BIS_fnc_removeCuratorIcon;", "local": false}, "BIS_fnc_moduleTTCPTriggerBehind": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_moduleProjectile": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_shakeCuratorCamera": {"syntax": "[strength,duration,area] spawn BIS_fnc_shakeCuratorCamera", "server": false, "broadcasted": false, "description": "Shake curator camera.", "example": "[] spawn BIS_fnc_shakeCuratorCamera;", "local": false}, "BIS_fnc_respawnRounds": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Disable respawn until players of only one side (including its allies) remains, then respawn everyone at once. When \"Rounds\" respawn is used by only one side, wait until all its players are dead. Parameter(s): BOOL - true to force round end SIDE - use any side to return side affected by round system (based on description.ext respawnTemplates settings) ARRAY - empty array to return if a round is still on (players of more than one involved faction are alive) */"}, "BIS_fnc_sideID": {"syntax": "testedSide call BIS_fnc_sideID", "server": false, "broadcasted": false, "description": "Return config side number.", "example": "west call BIS_fnc_sideID; // returns 1", "local": false}, "BIS_fnc_healing": {"syntax": "call BIS_fnc_healing", "server": false, "broadcasted": false, "description": "Healing postprocess. Supposed to give healing postprocess effects.", "example": "call BIS_fnc_healing; // do NOT use", "local": false}, "BIS_fnc_formatCuratorChallengeObjects": {"syntax": "classes call BIS_fnc_formatCuratorChallengeObjects", "server": false, "broadcasted": false, "description": "Format the list of objects compatible with curator challenge to be displayed in the task descriptipon.", "example": "[\"class_1\",\"class_2\"] call BIS_fnc_formatCuratorChallengeObjects;", "local": false}, "BIS_fnc_colorRGBAtoHTML": {"syntax": "colorArray call BIS_fnc_colorRGBAtoHTML", "server": false, "broadcasted": false, "description": "Converts RGBA color format to #AARRGGBB HTML color format.", "example": "[0,0,0,1] call BIS_fnc_colorRGBAtoHTML; // will return #FF000000", "local": false}, "removeWeaponGlobal": {"syntax": "unit removeWeaponGlobal weapon", "server": true, "broadcasted": true, "description": "Remove a weapon from a unit. An attempt to remove a weapon, which is not in unit's possession, is simply ignored.", "example": "{ _x removeWeaponGlobal \"Laserdesignator\"; } forEach allUnits;", "local": false}, "BIS_fnc_manageCuratorChallenges": {"syntax": "[curator,challenges,numChallenges,rewards,defaultRewards]] call BIS_fnc_manageCuratorChallenges", "server": false, "broadcasted": false, "description": "Handle repeated curator challenges. When rewards defined in the argument are exceeded, refilling points bar fill be offered instead.", "example": "[ BIS_curator, nil, 1, [ [{ hint \"Message\" }, \"Description\" ] ] ] call BIS_fnc_manageCuratorChallenges;", "local": false}, "isInRemainsCollector": {"syntax": "isInRemainsCollector remain", "server": true, "broadcasted": false, "description": "Checks if unit or vehicle is queued for disposal after death.", "example": "if (isInRemainsCollector unit1) then {hint \"unit1 is queued for disposal\"};", "local": false}, "listVehicleSensors": {"syntax": "listVehicleSensors vehicle", "server": false, "broadcasted": false, "description": "Returns an array of the sensors in the given vehicle's config (configfile >> CfgVehicles >> vehicle >> Components >> SensorsManagerComponent >> Components).", "example": "_sensors = listVehicleSensors (vehicle player); hint str _sensors;", "local": false}, "removeAllActions": {"syntax": "removeAllActions unit", "server": true, "broadcasted": false, "description": "Removes all unit's user added actions.", "example": "removeAllActions player;", "local": false}, "BIS_fnc_diagWiki": {"syntax": "[mode] call BIS_fnc_diagWiki", "server": false, "broadcasted": false, "description": "Scans specific config folder and outputs the values in wiki format.", "example": "[\"RadioProtocol_Sent\"] call BIS_fnc_diagWiki;", "local": false}, "drawIcon3D": {"syntax": "drawIcon3D [texture, color, pos, width, height, angle, text, shadow, textSize, font, textAlign, drawSideArrows]", "server": false, "broadcasted": false, "description": "Draws an ingame icon at a given position. Command has to be executed each frame. Use onEachFrame or addMissionEventHandler \"Draw3D\". In order for the results of this command to be visible through a custom camera, enable HUD with cameraEffectEnableHUD", "example": "Icon and text:addMissionEventHandler [\"Draw3D\", { drawIcon3D [\"targetIcon.paa\", [1,1,1,1], ASLToAGL getPosASL cursorTarget, 1, 1, 45, \"Target\", 1, 0.05, \"TahomaB\"]; };", "local": false}, "BIS_fnc_initInspectable": {"syntax": "[inspectable, textureInfos, fullScreenText, soundName] call BIS_fnc_initInspectable", "server": false, "broadcasted": false, "description": "Initialize inspectable object: add \"Inspect\" action to the object. When a player activates it, full-screen detail of the objects is shown.", "example": "[myLeaflet, \"#(argb,8,8,3)color(1,0,1,1)\", \"This is some Magic Pink\"] call BIS_fnc_initInspectable; // Initialize", "local": false}, "setSimpleTaskCustomData": {"syntax": "task setSimpleTaskCustomData [IconPath, tooltip, description]", "server": false, "broadcasted": false, "description": "Set custom data for the task. Tooltip will be drawn in task list on the right side. Description will be drawn in task description panel on the bottom.", "example": "Example needed", "local": false}, "selectionNames": {"syntax": "selectionNames object", "server": false, "broadcasted": false, "description": "Returns the list of model selections", "example": "_house= \"Land_i_House_Small_02_V3_F\" createVehicle _pos; selectionNames _house; //[ // \"door_1\",\"door_2\",\"damt_1\",\"door_handle_1\",\"door_handle_2\",\"glass_1_hide\", // \"glass_2_hide\",\"glass_3_hide\",\"glass_1_unhide\",\"glass_2_unhide\",\"glass_3_unhide\", // \"glass_4_hide\",\"glass_4_unhide\" //]", "local": false}, "tvSortByValue": {"syntax": "control tvSortByValue [path, reversed]", "server": false, "broadcasted": false, "description": "Sorts children of given item by tvValue from highest to lowest by default. IDC means id of parent Tree View.", "example": "control tvSortByValue [[0], false];", "local": false}, "BIS_fnc_moduleUnlockObject": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_moduleStrategicMapImage": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "setCompassOscillation": {"syntax": "setCompassOscillation [angle, frequencyMin, frequencyMax]", "server": false, "broadcasted": false, "description": "This command sets random heading on the player's compass (both, in map and in 3D view) with given frequency, which is also randomised. To reset the compass back to defaults, execute: setCompassOscillation [-1, 0, 0];.", "example": "Set compass to oscillate every second within -90/+90 degrees: setCompassOscillation [rad 90, 1, 1];", "local": false}, "BIS_fnc_sideType": {"syntax": "sideID call BIS_fnc_sideType;", "server": false, "broadcasted": false, "description": "Returns side type based on side ID. See BIS_fnc_sideID for more information.", "example": "0 call BIS_fnc_sideType;//Returns EAST", "local": false}, "ctrlParentControlsGroup": {"syntax": "ctrlParentControlsGroup ctrl", "server": false, "broadcasted": false, "description": "Returns the parent control of a given child control", "example": "_ctrlCombo = _ctrl controlsGroupCtrl 100;//Control ctrlParentControlsGroup _ctrlCombo;//Parent control group (_ctrl)", "local": false}, "tvSetPictureRightColorDisabled": {"syntax": "control tvSetPictureRightColorDisabled [path, color]", "server": false, "broadcasted": false, "description": "Sets the color of the right picture of a tree item defined by path when item is disabled", "example": "_control tvSetPictureRightColorDisabled [[0], [1,0,1,1]]", "local": false}, "remoteExec": {"syntax": "params remoteExec [functionName, targets, JIP]", "server": false, "broadcasted": false, "description": "Asks server to execute given scripted function or script command on given target PC. The environment chosen for the execution is as follows:", "example": "// runs hint \"hello\" on each connected client \"hello\" remoteExec [\"hint\"];", "local": false}, "removeAllCuratorEditingAreas": {"syntax": "removeAllCuratorEditingAreas curatorObj", "server": false, "broadcasted": false, "description": "Delete all curator edit areas.", "example": "removeAllCuratorEditingAreas myCurator;", "local": false}, "BIS_fnc_missileLaunchPositionFix": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Workaround fix for ATGM/SAM launch positions Parameter(s): 0: OBJECT - vehicle 1: OBJECT - projectile 2: STRING - selection to adjust missile's position to 3: STRING - type of projectile that should be adjusted Returns: BOOL - success Example: [_vehicle,_missile,\"missile_move\",\"MissileBase\"] call BIS_fnc_missileLaunchPositionFix */"}, "getSlingLoad": {"syntax": "getSlingLoad vehicle", "server": false, "broadcasted": false, "description": "Return object which is sling loaded by vehicle", "example": "_cargo = getSlingLoad heli1;", "local": false}, "BIS_fnc_briefingInit": {"syntax": "marker call BIS_fnc_briefingInit", "server": false, "broadcasted": false, "description": "Initialize animated briefing markers.", "example": "\"marker_1\" call BIS_fnc_briefingInit;", "local": false}, "BIS_fnc_taskDescription": {"syntax": "taskName call BIS_fnc_taskDescription", "server": false, "broadcasted": false, "description": "Return a task's description.", "example": "\"BIS_task_01\" call BIS_fnc_taskDescription;", "local": false}, "BIS_fnc_limitSupport": {"syntax": "[caller, supportType, quantity] call BIS_fnc_limitSupport", "server": false, "broadcasted": false, "description": "Limits support runs during a mission.", "example": "[player, \"Transport\", -1] call BIS_fnc_limitSupport;", "local": false}, "addMagazineGlobal": {"syntax": "unit addMagazineGlobal magazineName", "server": true, "broadcasted": true, "description": "Adds a magazine to the unit. Note: You may create invalid combinations by adding more magazines than the free space in unit's inventory allows. When doing so, application behaviour is undefined.", "example": "player addMagazineGlobal \"30Rnd_65x39_caseless_mag\";", "local": false}, "BIS_fnc_bloodEffect": {"syntax": "[10] call BIS_fnc_bloodEffect;", "server": false, "broadcasted": false, "description": "Adds the bleeding effect post-processing effect to the players screen.", "example": "[10] call BIS_fnc_bloodEffect; // Adds the blood effect for 10 (milli)seconds.", "local": false}, "attachedTo": {"syntax": "attachedTo object", "server": true, "broadcasted": false, "description": "Returns the object it is attached to.", "example": "if (isNull attachedTo _obj1) then { hint \"_obj1 is not attached to anything.\"; };", "local": false}, "BIS_fnc_diagMacrosMapSize": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Prints mapSize values based on real object size and copies it to clipboard. Mission has to be running on order to get the values. Parameter(s): 0: CONFIG or ARRAY - either config container, or list of classes or classnames 1: STRING - output mode, can be on of following: \"wiki\" - wiki table \"config\" - #define macros with model dimension values \"config_current\" - #define macros with current config values 2: ARRAY - list of classnames which will be excluded from the scan Returns: STRING */"}, "customChat": {"syntax": "unit customChat [channel, message]", "server": true, "broadcasted": false, "description": "Sends the chat message to the custom radio channel. The radio channel needs to be created on the server before hand, with radioChannelCreate command.", "example": "_unit customChat [1, \"Hi, I am a custom chat message\"];", "local": false}, "setSystemOfUnits": {"syntax": "setSystemOfUnits value", "server": false, "broadcasted": false, "description": "Set system of units. This will only impact gauges from advanced flight model.", "example": "if (player in _myHelicopter) then { setSystemOfUnits 2; };", "local": false}, "ReportRemoteTarget": {"server": false, "broadcasted": false, "local": false}, "BIS_fnc_liveFeedModuleInit": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Display a live feed via a module. Parameters: _this: OBJECT - Live Feed - Init module */ // Need not be run on dedicated servers"}, "BIS_fnc_endMissionServer": {"syntax": "endType call BIS_fnc_endMissionServer", "server": false, "broadcasted": false, "description": "Ends the mission properly for all players in a multiplayer environment.", "example": "\"SideScore\" call BIS_fnc_endMissionServer;", "local": false}, "currentWeaponTurret": {"syntax": "vehicle currentWeaponTurret [turret path]", "server": false, "broadcasted": false, "description": "Returns the name of the currently selected weapon on specified turret. Use turret path [-1] for driver's turret.", "example": "_weapon = MBT_Kuma currentWeaponTurret [0];", "local": false}, "getCenterOfMass": {"syntax": "getCenterOfMass object", "server": true, "broadcasted": false, "description": "Returns center of mass of an object.", "example": "_com = getCenterOfMass _myCar;", "local": false}, "animateDoor": {"syntax": "object animateDoor [doorname, phase, instant]", "server": true, "broadcasted": true, "description": "Animates a door on a vehicle. Animation is defined in config file in CfgVehicles -> AnimationSources. Wanted animation phase is set with phase param. This command works only on animation sources with \"door\" controller. Door_L in the example below can be animated with animateDoor but not CargoRamp_Open: heli animateDoor [\"Door_L\", 1];", "example": "Taru animateDoor [\"Door_1_source\", 1];", "local": false}, "BIS_fnc_InstructorFigure": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/******************************************************************************* Version: 0.1 Name: Instructor Figure DESCRIPTION: www. PARAMETERS: 1) function called - string, list of functions: - Init - Destroy 2) parameter for the function For more informations see https://wiki.bistudio.com/index.php/A3_InstructorFigure RETURNED VALUE: depends on the function called TODO: + PlayTopic + Fade out New Intel text + wait for TAB press + use functions for dynamic text - kbTell support - logging + rework data structure (add, remove, search) - ContainerExists function + display only if difficulty is low + disableSerialization + GetTopics should return array, not just debuglog info + deny play more than one topic in a time + Localize + check and fix return values of functions + correct debuglog informations - deny addtopic during playing + safe work with BIS_GroupCommunication - dont overwrite user menus + remove INSTRUCTOR FIGURE from BIS_GroupCommunication + PlayTopicRandom - rule exceeding selection of a previous sentence *******************************************************************************/ //Variables"}, "BIS_fnc_diagPreviewVehicleCrew": {"syntax": "[class, numVeh, distance] call BIS_fnc_diagPreviewVehicleCrew", "server": false, "broadcasted": false, "description": "Creates vehicles with their crew.", "example": "[\"B_MRAP_01_F\", [5,5], 10] call BIS_fnc_diagPreviewVehicleCrew;", "local": false}, "addItemPool": {"syntax": "addItemPool [itemName, count]", "server": false, "broadcasted": false, "description": "Adds count items of type name into the weapon pool (used in the campaign to transfer items to the next mission)", "example": "addItemPool [\"ItemGPS\", 5];", "local": false}, "tvSetPictureColorSelected": {"syntax": "control tvSetPictureColorSelected [path, color]", "server": false, "broadcasted": false, "description": "Sets the color of the left picture of a tree item defined by path when item is selected", "example": "_control tvSetPictureColorSelected [[0], [1,0,1,1]]", "local": false}, "queryItemsPool": {"syntax": "queryItemsPool name", "server": false, "broadcasted": false, "description": "Returns the number of items of type in the weapon pool (used in campaigns to transfer weapons to the next mission).", "example": "Example needed", "local": false}, "BIS_fnc_netId": {"syntax": "objOrGrp call BIS_fnc_netId;", "server": false, "broadcasted": false, "description": "Extends MP-only netId functionality to SP", "example": "_objNetId = player call BIS_fnc_netId; // \"0:2\"", "local": false}, "BIS_fnc_diagKnownTargets": {"syntax": "[target, radius] call BIS_fnc_diagKnownTargets", "server": false, "broadcasted": false, "description": "Visualize and profile which units one specific unit knows about and how much. Calling function again stops diagnostics.", "example": "call BIS_fnc_diagKnownTargets;", "local": false}, "BIS_fnc_addRespawnPosition": {"syntax": "[<target>,<position>] call BIS_fnc_addRespawnPosition;", "server": false, "broadcasted": false, "description": "Add a respawn position for respawn menu.", "example": "[west, myRespawnAPC] call BIS_fnc_addRespawnPosition;", "local": false}, "simulInClouds": {"syntax": "simulInClouds pos", "server": false, "broadcasted": false, "description": "Returns if given position is in clouds.", "example": "simulInClouds (getPos player)", "local": false}, "configProperties": {"syntax": "configProperties [config, condition, inherit]", "server": false, "broadcasted": false, "description": "Returns an array of config entries which meet criteria in condition code. Command iterates through available classes and config properties for given config entry. If 3rd param is true the search also includes inherited properties. Current looked at config is stored in _x variable (similar to alternative count command implementation). Condition has to return true in order for the looked at property to be added to the resulting array. A bit slower than configClasses but allows to access inherited entires.", "example": "_configs = configProperties [configFile >> \"CfgVehicles\" >> \"O_Truck_02_box_F\"];", "local": false}, "getMissionConfigValue": {"syntax": "getMissionConfigValue attribute", "server": false, "broadcasted": false, "description": "Returns value of the given scenario attribute from the 1st tier. Since only config properties have values, the attribute should be config property. If it is not found or config class is given, the return is nil. If the attribute defined in multiple places, the command checks them in the following order:", "example": "_respawnDelay = getMissionConfigValue [\"respawnDelay\",0] Returns respawn delay value. Replaces the previous approach which would scan only the external Description.ext file, but ignore the value set in the Eden Editor: _respawnDelay = getNumber (missionConfigFile >> \"respawnDelay\"); // Old approach", "local": false}, "ctrlChecked": {"syntax": "ctrlChecked control", "server": false, "broadcasted": false, "description": "Returns the current state of given checkbox in checkboxes control (CT_CHECKBOXES type 7 of Dialog Control). Since Arma 3 v1.71.141591 it is possible to query multiple checkboxes by providing checkbox index. For more information see DialogControls-CheckBoxes.", "example": "ctrlChecked _control;", "local": false}, "BIS_fnc_setCuratorCamera": {"syntax": "[camPos,targetPos,time] spawn BIS_fnc_setCuratorCamera", "server": false, "broadcasted": false, "description": "Move curator camera to a position and direction. Finished when animation ends.", "example": "[nil,player,5] spawn BIS_fnc_setCuratorCamera;", "local": false}, "addBackpackGlobal": {"syntax": "unit addBackpackGlobal backpack", "server": true, "broadcasted": true, "description": "Adds a backpack to a unit (even non-local)", "example": "player addBackpackGlobal \"B_AssaultPack_khk\";", "local": false}, "getMissionConfig": {"syntax": "getMissionConfig attribute", "server": false, "broadcasted": false, "description": "Returns Config entry for the given scenario attribute from the 1st tier. The attribute can be config class or config property. If it is defined in multiple places, the command checks them in the following order:", "example": "_header = getMissionConfig \"Header\" Returns scenario header config. Replaces the previous approach which would scan only the external Description.ext file, but ignore the value set in the Eden Editor: _header = missionConfigFile >> \"Header\"; // Old approach", "local": false}, "BIS_fnc_replaceWithSimpleObject": {"syntax": "[object] call BIS_fnc_replaceWithSimpleObject", "server": false, "broadcasted": false, "description": "Replaces object with simple object. Object must not contain any crew and must be placed on ground.", "example": "[tank] call BIS_fnc_replaceWithSimpleObject;", "local": false}, "lbSetPictureColorSelected": {"syntax": "lbSetPictureColorSelected [idc, index, color]", "server": false, "broadcasted": false, "description": "Sets the selected color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.", "example": "lbSetPictureColorSelected [101, 0, [0, 1, 0, 0.5]];", "local": false}, "allDeadMen": {"syntax": "allDeadMen", "server": false, "broadcasted": false, "description": "Return a list of dead units including agents. Dead unit might be inside vehicle.", "example": "{ deleteVehicle _x } forEach allDeadMen;", "local": false}, "BIS_fnc_StrategicMapOpen": {"syntax": "[display,pos,missions,ORBATs,markers,images,weather,night,scale,simulation,label,missionName,missionIcon] call BIS_fnc_StrategicMapOpen", "server": false, "broadcasted": false, "description": "Creates a strategic map.", "example": "[ findDisplay 46, [2000,2000,0], [ [ [2000,2000,0], {systemChat format [\"%1\",name ((_this # 9) # 0)]}, \"1st Mission\", \"This is mission one\", \"Name of mission's player\", \"\\A3\\Data_F_Exp\\Logos\\arma3_exp_icon_ca.paa\", 1.5, [ player ] ], [ [1000,1000,0], {systemChat format [\"%1\",name ((_this # 9) # 0)]}, \"2nd Mission\", \"This is mission two\", \"Name of mission's player\", \"\\A3\\Data_F_Argo\\Logos\\arma3_argo_logoTitle_ca.paa\", 1.5, [ player ] ] ], [ [ [3000,3000,0], configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1_2\", configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1\", [], 10 ] ], [ \"marker_1\", \"marker_2\" ], [ [ \"\\A3\\Ui_f\\data\\Logos\\arma3_white_ca.paa\", [0,0,0,1], [4000,4000,0], 8, 8, 0, \"Arma 3 Logo\", true ] ], 0, false, 1, true, \"Strategic Map Example\", false, \"\\A3\\Ui_f\\data\\Logos\\arma3_white_ca.paa\" ] call BIS_fnc_StrategicMapOpen;", "local": false}, "BIS_fnc_paramDaytime": {"syntax": "datetime call BIS_fnc_paramDaytime", "server": false, "broadcasted": false, "description": "Sets time of the day to the hour. Minutes will always be zero.", "example": "_date = 12 call BIS_fnc_paramDaytime;", "local": false}, "BIS_fnc_setCuratorAttributes": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Set which attributes are available for given entity or entity type. Parameter(s): 0: OBJECT - curator 1: STRING - general setting for all entities of the given type, can be \"object\", \"player\", \"group', \"waypoint\" or \"marker\" OBJECT - setting for specific object, overrides general settings GROUP - setting for specific group, overrides general settings 2: ARRAY of STRINGs - attributes object: Skill UnitPos Rank Damage Fuel Lock RespawnVehicle RespawnPosition Exec group: GroupID Behaviour Formation waypoint: Behaviour Formation marker: MarkerText MarkerColor Returns: BOOL */"}, "openSteamApp": {"syntax": "openSteamApp appID", "server": false, "broadcasted": false, "description": "Opens a Steam application, returns false if it wasn't possible to run the application.", "example": "openSteamApp 553228", "local": false}, "BIS_fnc_objectVar": {"syntax": "[object, varNameRoot] call BIS_fnc_objectVar", "server": false, "broadcasted": false, "description": "Return a unique object variable. The variable is preserved after unit respawn.", "example": "hint str (player call BIS_fnc_objectVar); // \"bis_o1\" hint str (player == (missionNamespace getVariable \"bis_o1\")); // true", "local": false}, "ctSetHeaderTemplate": {"syntax": "Control ctSetHeaderTemplate Config", "server": false, "broadcasted": false, "description": "Takes config path to the new header template. Clears the whole RscControlsTable and sets the new header template.", "example": "_control ctSetHeaderTemplate _configPath;", "local": true}, "getVehicleCargo": {"syntax": "getVehicleCargo storingVehicle", "server": true, "broadcasted": true, "description": "Get a list of vehicles loaded as cargo inside this vehicle. The returned array is in the order the cargo vehicles were added to containing vehicle.", "example": "_vehicleCargo = getVehicleCargo blackfish; // returns [] if empty", "local": false}, "BIS_fnc_moduleCuratorAddEditableObjects": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "addCuratorPoints": {"syntax": "curatorObj addCuratorPoints points", "server": false, "broadcasted": false, "description": "Adds or removes curator points. Points can be only in range from 0 to 1.", "example": "curatorModule addCuratorPoints 0.5", "local": false}, "vestItems": {"syntax": "vestItems unit", "server": false, "broadcasted": false, "description": "Get array with all items (of any kind, even weapons) from vest.", "example": "vestItems player;", "local": false}, "removeItem": {"syntax": "unit removeItem item", "server": true, "broadcasted": true, "description": "Removes item from the inventory.", "example": "bluforUnit unassignItem \"NVGoggles\"; bluforUnit removeItem \"NVGoggles\"; opforUnit unassignItem \"NVGoggles_OPFOR\"; opforUnit removeItem \"NVGoggles_OPFOR\"; independentUnit unassignItem \"NVGoggles_INDEP\"; independentUnit removeItem \"NVGoggles_INDEP\";", "local": false}, "BIS_fnc_removeStackedEventHandler": {"syntax": "[id, event] call BIS_fnc_removeStackedEventHandler;", "server": false, "broadcasted": false, "description": "Removes a stacked event handler with specified custom id.", "example": "[\"someId\", \"onEachFrame\"] call BIS_fnc_removeStackedEventHandler;", "local": false}, "BIS_fnc_VRCoursePlaceables1": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "checkVisibility": {"syntax": "[ignore, LOD, ignore2] checkVisibility [beg, end]", "server": false, "broadcasted": false, "description": "Checks if one position is visible from another position and how much. The results can be affected by getTerrainGrid value, especially if position is near the ground. Particle effects such as smoke can also affect the results.", "example": "_cansee = [objNull, \"VIEW\"] checkVisibility [eyePos player, eyePos unit1];", "local": false}, "diag_activeScripts": {"syntax": "diag_activeScripts", "server": false, "broadcasted": false, "description": "Returns 4 element array with numbers of currently running scripts in format: [spawn-ed, execVM-ed, exec-ed, execFSM-ed]", "example": "hint str diag_activeScripts; //[0,0,0,1]", "local": false}, "BIS_fnc_getParamValue": {"syntax": "paramClass call BIS_fnc_getParamValue;", "server": false, "broadcasted": false, "description": "Returns the value of mission param given by the class name. This function is global and will return selected param value on any PC including JIP. For backward compatibility it also supports \"param1\" and \"param2\".", "example": "_viewDistance = \"ViewDistance\" call BIS_fnc_getParamValue;", "local": false}, "removeMissionEventHandler": {"syntax": "removeMissionEventHandler [type, index]", "server": false, "broadcasted": false, "description": "Removes mission event handler added by addMissionEventHandler. When any handler is removed, all handler indices higher that the deleted one should be decremented.", "example": "for \"_i\" from 0 to 4 do { missionNamespace setVariable [ format [\"handler%1\",_i],addMissionEventHandler [\"Loaded\",\"hint \"\"_i\"\";\"]]; }; removeMissionEventHandler [\"Loaded\",handler2]; //Remove the third index under type \"Loaded\"", "local": false}, "vectorFromTo": {"syntax": "vector1 vectorFromTo vector2", "server": false, "broadcasted": false, "description": "Unit vector, equal to direction from vector1 to vector2. In other words this command produces vectorNormalized between given 2 points. To get a normal vector use vectorDiff.", "example": "[1,2,3] vectorFromTo [4,5,6]; //[0.57735,0.57735,0.57735] //is the same as vectorNormalized ([4,5,6] vectorDiff [1,2,3]); //[0.57735,0.57735,0.57735]", "local": false}, "BIS_fnc_enemyTargets": {"syntax": "unit call BIS_fnc_enemyTargets", "server": false, "broadcasted": false, "description": "Return list of nearby enemy targets for given unit.", "example": "_targets = _unit call BIS_fnc_enemyTargets;", "local": false}, "BIS_fnc_enemySides": {"syntax": "input call BIS_fnc_enemySides;", "server": false, "broadcasted": false, "description": "Returns sides hostile to the given side / object.", "example": "player call BIS_fnc_enemySides;", "local": false}, "vectorMagnitude": {"syntax": "vectorMagnitude vector", "server": false, "broadcasted": false, "description": "Magnitude of a 3D vector.", "example": "_size = vectorMagnitude [0,3,4]; //5", "local": false}, "BIS_fnc_moduleFriendlyFire": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/******************************************************************************* Version: 2.0 Name: Friendly Fire Author: Zozo DESCRIPTION: Handles the friendly fire. Use either the module interface in the editor, or call individual functions. PARAMETERS: 1) function called - string, list of functions: - Init - Destroy - AddUnits - RemoveUnits - ChangePriority - ListActiveUnit 2) parameter for the function RETURNED VALUE: depends on the function called EXAMPLES: // Initializes the module if not added in editor // No units are directly checked for friendly fire, but renegade state is checked anyway _ret = [ \"Init\", [] ] call BIS_fnc_moduleFriendlyFire // Initializes the module if not added in editor // BIS_vip1, BIS_vip2, BIS_noVip units are directly checked for friendly fire x = [ \"Init\", [ [ BIS_vip1, BIS_vip2, BIS_noVip],true ] ] call BIS_fnc_moduleFriendlyFire // De-initializes the module _ret = [ \"Destroy\" ] call BIS_fnc_moduleFriendlyFire // Add BIS_vip3 unit to be checked for friendly fire x = [ \"AddUnits\", [ [BIS_vip3] ] ] call BIS_fnc_moduleFriendlyFire // Remove BIS_vip1 unit from active units x = [ \"RemoveUnits\", [ [ BIS_vip1 ] ] ] call BIS_fnc_moduleFriendlyFire // set another priority for a vehicle- if it is hit once, considered as friendly fire x = [ \"ChangePriority\", [BIS_vip,1] ] call BIS_fnc_moduleFriendlyFire *******************************************************************************/"}, "removeItemFromUniform": {"syntax": "unit removeItemFromUniform item", "server": true, "broadcasted": true, "description": "Removes item from soldier's uniform. Can be used with magazines and weapons too.", "example": "Example needed", "local": false}, "leaderboardGetRows": {"syntax": "leaderboardGetRows boardName", "server": false, "broadcasted": false, "description": "Returns an array with values for the given leaderboard, the array is in format: [[player1Name, score, rank], [player2Name, score, rank], [player3Name, score, rank] ... ]; This can be called after the one of the row request function has been called and successfully finished!", "example": "leaderboardGetRows \"TT01\"", "local": false}, "BIS_fnc_ORBATGetGroupParams": {"syntax": "[path] call BIS_fnc_ORBATGetGroupParams", "server": false, "broadcasted": false, "description": "Returns group params from CfgORBAT.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\" ] call BIS_fnc_ORBATGetGroupParams;", "local": false}, "vehicleReportOwnPosition": {"syntax": "vehicleReportOwnPosition vehicle", "server": false, "broadcasted": false, "description": "Gets whether the vehicle shares its own position via datalink with the Side center.", "example": "vehicleReportOwnPosition (vehicle player);", "local": false}, "BIS_fnc_modulePositioning": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_moduleMPTypeSeize": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "enablePersonTurret": {"syntax": "vehicle enablePersonTurret [turretPath, enable]", "server": false, "broadcasted": false, "description": "Enables or disables firing from a vehicle cargo position. To get the turret path use assignedVehicleRole or getCargoIndex command.", "example": "heli enablePersonTurret [[1],true];", "local": false}, "BIS_fnc_effectFiredRifle": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_animViewer": {"syntax": "call BIS_fnc_animViewer", "server": false, "broadcasted": false, "description": "Splendid\u2122 Animation Viewer.", "example": "call BIS_fnc_animViewer;", "local": false}, "getMousePosition": {"syntax": "getMousePosition", "server": false, "broadcasted": false, "description": "Returns mouse position in UI coordinates.", "example": "_pos = getMousePosition;", "local": false}, "ctrlModelScale": {"syntax": "ctrlModelScale control", "server": false, "broadcasted": false, "description": "Returns 3D control model scale", "example": "_currentScale = ctrlModelScale _ctrl3D;", "local": false}, "BIS_fnc_target": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "addPrimaryWeaponItem": {"syntax": "unit addPrimaryWeaponItem item", "server": false, "broadcasted": true, "description": "Adds weapon item to the weapon cargo space. This is used for infantry weapons.", "example": "player addPrimaryWeaponItem \"muzzle_snds_H\";", "local": true}, "setLocalWindParams": {"syntax": "setLocalWindParams [strength, diameter]", "server": false, "broadcasted": false, "description": "Sets parameters for helicopter rotor wash. Visually it affects how much the grass and bushes bend under a helicopter and how big is the area of the effect. Default [1.0, 1.0].", "example": "setLocalWindParams [10, 5];", "local": false}, "BIS_fnc_moduleAI": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_textureMarker": {"syntax": "[wantedMarker] call BIS_fnc_textureMarker", "server": false, "broadcasted": false, "description": "Checks whether texture is defined in CfgMarkers and if so, returns the marker texture.", "example": "_notWhiteFlag = [\"flag_France\"] call BIS_fnc_textureMarker;", "local": false}, "BIS_fnc_taskType": {"example": "_taskType:string = [_taskId:string] call BIS_fnc_taskType;", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Returns type of given task. Parameters: 0: STRING - task id Returns: STRING - task type or type 'Default' if not defined */"}, "BIS_fnc_showMarkers": {"syntax": "[action, markers] call BIS_fnc_showMarkers", "server": false, "broadcasted": false, "description": "Show or hide given markers using fade effect.", "example": "[\"hide\", [\"respawn_west\", \"respawn_east\"]] call BIS_fnc_showMarkers;", "local": false}, "load": {"syntax": "load unit", "server": false, "broadcasted": false, "description": "Returns current sum of mass from items stored in all unit's containers. Load is calculated by the following formula: _loadPlayer = loadAbs player / getNumber (configFile >> \"CfgInventoryGlobalVariable\" >> \"maxSoldierLoad\");", "example": "load player;", "local": false}, "triggerTimeoutCurrent": {"syntax": "triggerTimeoutCurrent trigger", "server": true, "broadcasted": false, "description": "Returns current timeout of the given trigger or -1 if countdown is not in progress.", "example": "_remaining = triggerTimeoutCurrent _trigger;", "local": false}, "BIS_fnc_addVirtualWeaponCargo": {"syntax": "[object,weaponClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualWeaponCargo", "server": false, "broadcasted": false, "description": "Add virtual weapons to an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualWeaponCargo;", "local": false}, "BIS_fnc_holdActionAdd": {"syntax": "[target, title, idleIcon, progressIcon, conditionShow, conditionProgress, codeStart, codeProgress, codeCompleted, codeInterrupted, arguments, duration, priority, removeCompleted, showUnconscious] call BIS_fnc_holdActionAdd", "server": false, "broadcasted": false, "description": "Adds an action to an object which requires the user to hold a key to perform the action.", "example": "[player, \"Kill\", \"\", \"\", \"true\", \"true\", { hint \"Started!\" }, { systemChat str (_this select 3) }, { player setDamage 1 }, { hint \"Afraid of death?\" }, [], 10, nil, true, false] call BIS_fnc_holdActionAdd;", "local": false}, "actionParams": {"syntax": "entity actionParams id", "server": false, "broadcasted": false, "description": "Returns Array with params for given user action id (similar to addAction param array). The output array is of the following format: [title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, radius, unconscious, textWindowBackground, textWindowForeground, selection], where:", "example": "_params = player actionParams 0;", "local": false}, "everyContainer": {"syntax": "everyContainer box", "server": false, "broadcasted": false, "description": "Returns array of all containers (uniforms, vests, backpacks) stored in given crate or vehicle. Used for accessing containers content stored in ammo box or ground holder.", "example": "everyContainer cursorTarget;", "local": false}, "getRepairCargo": {"syntax": "getRepairCargo vehicle", "server": true, "broadcasted": false, "description": "Returns the amount of repair resources from empty (0) to full (1) in the cargo space of a repair vehicle.", "example": "value = getRepairCargo vehicleName;", "local": false}, "BIS_fnc_moduleRadioChannelCreate": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "deleteRange": {"syntax": "array deleteRange [from, count]", "server": false, "broadcasted": false, "description": "Removes a range of array elements from the given array (modifies the original array, just like resize or set).", "example": "_arr = [1,2,3,4,5,6]; _arr deleteRange [1,4]; hint str _arr; //[1,6]", "local": false}, "getArtilleryAmmo": {"syntax": "getArtilleryAmmo [unit1, unit2, unit3....]", "server": true, "broadcasted": false, "description": "Get list of all available magazines of artillery units on the list. Command returns only unique magazine types and doesn't contain any information about which unit has which magazine.", "example": "if (\"8Rnd_82mm_Mo_Flare_white\" in getArtilleryAmmo [ _mortar1, _mortar2, _mortar3, _mortar4 ]) then { hint \"Sir, we have white flares, sir!\"; };", "local": false}, "hasPilotCamera": {"syntax": "hasPilotCamera object", "server": true, "broadcasted": false, "description": "Returns true if the object airplane or helicopter has a pilotCamera.", "example": "hasPilotCamera vehicle player", "local": false}, "BIS_fnc_setUnitInsignia": {"syntax": "[target , className] call BIS_fnc_setUnitInsignia", "server": false, "broadcasted": false, "description": "Sets unit insignia (e.g., shoulder insignia on soldiers). See Arma 3 Unit Insignia for more details. This function is global and should work from any client. Do not remote execute", "example": "Place insignia: [player, \"111thID\"] call BIS_fnc_setUnitInsignia;", "local": false}, "mineDetectedBy": {"syntax": "mine mineDetectedBy faction", "server": false, "broadcasted": false, "description": "Returns true if mine has been detected by a given side", "example": "(allMines select 0) mineDetectedBy west;", "local": false}, "BIS_fnc_showRespawnMenuDisableItem": {"syntax": "[mode, uiControl, item, message] call BIS_fnc_showRespawnMenuDisableItem;", "server": false, "broadcasted": false, "description": "Limits respawn loadout or role for Arma 3 Respawn.", "example": "[\"disable\",uiNamespace getVariable \"BIS_RscRespawnControlsMap_ctrlRoleList\",2,\"Restricted for this part of mission!\"] call BIS_fnc_showRespawnMenuDisableItem;", "local": false}, "addCuratorEditableObjects": {"syntax": "curatorObj addCuratorEditableObjects [objects,addCrew]", "server": false, "broadcasted": false, "description": "Register objects which can be edited by a curator.", "example": "curatorModule addCuratorEditableObjects [[car],true ];", "local": false}, "BIS_fnc_liveFeedSetSource": {"syntax": "source call BIS_fnc_liveFeedSetSource", "server": false, "broadcasted": false, "description": "Set the source of the current live feed.", "example": "[player, [0, 0.25, 1.6]] call BIS_fnc_liveFeedSetSource;", "local": false}, "lbSetSelectColorRight": {"syntax": "lbSetSelectColorRight [idc, index, color]", "server": false, "broadcasted": false, "description": "Sets the select color of the of the secondary text (right aligned) of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.", "example": "lbSetSelectColorRight [101, 0, [0, 1, 0, 0.5]];", "local": false}, "BIS_fnc_executeStackedEventHandler": {"syntax": "[EHType] call BIS_fnc_executeStackedEventHandler", "server": false, "broadcasted": false, "description": "This function executes the stacked items.", "example": "[\"onEachFrame\"] call BIS_fnc_executeStackedEventHandler;", "local": false}, "BIS_fnc_VRSpawnSelector": {"syntax": "[center, type] call BIS_fnc_VRSpawnSelector", "server": false, "broadcasted": false, "description": "Spawns the course selector (used primarily for VR missions).", "example": "[ [0,0,0], \"exit\" ] call BIS_fnc_VRSpawnSelector;", "local": false}, "allUnitsUAV": {"syntax": "allUnitsUAV", "server": false, "broadcasted": false, "description": "Return a list of all UAV vehicles.", "example": "hint format [\"No. of UAV(s) on the map:\u00a0%1\", count allUnitsUAV];", "local": false}, "BIS_fnc_curatorObjectEdited": {"syntax": "[module, object] call BIS_fnc_curatorObjectEdited", "server": false, "broadcasted": false, "description": "Code executed when curator object is edited (i.e., moved or rotated). When a soldier or a vehicle is moved high above ground, create a parachute for them.", "example": "[ module_curator, someObject ] call BIS_fnc_curatorObjectEdited;", "local": false}, "BIS_fnc_drawCuratorRespawnMarkers": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Create a curator icon on every respawn marker Parameter(s): 0: OBJECT - curator module 1: ARRAY of SIDEs Returns: BOOL */"}, "enableUAVConnectability": {"syntax": "object enableUAVConnectability [uav, checkAllItems]", "server": false, "broadcasted": false, "description": "Enables unit's AV terminal(s) connecting to UAV.", "example": "unit enableUAVConnectability [uav,true];", "local": false}, "BIS_fnc_exportEditorPreviews": {"syntax": "[duration, type, sides, mods, addons] spawn BIS_fnc_exportEditorPreviews", "server": false, "broadcasted": false, "description": "Export screeenshots of objects for Eden Editor and Community Wiki to <Arma 3 Profile>\\Screenshots\\EditorPreviews directory.", "example": "// All objects [] spawn BIS_fnc_exportEditorPreviews;", "local": false}, "BIS_fnc_moduleObjectiveRaceCP": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "allMines": {"syntax": "allMines", "server": false, "broadcasted": false, "description": "Returns an array of all mines in the mission", "example": "allMines", "local": false}, "BIS_fnc_moduleInit": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "isCollisionLightOn": {"syntax": "isCollisionLightOn vehicle", "server": true, "broadcasted": false, "description": "Returns true if vehicle collision lights are on otherwise false.", "example": "_collisionLightOn = isCollisionLightOn heli;", "local": false}, "removeSecondaryWeaponItem": {"syntax": "unit removeSecondaryWeaponItem item", "server": false, "broadcasted": true, "description": "Removes given weapon item from the secondary weapon cargo space. This command also supports weapon magazines.", "example": "player removeSecondaryWeaponItem (secondaryWeaponItems select 0);", "local": true}, "BIS_fnc_markWaypoints": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Creates a marker on each uncompleted waypoint and marks it checked after completing that WP. Note: \"On Activation\" WP code is used for handling the markers; if this code is overwritten during the course, it can break this functionality Parameter(s): _this select 0: OBJECT - unit who will have its waypoints marked _this select 1 (Optional, use \"\" for default): STRING - text of hint shown after completing a waypoint,\u00a0%1 is used for WP number (default \"\") _this select 2 (Optional, use [] for default): ARRAY of STRINGS - marker text format for [uncompleted, completed] waypoints,\u00a0%1 is used for WP number (default [\"%1\", \"%1\"]) _this select 3 (Optional, use [] for default): ARRAY of STRINGS - marker icon for [uncompleted, completed] waypoints (default [\"mil_circle\", \"mil_circle\"]) _this select 4 (Optional, use [] for default): ARRAY of STRINGS - marker color for [uncompleted, completed] waypoints (default [\"ColorRed\", \"ColorGreen\"]) _this select 5 (Optional, use [] for default): ARRAY of NUMBERS - marker size for [uncompleted, completed] waypoints (default [0.75, 0.75]) Returns: NOTHING */"}, "curatorWaypointCost": {"syntax": "curatorWaypointCost curatorObj", "server": false, "broadcasted": false, "description": "Return current price for placing waypoints (curator specific).", "example": "Example needed", "local": false}, "ropeUnwound": {"syntax": "ropeUnwound rope", "server": false, "broadcasted": false, "description": "False if unwinding in progress, otherwise true", "example": "_isUnwound = ropeUnwound (ropes heli1 select 0);", "local": false}, "flyInHeightASL": {"syntax": "aircraft flyInHeightASL params", "server": false, "broadcasted": false, "description": "Sets the minimal ASL height. Final height is max(flyInHeight, flyInHeightASL).", "example": "cobraOne flyInHeightASL [200, 100, 400];", "local": false}, "BIS_fnc_initModules": {"syntax": "[modules] call BIS_fnc_initModules", "server": false, "broadcasted": false, "description": "Wait until all modules using the Arma 3 Module Framework are initialized.", "example": "[module_1,module_2] call BIS_fnc_initModules;", "local": false}, "enginesTorqueRTD": {"syntax": "enginesTorqueRTD RTD_helicopter", "server": false, "broadcasted": false, "description": "Torque produced by engines in N\u00b7m (Newton*meter)", "example": "_UH80_E1 = (enginesTorqueRTD _UH80) select 0;//engine 1 Torque _UH80_E2 = (enginesTorqueRTD _UH80) select 1;//engine 2 Torque", "local": false}, "BIS_fnc_getRespawnMarkers": {"syntax": "[side,vehicleMarkers] call BIS_fnc_getRespawnMarkers", "server": false, "broadcasted": false, "description": "Returns all respawn markers for given side.", "example": "[west, false] call BIS_fnc_getRespawnMarkers;", "local": false}, "BIS_fnc_StrategicMapAnimate": {"syntax": "[target,time] spawn BIS_fnc_StrategicMapAnimate", "server": false, "broadcasted": false, "description": "Animates a Strategic Map.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1_2\", 5] spawn BIS_fnc_StrategicMapAnimate;", "local": false}, "BIS_fnc_terrainGradAngle": {"example": "_radGrad = [getPos player, getDir player] call BIS_fnc_terrainGradAngle;", "server": false, "broadcasted": false, "local": false, "description": "Returns the gradient angle (in radians) of the terrain at a specified position and a compass direction. It is an angle of the slope of a tangent plane to the terrain at the specified position in the specified direction."}, "BIS_fnc_getCfgIsClass": {"syntax": "configEntry call BIS_fnc_getCfgIsClass", "server": false, "broadcasted": false, "description": "Return true if it's a class. Can by called in two ways:", "example": "_isClass = (missionConfigFile >> \"Hubs\" >> \"A1\" >> \"QuickStart\") call BIS_fnc_getCfgIsClass;", "local": false}, "configSourceMod": {"syntax": "configSourceMod config", "server": false, "broadcasted": false, "description": "Returns modDir of the mod that given config class was loaded from.", "example": "configSourceMod (configFile >> \"CfgVehicles\" >> \"Heli_Transport_04_base_F\"); //Returns \"heli\"", "local": false}, "BIS_fnc_smoothStep": {"syntax": "number call BIS_fnc_smoothStep", "server": false, "broadcasted": false, "description": "Interpolates between 0 and 1 with smoothing at the limits. Formula is n\u00b2 \u00d7 (3 - 2n).", "example": "_smoothedStep = 0.75 call BIS_fnc_smoothStep;", "local": false}, "selectWeaponTurret": {"syntax": "vehicle selectWeaponTurret [weapon, turretPath]", "server": false, "broadcasted": false, "description": "Selects the given weapon on specified turret. Use turret path [-1] for driver's turret. Since ver. 1.63.136864 this command supports both weapon name and muzzle name.", "example": "MBT_Kuma selectWeaponTurret [\"LMG_coax\",[0]];", "local": false}, "BIS_fnc_moduleStrategicMapOpen": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_sideColor": {"syntax": "[side, returnString] call BIS_fnc_sideColor;", "server": false, "broadcasted": false, "description": "Returns colour of define side either as Array in format RGBA or the name of the colour as String", "example": "[blufor, false] call BIS_fnc_sideColor; // Returns [0,0.3,0.6,1]", "local": false}, "BIS_fnc_changeSupportRadioChannel": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Changes the radio channel for Support module-related protocol. Parameter(s): _this select 0: SIDE - Affected side _this select 1: ANY - Channel setting Returns: nothing */"}, "tvSetValue": {"syntax": "tvSetValue [idc, [path], val]", "server": false, "broadcasted": false, "description": "Sets scalar data to item on given path. IDC means id of parent Tree View. If the given value is not integer, it will be converted to integer", "example": "tvSetValue [101, [0], 555];", "local": true}, "BIS_fnc_interpolateWeather": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Interpolate weather (overcast and fog) according to 2 boundry dates and their weather conditions. Parameter(s): _this select 0: array - _date1 [_year1,_month1,_day1,_hour1,_min1] _this select 1: array - _weather1 [_overcast1,_fog1] _this select 2: array - _date2 [_year2,_month2,_day2,_hour2,_min2] _this select 3: array - _weather2 [_overcast2,_fog2] _this select 4: array - _subjectDate [_year,_month,_day,_hour,_min] (default: current date) Returns: [_interpolatedOvercast,_interpolatedFog] Example: [_overcast,_fog] = [[2035,1,5,24,00],[0.1,0.5],[2035,1,10,24,00],[0.3,0.2],[2035,1,7,24,00]] call BIS_fnc_interpolateWeather; */"}, "BIS_fnc_VRCourseTargetDesignation3": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "BIS_fnc_isBuildingEnterable": {"syntax": "param call BIS_fnc_isBuildingEnterable;", "server": false, "broadcasted": false, "description": "Check whether a building or structure has available positions defined within model.", "example": "[_building] call BIS_fnc_isBuildingEnterable;", "local": false}, "curatorCamera": {"syntax": "curatorCamera", "server": false, "broadcasted": false, "description": "Returns curator camera object.", "example": "_camCurator = curatorCamera", "local": false}, "modelToWorldVisualWorld": {"syntax": "obj modelToWorldVisualWorld modelPos", "server": false, "broadcasted": false, "description": "Converts position from object model space to world space in render time.", "example": "player modelToWorldVisualWorld [0,1,0]", "local": false}, "BIS_fnc_ambientFlyby": {"syntax": "[[0,0,0],[100,100,100],100,\"NORMAL\",\"B_Heli_Light_01_F\",WEST] call BIS_fnc_ambientFlyby;", "server": false, "broadcasted": false, "description": "Spawns an air unit that moves from point A to point B, never engaging nor being engaged. It is set as captive and will despawn once it reaches it's destination.", "example": "ambFlyby = [[200,200,50],[250,250,75]] call BIS_fnc_ambientFlyBy; //Spawns a Littlebird that flies from position 200,200,50 to 250,250,75 at height 100 and Normal speed.", "local": false}, "BIS_fnc_effectFiredLongSmoke": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_moduleCuratorSetCostsVehicleClass": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "enginesIsOnRTD": {"syntax": "enginesIsOnRTD RTD_helicopter", "server": false, "broadcasted": false, "description": "Returns which engines are producing some work.", "example": "_enginesTaru = enginesIsOnRTD _taru// Returns [true,true]", "local": false}, "BIS_fnc_moduleStrategicMapMission": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "primaryWeaponMagazine": {"syntax": "primaryWeaponMagazine unit", "server": false, "broadcasted": false, "description": "Returns array containing class name of currently loaded primary weapon magazine (or magazines in case of weapon having grenade launcher), otherwise it returns []. This command is used for infantry weapons only.", "example": "hint primaryWeaponMagazine player; //[\"30Rnd_65x39_caseless_mag\"]", "local": false}, "BIS_fnc_holdActionRemove": {"syntax": "[target,ID] call BIS_fnc_holdActionRemove;", "server": false, "broadcasted": false, "description": "Removes a hold action. If the removed hold actions was the last one, disable the scripted framework.", "example": "[ player,10 ] call BIS_fnc_holdActionRemove;", "local": false}, "speaker": {"syntax": "speaker person", "server": false, "broadcasted": false, "description": "Returns the speaker of a person.", "example": "speaker player", "local": false}, "visibleWatch": {"syntax": "visibleWatch", "server": false, "broadcasted": false, "description": "Checks if the player has watch opened and visible", "example": "if (visibleWatch) then {hint \"Watch is visible\"};", "local": false}, "cancelSimpleTaskDestination": {"syntax": "cancelSimpleTaskDestination task", "server": false, "broadcasted": false, "description": "Cancels a simple task destination.", "example": "cancelSimpleTaskDestination myTask;", "local": false}, "addScoreSide": {"syntax": "side addScoreSide value", "server": true, "broadcasted": true, "description": "Adds side score. This is shown in the MP score tab as the total score. MP Only. Server execution only.", "example": "west addScoreSide 10;", "local": false}, "setWaypointLoiterType": {"syntax": "waypoint setWaypointLoiterType type", "server": false, "broadcasted": false, "description": "Sets the waypoint loiter type.", "example": "[_grp, 2] setWaypointLoiterType \"CIRCLE\";", "local": false}, "getMass": {"syntax": "getMass object", "server": true, "broadcasted": false, "description": "Returns mass of a PhysX object.", "example": "_mass = getMass _myCar", "local": false}, "BIS_fnc_curatorWaypointPlaced": {"syntax": "[object, waypointGroup, waypointID] call BIS_fnc_curatorWaypointPlaced", "server": false, "broadcasted": false, "description": "Code executed when curator waypoint is placed.", "example": "[curatorModule, group player, 5] call BIS_fnc_curatorWaypointPlaced;", "local": false}, "BIS_fnc_moduleCuratorAddIcon": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_addScriptedEventHandler": {"syntax": "[namespace, name, code] call BIS_fnc_addScriptedEventHandler", "server": false, "broadcasted": false, "description": "Adds scripted event handler and returns its id. Additionally \"ScriptedEventHandlerAdded\" scripted EH is called. For the list of available scripted event handlers see Arma 3: Event Handlers/ScriptedEventHandlers", "example": "[missionNamespace, \"event\", {hint \"Hello World\"}] call BIS_fnc_addScriptedEventHandler;", "local": false}, "BIS_fnc_moduleCreateDiaryRecord": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_taskCurrent": {"syntax": "unit call BIS_fnc_taskCurrent", "server": false, "broadcasted": false, "description": "Returns unit's current task.", "example": "_currentTask = player call BIS_fnc_taskCurrent;", "local": false}, "BIS_fnc_playerSideFaction": {"syntax": "side call BIS_fnc_playerSideFaction", "server": false, "broadcasted": false, "description": "Return representative faction of the given side. Faction of the first detected player is used.", "example": "west call BIS_fnc_playerSideFaction;", "local": false}, "BIS_fnc_curatorAttachObject": {"syntax": "[object] call BIS_fnc_curatorAttachObject", "server": false, "broadcasted": false, "description": "Attach an object on another one under cursor.", "example": "[BIS_vehicle] call BIS_fnc_curatorAttachObject;", "local": false}, "get3DENIconsVisible": {"syntax": "get3DENIconsVisible", "server": false, "broadcasted": false, "description": "Get visibility state of Eden Editor icons.", "example": "if (get3DENIconsVisible select 0) then {hint \"Icons are visible in the map.\";};", "local": false}, "listRemoteTargets": {"syntax": "listRemoteTargets side", "server": false, "broadcasted": false, "description": "Return list of datalink targets and time for which they will be/were known", "example": "listRemoteTargets east;", "local": false}, "pixelH": {"syntax": "pixelH", "server": false, "broadcasted": false, "description": "Returns the height of one pixel for current resolution.", "example": "_pixelHeight = pixelH;", "local": false}, "isUniformAllowed": {"syntax": "unit isUniformAllowed type", "server": true, "broadcasted": false, "description": "Check whether given uniform can be dressed by target soldier.", "example": "_canUse = _unit isUniformAllowed \"U_B_CombatUniform_mcam\";", "local": false}, "isVehicleSensorEnabled": {"syntax": "vehicle isVehicleSensorEnabled componentName", "server": false, "broadcasted": false, "description": "Returns class name (to identify list based on component name) and info if given sensor is enabled", "example": "vehicle player isVehicleSensorEnabled \"PassiveRadarSensorComponent\"; // [ [\"PassiveRadarSensorComponent\",true] ]", "local": false}, "BIS_fnc_initVehicle": {"syntax": "[vehicle, variant, animations, mass] call BIS_fnc_initVehicle", "server": false, "broadcasted": false, "description": "This function changes the textures, animation sources and/or mass of a given vehicle.", "example": "result = [this, \"\", []] call BIS_fnc_initVehicle;", "local": false}, "BIS_fnc_VRCourseBallistics3": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "dynamicSimulationDistance": {"syntax": "dynamicSimulationDistance category", "server": false, "broadcasted": false, "description": "A getter for setDynamicSimulationDistance", "example": "hint str dynamicSimulationDistance \"Prop\";", "local": false}, "allSites": {"syntax": "allSites", "server": false, "broadcasted": false, "description": "Return all sites in map.", "example": "_allSites = allSites;", "local": false}, "BIS_fnc_missionTasksLocal": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_curatorHint": {"syntax": "[title, text, duration] call BIS_fnc_curatorHint", "server": false, "broadcasted": false, "description": "Show hint in curator interface.", "example": "[\"Title\", \"Some text\", 1337] call BIS_fnc_curatorHint;", "local": false}, "ASLToAGL": {"syntax": "ASLToAGL posASL", "server": false, "broadcasted": false, "description": "Converts position from PositionASL to PositionAGL", "example": "_playerPosAGL = ASLToAGL getPosASL player;", "local": false}, "drawLine3D": {"syntax": "drawLine3D [start, end, color]", "server": false, "broadcasted": false, "description": "Draws a line of a given color between two 3D positions. Command has to be executed each frame. Use onEachFrame or addMissionEventHandler \"Draw3D\".", "example": "onEachFrame { drawLine3D [getPos player, getPos cursorTarget, [1,1,1,1]]; };", "local": false}, "waypointTimeoutCurrent": {"syntax": "waypointTimeoutCurrent group", "server": false, "broadcasted": false, "description": "Gets the current timeout for currentWaypoint of a group or -1 if countdown is not in progress.", "example": "_timeout = waypointTimeoutCurrent group player;", "local": false}, "enableDebriefingStats": {"syntax": "enableDebriefingStats [left, top, width, height]", "server": false, "broadcasted": false, "description": "enable debrifing score table.", "example": "enableDebriefingStats [0.1, 0.1, 0.8, 0.8];", "local": false}, "removeAllHandgunItems": {"syntax": "removeAllHandgunItems unit", "server": false, "broadcasted": true, "description": "Removes all items from weapon except magazine.", "example": "Example needed", "local": true}, "BIS_fnc_moduleCuratorAddAddons": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_credits_movie": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* File: fn_credits_movie.sqf Description: Movie credits function. Parameter(s): _this select 0: Display - Display for credits. _this select 1: Number - Mode: 0 for end of credits, 1 for start of credits. Returned value: None */"}, "BIS_fnc_subClasses": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "Same function as BIS_fnc_returnChildren"}, "disableRemoteSensors": {"syntax": "disableRemoteSensors state", "server": false, "broadcasted": false, "description": "This command will halt raycasting calculations (on the local machine only) for all groups which don't contain any local entities. If a group contains a single local entity then calculations will still be performed for the entire group.", "example": "disableRemoteSensors false;", "local": false}, "magazinesDetail": {"syntax": "magazinesDetail vehicle", "server": false, "broadcasted": false, "description": "Returns an array of strings with description of all vehicle's magazines, their ammo count (current/default) and their ids. When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazineDetail to get this information for a currently loaded magazine.", "example": "_magazinesDetail = magazinesDetail player; /* [ \"6.5mm 30Rnd STANAG Mag(30/30)[id:3]\", \"6.5mm 30Rnd STANAG Mag(30/30)[id:9]\", \"9mm 16Rnd Mag(16/16)[id:12]\", \"Smoke Grenade (Green)(1/1)[id:14]\", \"Chemlight (Green)(1/1)[id:16]\", \"RGO Frag Grenade(1/1)[id:18]\" ] */", "local": false}, "BIS_fnc_sideIsFriendly": {"syntax": "[sideA, sideB] call BIS_fnc_sideIsFriendly;", "server": false, "broadcasted": false, "description": "Determines if side B is friendly to side A the way the game engine does it. The relationship table can be found here: Side relations.", "example": "_isFriendly = [west, east] call BIS_fnc_sideIsFriendly; //Checks if EAST is friendly to WEST.", "local": false}, "allControls": {"syntax": "allControls display", "server": false, "broadcasted": false, "description": "Returns a list of all controls for desired existing display. Returned controls also include controls from control groups", "example": "_allCtrls = allControls findDisplay 46;", "local": false}, "isLightOn": {"syntax": "isLightOn vehicle", "server": true, "broadcasted": false, "description": "Returns true if vehicle headlights are on otherwise false.", "example": "_lightsOn = isLightOn vehicle player;", "local": false}, "tvSetPictureRightColor": {"syntax": "tvSetPictureRightColor [idc, path, color]", "server": false, "broadcasted": false, "description": "Sets color of the right picture on the tree view item defined by path", "example": "tvSetPictureRightColor [101, [0], [1,0,1,1]];", "local": false}, "BIS_fnc_effectKilled": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_unitHeadgear": {"syntax": "[unit, headgear, facewear] call BIS_fnc_unitHeadgear", "server": false, "broadcasted": false, "description": "Randomise headgear and facewear of a character.", "example": "[this] call BIS_fnc_unitHeadgear; // headgear and face wear, same as [this, [], []]", "local": false}, "BIS_fnc_weaponAddon": {"syntax": "Classname call BIS_fnc_weaponAddon;", "server": false, "broadcasted": false, "description": "Return addon from CfgPatches to which a given weapon class belongs to.", "example": "\"arifle_MX_F\" call BIS_fnc_weaponAddon;//Returns \"A3_Weapons_F_Rifles_MX\"", "local": false}, "BIS_fnc_moduleTaskSetDescription": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Set Task Description module function */"}, "headgear": {"syntax": "headgear unit", "server": true, "broadcasted": false, "description": "Returns headgear of unit.", "example": "hint headgear player; //H_HelmetB", "local": false}, "allowSprint": {"syntax": "unit allowSprint state", "server": false, "broadcasted": false, "description": "Force player to run/jog if set to false.", "example": "player allowSprint false", "local": false}, "BIS_fnc_estimatedTimeLeft": {"syntax": "[time] call BIS_fnc_estimatedTimeLeft", "server": false, "broadcasted": false, "description": "Set mission countdown.", "example": "[180] call BIS_fnc_estimatedTimeLeft;", "local": false}, "BIS_fnc_respawnEndMission": {"syntax": "call BIS_fnc_respawnEndMission", "server": false, "broadcasted": false, "description": "End a mission if all players are dead and there are no more respawn tickets (if any).", "example": "call BIS_fnc_respawnEndMission;", "local": false}, "BIS_fnc_moduleFDCPClear": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "unassignCurator": {"syntax": "unassignCurator curatorObj", "server": false, "broadcasted": false, "description": "Unassign curator (will destroy both sides of connection).", "example": "unassignCurator myCurator;", "local": false}, "BIS_fnc_createObjectOO": {"syntax": "[class,params] call BIS_fnc_createObjectOO", "server": false, "broadcasted": false, "description": "Instantiates an object of a certain class.", "example": "[\"someOOClass\", [1,2,3]] call BIS_fnc_createObjectOO;", "local": false}, "unitAimPositionVisual": {"syntax": "unitAimPositionVisual unit", "server": true, "broadcasted": false, "description": "Returns the position on the unit other units can aim at in render scope. See also aimPos, unitAimPosition.", "example": "unitAimPositionVisual player;", "local": false}, "BIS_fnc_moduleObjectiveSector": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_getVirtualItemCargo": {"syntax": "object call BIS_fnc_getVirtualItemCargo", "server": false, "broadcasted": false, "description": "Get virtual items from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "BIS_ammoBox call BIS_fnc_getVirtualItemCargo;", "local": false}, "BIS_fnc_moduleCreateProjectile": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "isVehicleCargo": {"syntax": "isVehicleCargo vehicle", "server": false, "broadcasted": false, "description": "Return transporting vehicle if vehicle is loaded in one.", "example": "Blackfish with given variable name blackfish, with a vehicle inside called quad _transportingVehicle = isVehicleCargo quad; //returns blackfish //Vehicle called quad that is not being transported as cargo _transportingVehicle = getVehicleCargo quad; //returns objNull", "local": false}, "ctrlClassName": {"syntax": "ctrlClassName control", "server": false, "broadcasted": false, "description": "Returns the class name of a Control as it is defined in config. If you need config class of a game created Display, it is stored on display itself: _className = findDisplay 12 getVariable [\"BIS_fnc_initDisplay_configClass\", \"\"]; // \"RscDiary\"", "example": "List class names of all controls present on display 46:_ctrls = \"\"; for \"_i\" from -1 to 10000 do { with uiNamespace do { _ctrl = findDisplay 46 displayCtrl _i; if (!isNull _ctrl) then { _ctrls = _ctrls + format [\"IDC:\u00a0%1, Class Name:\u00a0%2\\n\", _i, ctrlClassName _ctrl]; }; }; }; hint _ctrls;", "local": false}, "weaponAccessories": {"syntax": "unit weaponAccessories weapon", "server": false, "broadcasted": false, "description": "Get array with all items linked to a given weapon.", "example": "player weaponAccessories primaryWeapon player; [\"\",\"acc_pointer_IR\",\"optic_Aco\",\"\"]", "local": false}, "uniformContainer": {"syntax": "uniformContainer unit", "server": false, "broadcasted": false, "description": "Returns a cargo container of a unit's uniform.", "example": "hint str uniformContainer player; //2df7dd00# 163941: dummyweapon.p3d", "local": false}, "addItemToUniform": {"syntax": "unit addItemToUniform item", "server": true, "broadcasted": true, "description": "Create new item and store it to soldier's uniform. The item can also be a weapon or a magazine.", "example": "player addItemToUniform \"itemGPS\";", "local": false}, "setParticleFire": {"syntax": "source setParticleFire [coreIntensity, coreDistance, damageTime]", "server": true, "broadcasted": false, "description": "Set fire parameters to particle effect. Note: You need to create emitter at first. Basic parameters of particle effect must be defined too. You can use script commands setParticleClass or setParticleParams to do so (see example). Correspondence between CfgCloudlets class param names and command array of params: particleSource setParticleFire [ coreIntensity, coreDistance, damageTime ];", "example": "_emitter = \"#particlesource\" createVehicleLocal (getPos player); _emitter setParticleClass \"MediumSmoke\"; _emitter setParticleFire [0.3,1.0,0.1];", "local": false}, "soldierMagazines": {"syntax": "soldierMagazines unit", "server": false, "broadcasted": false, "description": "Get array with all magazines of the given unit.", "example": "soldierMagazines player;", "local": false}, "BIS_fnc_relPosObject": {"syntax": "[parent, child, relPos, direction] call BIS_fnc_relPosObject", "server": false, "broadcasted": false, "description": "Place an object relative to another object, like a setRelPos command.", "example": "[BIS_briefingTable, BIS_map, [0, -0.58, 0.857], 98] call BIS_fnc_relPosObject;", "local": false}, "getRelDir": {"syntax": "object getRelDir position", "server": true, "broadcasted": false, "description": "Returns direction, which is relative to object's current direction, from given object to another object or position in the range from 0 to 360, the equivalent of BIS_fnc_relativeDirTo. Taking the current direction of the object into account.", "example": "_reldir = player getRelDir tank;", "local": false}, "addWeaponTurret": {"syntax": "vehicle addWeaponTurret [weaponName, turretPath]", "server": false, "broadcasted": true, "description": "Adds a weapon to the turret. Use turret path [-1] for driver's turret.", "example": "_tank addWeaponTurret [\"LMG_M200\",[0,0]];", "local": true}, "BIS_fnc_areFriendly": {"syntax": "[side1, side2] call BIS_fnc_areFriendly", "server": false, "broadcasted": false, "description": "Function that takes two Sides and compares them, returning whether they are friendly or not.", "example": "_areFriendly = [west, east] call BIS_fnc_areFriendly;", "local": false}, "BIS_fnc_loadEntry": {"syntax": "[path,defaultConfig] call BIS_fnc_loadEntry", "server": false, "broadcasted": false, "description": "Searches for config entry in mission, campaign and then in global config file.", "example": "[ [\"CfgWeapons\",\"hgun_Rook40_snds_F\",\"bullet3\"], configfile >> \"CfgWeapons\" >> \"hgun_Rook40_snds_F\" >> \"baseWeapon\" ] call BIS_fnc_loadEntry;", "local": false}, "setCollisionLight": {"syntax": "vehicle setCollisionLight set", "server": false, "broadcasted": true, "description": "Switches collision lights of a vehicle on/off. Note that the vehicle has to be local.", "example": "heli setCollisionLight true;", "local": true}, "vectorCos": {"syntax": "vector1 vectorCos vector2", "server": false, "broadcasted": false, "description": "Cosine of angle between two 3D vectors.", "example": "_cos = getPos player vectorCos [0,0,2];", "local": false}, "getAllSoundControllers": {"syntax": "getAllSoundControllers vehicle", "server": false, "broadcasted": false, "description": "Returns an array containing names and values of the sound controllers that can be used in simple expressions when configuring sounds.", "example": "getAllSoundControllers vehicle player;", "local": false}, "vectorDistanceSqr": {"syntax": "vector1 vectorDistanceSqr vector2", "server": false, "broadcasted": false, "description": "Squared distance between two 3D vectors.", "example": "_distSqr = getPos player vectorDistanceSqr [0,0,2];", "local": false}, "BIS_fnc_liveFeed": {"syntax": "[source, target, receiver, effect] call BIS_fnc_liveFeed", "server": false, "broadcasted": false, "description": "Display a live feed.", "example": "[myUAV, player, player, 2] call BIS_fnc_liveFeed;", "local": false}, "setFlagAnimationPhase": {"syntax": "flag setFlagAnimationPhase phase", "server": true, "broadcasted": false, "description": "Sets flag position on the flag pole according to the given animation phase, where 0 is the bottom of the flag pole, 1 is the top of the flag pole. The changes to the flag position are local to the PC command is executed on. To animate flag use BIS_fnc_animateFlag", "example": "_flag1 setFlagAnimationPhase 0.5;", "local": false}, "waypointLoiterRadius": {"syntax": "waypointLoiterRadius Waypoint", "server": false, "broadcasted": false, "description": "Gets the waypoint loiter radius. Waypoint uses format Waypoint.", "example": "_radius = waypointLoiterRadius [groupOne, 1];", "local": false}, "getObjectType": {"syntax": "getObjectType object", "server": false, "broadcasted": false, "description": "Returns object type as a number:", "example": "_objType = getObjectType player;", "local": false}, "getObjectMaterials": {"syntax": "getObjectMaterials obj", "server": true, "broadcasted": false, "description": "Gets all custom materials associated with the object.", "example": "_materials = getObjectMaterials car;", "local": false}, "setApertureNew": {"syntax": "setApertureNew [min, std, max, stdLum]", "server": false, "broadcasted": false, "description": "Sets custom camera aperture ([-1] to do it automatically).", "example": "setApertureNew [0.3, 0.2, 0.1, 1];", "local": false}, "allVariables": {"syntax": "allVariables namespace", "server": false, "broadcasted": false, "description": "Returns a list of all variables from desired namespace. Namespaces supported:", "example": "_allVarsUINamespace = allVariables uiNamespace;", "local": false}, "BIS_fnc_taskHint": {"syntax": "[taskName, taskState] call BIS_fnc_taskHint", "server": false, "broadcasted": false, "description": "Shows a task hint.", "example": "[\"BIS_task_01\",\"CANCELED\"] call BIS_fnc_taskHint;", "local": false}, "BIS_fnc_taskVar": {"syntax": "taskID call BIS_fnc_taskVar", "server": false, "broadcasted": false, "description": "Returns task's variable name.", "example": "\"task_1\" call BIS_fnc_taskVar;", "local": false}, "addHeadgear": {"syntax": "unit addHeadgear item", "server": true, "broadcasted": true, "description": "Creates a headgear item and tries to link it to headgear slot. If slot is occupied with another item, the item in the slot will be replaced.", "example": "player addHeadgear \"H_HelmetB\";", "local": false}, "setWaves": {"syntax": "time setWaves value", "server": false, "broadcasted": false, "description": "Changes the waves value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", "example": "180 setWaves .5;", "local": false}, "all3DENEntities": {"syntax": "all3DENEntities", "server": false, "broadcasted": false, "description": "Returns an array of all currently placed Eden Editor entities, including groups, waypoints, and markers in following format:", "example": "systemChat str all3DENEntities;", "local": false}, "BIS_fnc_missionConversationsLocal": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_isDemo": {"syntax": "call BIS_fnc_isDemo", "server": false, "broadcasted": false, "description": "Returns true when game version is demo.", "example": "_isDemo = call BIS_fnc_isDemo;", "local": false}, "BIS_fnc_showMissionStatus": {"syntax": "[] call BIS_fnc_showMissionStatus", "server": false, "broadcasted": false, "description": "Show mission status with sectors, respawn tickets, etc.", "example": "call BIS_fnc_showMissionStatus;", "local": false}, "BIS_fnc_ORBATConfigPreview": {"syntax": "[class] call BIS_fnc_ORBATConfigPreview", "server": false, "broadcasted": false, "description": "Opens config viewer and shows CfgORBAT. Used to retrieve CfgOrbat data", "example": "[configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\"] call BIS_fnc_ORBATConfigPreview;", "local": false}, "BIS_fnc_diagBulletCam": {"syntax": "unit call BIS_fnc_diagBulletCam", "server": false, "broadcasted": false, "description": "Add a \"bullet camera\" to shots fired by the specified unit.", "example": "player call BIS_fnc_diagBulletCam;", "local": false}, "BIS_fnc_taskCreate": {"syntax": "[owner, taskID, description, destination, state, priority, showNotification, type, visibleIn3D] call BIS_fnc_taskCreate", "server": false, "broadcasted": false, "description": "Create a task.", "example": "[civilian,[\"task1\"],[\"Do this and you get a cookie\",\"Earn Cookie\",\"cookiemarker\"],[0,0,0],1,2,true] call BIS_fnc_taskCreate", "local": false}, "BIS_fnc_markerToTrigger": {"syntax": "[markerName, trigger, localChange] call BIS_fnc_markerToTrigger", "server": false, "broadcasted": false, "description": "Makes an existing or new marker cover a trigger area.", "example": "_createdMarker = [\"marker1\", myTrigger] call BIS_fnc_markerToTrigger;", "local": false}, "getPosVisual": {"syntax": "getPosVisual object", "server": true, "broadcasted": false, "description": "Returns an object's rendered 3D position (z value above sea when over sea, or above ground when over land) in render time scope. Alias of visiblePosition.", "example": "_playerRenderedPos = getPosVisual player;", "local": false}, "BIS_fnc_moduleCombatGetIn": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_diagMissionPositions": {"syntax": "[configPath, allUnits, isCampaign] call BIS_fnc_diagMissionPositions", "server": false, "broadcasted": false, "description": "Displays positions of units from all missions", "example": "[configFile >> \"CfgMissions\", true, false] call BIS_fnc_diagMissionPositions;", "local": false}, "BIS_fnc_moduleMode": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "detectedMines": {"syntax": "detectedMines side", "server": false, "broadcasted": false, "description": "Returns an array of all mines detected by a given side", "example": "detectedMines west;", "local": false}, "BIS_fnc_addCuratorChallenge": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Add challenges for curator to complete Parameter(s): 0: OBJECT - curator 1 (Optional): ARRAY - list of supported challenges from CfgCuratorChallenges (default: all challenges) 2 (Optional): NUMBER - number of added challenges (default: 3) 3 (Optional): CODE - condition for challenges to remain active {default: true} 4 (optional): CODE or [CODE,STRING] - code executed upon completing all challenges and reward description Arguments passed to the code are: 0: OBJECT - curator 1: NUMBER - number of previously completed challenges by given curator 2: STRING - parent task ID 5 (Optional): STRING - parent task ID Returns: STRING - ID of parent task under which all challenge tasks are */"}, "flagSide": {"syntax": "flagSide flag", "server": true, "broadcasted": false, "description": "Returns Side of the local instance of the flag. A getter for setFlagSide.", "example": "_flagSide = flagSide flag;", "local": false}, "visibleGPS": {"syntax": "visibleGPS", "server": false, "broadcasted": false, "description": "Checks if the player has GPS receiver opened and visible", "example": "if (visibleGPS) then {hint \"GPS is visible\"};", "local": false}, "BIS_fnc_VRCourseCommandingVehicles3": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "addCuratorEditingArea": {"syntax": "curatorObj addCuratorEditingArea [editAreaID,position,radius]", "server": false, "broadcasted": false, "description": "Adds or changes curator edit area (depends on if ID is already used).", "example": "myCurator addCuratorEditingArea [4,position player,1000];", "local": false}, "revealMine": {"syntax": "side revealMine mine", "server": false, "broadcasted": false, "description": "Sets given mine as known to the side. (Knowledge about a mine is always shared across all units in a side.)", "example": "west revealMine _mine;", "local": false}, "AGLToASL": {"syntax": "AGLToASL posAGL", "server": false, "broadcasted": false, "description": "Converts position from PositionAGL to PositionASL", "example": "_playerPosASL = AGLToASL (player modelToWorld [0,0,0]);", "local": false}, "BIS_fnc_diagLoop": {"syntax": "[code,delay] spawn BIS_fnc_diagLoop", "server": false, "broadcasted": false, "description": "Runs scripted loop. Repeated call terminates previous loops.", "example": "[{systemChat \"Loop!\"}, 0.5] spawn BIS_fnc_diagLoop;", "local": false}, "setAirplaneThrottle": {"syntax": "airplane setAirplaneThrottle value", "server": false, "broadcasted": false, "description": "Sets a wanted throttle position, works only on player's vehicle.", "example": "Example needed", "local": false}, "setLightIntensity": {"syntax": "light setLightIntensity value", "server": false, "broadcasted": false, "description": "Sets intensity of light.", "example": "myLight setLightIntensity 4;", "local": true}, "BIS_fnc_titlecard": {"syntax": "[path,subtitle] call BIS_fnc_titlecard", "server": false, "broadcasted": false, "description": "Display a mission-specific titlecard before the mission begins. Only works the first time it's called.", "example": "[\"\\a3\\missions_f_epb\\video\\b_out2_quotation.ogv\", \"your translation\"] call BIS_fnc_titlecard;", "local": false}, "MP_End_Game": {"server": false, "broadcasted": false, "local": false}, "BIS_fnc_createSimpleObject": {"syntax": "[input, position, direction, followTerrain, forceSuperSimpleObject] call BIS_fnc_createSimpleObject", "server": false, "broadcasted": false, "description": "Creates non-simulated framerate and network performance friendly object - a simple object - and applies different adjustments to fake non-existing physX and engine interactions. The adjustments need either to be stored in the object config or provided as the function input, otherwise they need to be done manually.", "example": "[\"B_Boat_Armed_01_minigun_F\", getPosWorld player, getDir player] call BIS_fnc_createSimpleObject;", "local": false}, "BIS_fnc_moduleExecute": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_effectFiredArtillery": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "simulSetHumidity": {"syntax": "simulSetHumidity humidity", "server": false, "broadcasted": false, "description": "Sets simul cloud cover. This command does not affect overcast value. This command has now been removed", "example": "simulSetHumidity 1;", "local": false}, "deleteSite": {"syntax": "deleteSite site", "server": false, "broadcasted": false, "description": "Removes the site.", "example": "-", "local": false}, "BIS_fnc_codePerformance": {"syntax": "[expression, arguments, cycles, display] call BIS_fnc_codePerformance", "server": false, "broadcasted": false, "description": "Measures how much time it takes to execute given expression. Results may vary based on overall performance; use this function to compare alternative scripting approaches rather than to measure specific values. Upon function execution, window with results is opened. The user then has a choice to copy the result into clipboard or not.", "example": "testArray = []; [\"testArray = testArray + [1]\"] call BIS_fnc_codePerformance; testArray = []; [\"testArray set [count testArray, 1]\"] call BIS_fnc_codePerformance; testArray = []; [\"testArray pushBack 1\"] call BIS_fnc_codePerformance; Compare three methods of adding elements into array", "local": false}, "drawTriangle": {"syntax": "map drawTriangle [vertices, color, fill]", "server": false, "broadcasted": false, "description": "Draws a single triangle or multiple triangles on the map. Triangle is defined by 3 positions of its verticies: p0, p1, p2 in a single array [p0, p1, p2]. Next 3 positions in the same array [p0, p1, p2, p0, p1, p2] will be used to draw second triangle, another 3 positions [p0, p1, p2, p0, p1, p2, p0, p1, p2] to draw 3rd and so on.", "example": "findDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", { _this select 0 drawTriangle [ [ player getRelPos [100, 0], player getRelPos [100, -135], player getRelPos [100, 135] ], [1,0,0,0.5], \"#(rgb,1,1,1)color(1,1,1,1)\" ]; }];", "local": false}, "getUserMFDText": {"syntax": "getUserMFDText vehicle", "server": false, "broadcasted": false, "description": "Returns array of user text variables used in MFD.", "example": "getUserMFDText _vehicle;", "local": false}, "BIS_fnc_importImageLinks": {"syntax": "call BIS_fnc_importImageLinks;", "server": false, "broadcasted": false, "description": "Imports CfgVehicles image links from Community Wiki (https://community.bistudio.com/).", "example": "call BIS_fnc_importImageLinks;", "local": false}, "BIS_fnc_triggerToMarker": {"syntax": "[trigger, markerName] call BIS_fnc_triggerToMarker", "server": false, "broadcasted": false, "description": "Makes an existing or new trigger cover a marker area.", "example": "_createdTrigger = [objNull, myAreaTrigger] call BIS_fnc_triggerToMarker;", "local": false}, "get3DENSelected": {"syntax": "get3DENSelected type", "server": false, "broadcasted": false, "description": "Returns an array of all selected Eden Editor Entities of the given type, or, if empty string \"\" is used, an array of 6 arrays in the following format:", "example": "systemChat str (get3DENSelected \"\"); /* outputs: [ [B Alpha 2-1:1],//objects [B Alpha 2-1],//groups [164494: <no shape>],//triggers [<No center> Charlie 1-2:4],//logic [ [B Alpha 2-1,0] ],//waypoints [\"Hotel_Whiskey\"]//markers ]*/", "local": false}, "ctCurSel": {"syntax": "ctCurSel ctrl", "server": false, "broadcasted": false, "description": "Returns index of the selected row. Will take only rows, but not headers into account.", "example": "_curSel = ctCurSel _control;", "local": true}, "ctHeaderControls": {"syntax": "ctrl ctHeaderControls index", "server": false, "broadcasted": false, "description": "Returns array of controls on the header with the given index.", "example": "_array = _control ctHeaderControls 0;", "local": true}, "worldSize": {"syntax": "worldSize", "server": false, "broadcasted": false, "description": "Returns config size of the current world. Equivalent to worldName call BIS_fnc_mapSize.", "example": "_size = worldSize;", "local": false}, "openCuratorInterface": {"syntax": "openCuratorInterface", "server": false, "broadcasted": false, "description": "Force opens curator interface.", "example": "Open interface: openCuratorInterface;", "local": false}, "BIS_fnc_moduleMPTypeSectorControl": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "airDensityRTD": {"syntax": "airDensityRTD altitude", "server": false, "broadcasted": false, "description": "Returns air density in given altitude", "example": "_density = airDensityRTD 0;//Returns 1.22406", "local": false}, "BIS_fnc_addVirtualMagazineCargo": {"syntax": "[object,magClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualMagazineCargo", "server": false, "broadcasted": false, "description": "Add virtual magazines to an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualMagazineCargo;", "local": false}, "lockIdentity": {"syntax": "lockIdentity unit", "server": false, "broadcasted": false, "description": "Locks the identity of a person. This will disable default identity.", "example": "_success = lockIdentity player;", "local": false}, "clearItemPool": {"syntax": "clearItemPool box", "server": false, "broadcasted": false, "description": "Removes all items from ammo box (or any general weapon holder container)", "example": "clearItemPool jeepOne", "local": false}, "BIS_fnc_diagKnownAsTarget": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* File: fn_diagKnownAsTarget.sqf Description: Visualize and profile which units know about one specific unit and how much they do. Calling function again stops diagnostics. Parameter(s): _this select 0: profile unit (Object) [default player] _this select 1: radius (Scalar - meters) [default 1000m] Returns: - */"}, "ctrlIDC": {"syntax": "ctrlIDC control", "server": false, "broadcasted": false, "description": "Returns control IDC.", "example": "ctrlIDC _ctrl;", "local": false}, "tvDelete": {"syntax": "tvDelete [idc, path]", "server": false, "broadcasted": false, "description": "Removes an item with given Tree View Path from Tree View. The paths of other items on the same branch are updated accordingly and may change.", "example": "tvDelete [101, [0, 0]];", "local": true}, "BIS_fnc_moduleMPTypeDefense": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "curatorSelected": {"syntax": "curatorSelected", "server": false, "broadcasted": false, "description": "Returns list of all curator selected items.", "example": "selectedItems = curatorSelected;", "local": false}, "windDir": {"syntax": "windDir", "server": false, "broadcasted": false, "description": "Returns the current wind azimuth.", "example": "if (windDir < 45 || windDir > 315) then { hint \"I feel a northern wind\"; };", "local": false}, "BIS_fnc_modulePoster": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "tvCurSel": {"syntax": "tvCurSel idc", "server": false, "broadcasted": false, "description": "Returns path to currently selected item. IDC means id of parent Tree View.", "example": "tvCurSel 101;", "local": true}, "getStamina": {"syntax": "getStamina unit;", "server": false, "broadcasted": false, "description": "Get current stamina (~ seconds until depletion)", "example": "getStamina player;", "local": false}, "setCuratorWaypointCost": {"syntax": "curatorObj setCuratorWaypointCost cost", "server": false, "broadcasted": false, "description": "Sets cost of waypoints (used for placing, editing and deleting).", "example": "myCUrator setCuratorWaypointCost 0.1;", "local": false}, "getFuelCargo": {"syntax": "getFuelCargo vehicle", "server": true, "broadcasted": false, "description": "Returns the fuel amount (between 0 and 1) in the cargo space of a refuelling vehicle.", "example": "value = getFuelCargo myVehicleName;", "local": false}, "BIS_fnc_moduleShowHide": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "nearSupplies": {"syntax": "origin nearSupplies radius", "server": false, "broadcasted": false, "description": "Find supplies (weapon holders, ammo crates, fuel feeds, other units) in the sphere with given radius.", "example": "_list = player nearSupplies 50;", "local": false}, "setPlateNumber": {"syntax": "vehicle setPlateNumber string", "server": false, "broadcasted": true, "description": "Change the license plates on any vehicle which has plates configured. Max 15 characters are allowed!", "example": "vehicle player setPlateNumber \"Custom Plate 99\"", "local": true}, "BIS_fnc_missionHandlers": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "#define VAR_RELOADS (missionname + \"_reloads_\" + str ismultiplayer) //--- Mission end type and rating"}, "getSoundController": {"syntax": "vehicle getSoundController controller", "server": false, "broadcasted": false, "description": "Returns value of the given sound controller.", "example": "vehicle player getSoundController \"rpm\"; //600", "local": false}, "BIS_fnc_moduleRating": {"syntax": "[logic, units, activated] call BIS_fnc_moduleRating;", "server": false, "broadcasted": false, "description": "Function used by the Rating module.", "example": "[myLogic, units group player, true] call BIS_fnc_moduleRating;", "local": false}, "playSound3D": {"syntax": "playSound3D [filename, soundSource, isInside, soundPosition, volume, soundPitch, distance]", "server": true, "broadcasted": true, "description": "Plays positional sound with given filename on every computer on network. At least 2 parameters must be specified.", "example": "playSound3D [\"A3\\Sounds_F\\sfx\\blip1.wav\", player]", "local": false}, "tvClear": {"syntax": "tvClear idc", "server": false, "broadcasted": false, "description": "Removes all items from Tree View with given idc.", "example": "tvClear 101;", "local": true}, "BIS_fnc_startLoadingScreen": {"syntax": "[screenId, layout] call BIS_fnc_startLoadingScreen", "server": false, "broadcasted": false, "description": "Register a loading screen. Start the loading when it is the first one registered.", "example": "[\"myLoadingScreen\", \"Loading\u2026 wait for my splendid\u2122 mission!\"] call BIS_fnc_startLoadingScreen; uiSleep 3; \"myLoadingScreen\" call BIS_fnc_endLoadingScreen;", "local": false}, "BIS_fnc_EXP_camp_playSubtitles": {"syntax": "[ [Array] ] spawn BIS_fnc_EXP_camp_playSubtitles;", "server": false, "broadcasted": false, "description": "Displays the given subtitles at the correctly defined moments. Each array added to the parameters represents one subtitle.", "example": "[ [\"CROSSROAD\",\"Mission is a go, I repeat, mission is a go! Crossroad, out.\",0] ] spawn BIS_fnc_EXP_camp_playSubtitles;//Shows a subtitle immediately", "local": false}, "setMagazineTurretAmmo": {"syntax": "vehicle setMagazineTurretAmmo [magazineClass, ammoCount, turretPath]", "server": false, "broadcasted": false, "description": "Sets ammo count to given amount for given turret.", "example": "Example needed", "local": false}, "addWeaponGlobal": {"syntax": "unit addWeaponGlobal weapon", "server": true, "broadcasted": true, "description": "Add a weapon to a unit. Infantry units can only carry weapons in their respective slots (primary, secondary and handgun), the addWeaponGlobal command will replace the weapon currently in a slot with the added weapon if it shares the same slot. To make sure the added weapon is loaded and ready, add the magazine first.", "example": "{ _x addMagazineGlobal \"Laserbatteries\"; _x addWeaponGlobal \"Laserdesignator\"; } forEach allUnits;", "local": false}, "BIS_fnc_packStaticWeapon": {"syntax": "[group, weapon, leaderPos] call BIS_fnc_packStaticWeapon;", "server": false, "broadcasted": false, "description": "This function will make weapon team pack a static weapon. The weapon crew will pack carried weapon (or given weapon if different) and follow leader. Requires three personnel in the team: Team Leader, Gunner and Asst. Gunner. This function is MP compatible", "example": "[leader1] call BIS_fnc_packStaticWeapon;", "local": false}, "userInputDisabled": {"syntax": "userInputDisabled", "server": false, "broadcasted": false, "description": "Returns true if user input is disabled", "example": "if (!userInputDisabled) then { disableUserInput true; } else { disableUserInput false; };", "local": false}, "BIS_fnc_moduleFiringDrill": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_moduleCountdown": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_feedbackMain": {"syntax": "[] call BIS_fnc_feedbackMain", "server": false, "broadcasted": false, "description": "Main feedback FSM, used for feedback effects (fatigue, drowning, injury etc.). Internal use only.", "example": "[] call BIS_fnc_feedbackMain;", "local": false}, "setShadowDistance": {"syntax": "setShadowDistance value", "server": false, "broadcasted": false, "description": "Sets the shadows rendering distance.", "example": "setShadowDistance 1000", "local": false}, "getCargoIndex": {"syntax": "vehicle getCargoIndex unit", "server": true, "broadcasted": false, "description": "Returns index of the unit in cargo. 0,1,2... or -1 if not in cargo.", "example": "player moveInCargo heli; hint str (heli getCargoIndex player);", "local": false}, "clearItemCargoGlobal": {"syntax": "clearItemCargoGlobal box", "server": true, "broadcasted": true, "description": "Removes all items from ammo box (or any general weapon holder container).", "example": "clearItemCargoGlobal _ammoBox;", "local": false}, "tvPicture": {"syntax": "tvPicture [idc, [path]]", "server": false, "broadcasted": false, "description": "Returns name of picture from item pointed to by path. IDC means id of parent Tree View.", "example": "tvPicture [101, [0]];", "local": true}, "BIS_fnc_trimString": {"syntax": "[someText, beginning, length] call BIS_fnc_trimString", "server": false, "broadcasted": false, "description": "Get a substring out of the string.", "example": "[\"dreaded_is_the_man\", 0, 6] call BIS_fnc_trimString; // will return \"dreaded\"", "local": false}, "BIS_fnc_moduleCAS": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "magazinesDetailBackpack": {"syntax": "magazinesDetailBackpack unit", "server": false, "broadcasted": false, "description": "Returns an array with the type names of all the unit's backpack magazines.", "example": "magazinesDetailBackpack player", "local": false}, "BIS_fnc_diagMacrosVerify": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "lbSetSelectColor": {"syntax": "lbSetSelectColor [idc, index, color]", "server": false, "broadcasted": false, "description": "Sets the select color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog to color.", "example": "lbSetSelectColor [101, 0, [0, 1, 0, 0.5]];", "local": false}, "BIS_fnc_exportCfgMagazines": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Export list of addons for Community Wiki http://community.bistudio.com/wiki/Category:Arma_3:_Assets Parameter(s): 0: ARRAY of STRINGs - list of CfgPatches classes Returns: BOOL */"}, "removeMusicEventHandler": {"syntax": "removeMusicEventHandler [type, id]", "server": false, "broadcasted": false, "description": "Removes specified music track event handler.", "example": "removeMusicEventHandler [\"MusicStart\", 12];", "local": false}, "BIS_fnc_respawnSpectator": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_ORBATRemoveGroupOverlay": {"syntax": "[path, number] call BIS_fnc_ORBATRemoveGroupOverlay", "server": false, "broadcasted": false, "description": "Unregister texture(s) to be displayed over CfgORBAT group.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\", 4 ] call BIS_fnc_ORBATRemoveGroupOverlay;", "local": false}, "setDynamicSimulationDistance": {"syntax": "category setDynamicSimulationDistance distance", "server": false, "broadcasted": false, "description": "Sets activation distance of Arma_3_Dynamic_Simulation for given category", "example": "\"Group\" setDynamicSimulationDistance 1000;", "local": false}, "getPlayerChannel": {"syntax": "getPlayerChannel player", "server": true, "broadcasted": false, "description": "Returns channel number for given player, provided that player is speaking, otherwise -1. Having mic on is not enough, player has to make a sound. There are several limitations to this command:", "example": "_channel = getPlayerChannel player;", "local": false}, "BIS_fnc_spawn": {"syntax": "[params, code] spawn BIS_fnc_spawn;", "server": false, "broadcasted": false, "description": "Execute given code with or without parameter.", "example": "Show a message for the current player. [[\"Hello\"], {hint (_this select 0);}] spawn BIS_fnc_spawn;", "local": false}, "BIS_fnc_getCfgDataObject": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Get the object defined in cfg by its name (global variable). Remark(s): * Can by called 2 ways: * 1st way (general) works for any config. * 2nd way is for comfortable working with mission description.ext. Parameter(s): _this: CFG _this: ARRAY of STRINGS - missionConfigFile classes and an attribute. Example: * 1st way of calling: _value = (missionconfigfile >> \"Hubs\" >> \"A1\" >> \"QuickStart\" >> \"trigger\") call BIS_fnc_getCfgDataObject; * 2nd way of calling: _value = [\"Hubs\",\"A1\",\"QuickStart\",\"trigger\"] call BIS_fnc_getCfgDataObject; Returns: OBJECT or OBJNULL */"}, "BIS_fnc_liveFeedSetTarget": {"syntax": "target call BIS_fnc_liveFeedSetTarget", "server": false, "broadcasted": false, "description": "Set the target of the current live feed.", "example": "player call BIS_fnc_liveFeedSetTarget;", "local": false}, "diag_list": {"syntax": "diag_list name", "server": false, "broadcasted": false, "description": "Returns an array of all diag modes available in the game.", "example": "diag_list \"toggle\";", "local": false}, "ctrlIDD": {"syntax": "ctrlIDD display", "server": false, "broadcasted": false, "description": "Returns display IDD.", "example": "ctrlIDD findDisplay 46; //46", "local": false}, "BIS_fnc_prepareAO": {"syntax": "density call BIS_fnc_prepareAO", "server": false, "broadcasted": false, "description": "Spawns random patrols and/or vehicles in trigger areas with proper names. Side selected in the triggers \"Activation\" listbox will determine the side of the spawned asset(s).", "example": "0.75 call BIS_fnc_prepareAO;", "local": false}, "BIS_fnc_getCfgDataPool": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: * Get array of attribute values out of the parent config class. * Attributes need to be in this format: \"_n\", where n is an index number (starting from 0). * If any discrepancy in indexing is detected, loading will stop and only the correctly indexed values will be returned. * Max. index supported is 99. * If more then 9 attributes used, 0-9 need to use leading zeroes. CFG example: class Timeline { class StageA { _0[] = {2035,7,7,04,30}; _1[] = {2035,7,7,06,15}; _2[] = {2035,7,7,18,35}; _3[] = {2035,7,8,09,05}; _4[] = {2035,7,8,13,25}; _5[] = {2035,7,8,17,10}; _6[] = {2035,7,8,21,40}; _7[] = {2035,7,9,19,55}; }; }; Remark(s): * Can by called 2 ways: * 1st way (general) works for any config. * 2nd way is for comfortable working with mission description.ext. Parameter(s): _this: CFG _this: ARRAY of STRINGS - missionConfigFile classes. Example: * 1st way of calling: _array = (configfile >> \"BulletBubbles\" >> \"BulletBubbles1\") call BIS_fnc_getCfgData; _array = (missionconfigfile >> \"Timeline\" >> \"StageA\") call BIS_fnc_getCfgData; * 2nd way of calling: _array = [\"Timeline\",\"StageA\"] call BIS_fnc_getCfgData; Returns: ARRAY or nil, if parent class is not found */"}, "setDebriefingText": {"syntax": "endType setDebriefingText [title, description]", "server": false, "broadcasted": false, "description": "Sets debriefing text for endType defined in CfgDebriefing.", "example": "_currentObjective = (taskDescription (currentTask player)) select 2; \"endDeath\" setDebriefingText [\"You Lose\",\"All of your men were killed while assaulting the \" + _currentObjective];", "local": false}, "BIS_fnc_basicTask": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "Internally used .fsm."}, "BIS_fnc_taskAlwaysVisible": {"syntax": "taskID call BIS_fnc_taskAlwaysVisible", "server": false, "broadcasted": false, "description": "Returns true if task is forced to be always visible (default: false).", "example": "_isForcedVisible = \"task_1\" call BIS_fnc_taskAlwaysVisible;", "local": false}, "append": {"syntax": "array1 append array2", "server": false, "broadcasted": false, "description": "Appends array2 to the back of array1 modifying array1.", "example": "_arr = [1,2,3]; _arr append [4,5,6]; hint str _arr; //[1,2,3,4,5,6]", "local": false}, "BIS_fnc_modulePunishment": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Make a unit play a punishment animation Parameter(s): http://community.bistudio.com/wiki/Arma_3_Modules Returns: NONE */ // Parameters"}, "curatorCameraArea": {"syntax": "curatorCameraArea curatorObj", "server": false, "broadcasted": false, "description": "Returns all curator camera areas.", "example": "_camArea = curatorCameraArea myCurator;", "local": false}, "secondaryWeaponMagazine": {"syntax": "secondaryWeaponMagazine unit", "server": false, "broadcasted": false, "description": "Returns either single element array, containing class name of currently loaded in the secondary weapon magazine, or an empty array if unit has no secondary weapon or secondary weapon is not loaded. This command is used for infantry weapons only.", "example": "hint secondaryWeaponMagazine player; //[\"NLAW_F\"]", "local": false}, "setMusicEventHandler": {"syntax": "setMusicEventHandler [type, function]", "server": false, "broadcasted": false, "description": "Sets given music track event handler. Will overwrite other music event handlers. Use addMusicEventHandler if you want to stack them.", "example": "_ehID = setMusicEventHandler [\"MusicStart\", \"hint str _this\"];", "local": false}, "BIS_fnc_moduleFDFadeMarker": {"syntax": "[markerName, alpha] spawn BIS_fnc_moduleFDFadeMarker", "server": false, "broadcasted": false, "description": "Gradually change the alpha of the given marker.", "example": "[\"tankMarker\", 0.25] spawn BIS_fnc_moduleFDFadeMarker;", "local": false}, "parseSimpleArray": {"syntax": "parseSimpleArray stringArray", "server": false, "broadcasted": false, "description": "Converts given, formatted as simple array, String into a valid Array. Simple array is array consisting of Numbers, Strings, Booleans and Arrays of all of the above. For example: [1,\"2\",true,[4,\"five\",false]]. The string representation of this array compatible with parseSimpleArray will be \"[1,\"\"2\"\",true,[4,\"\"five\"\",false]]\" accordingly.", "example": "_arr = parseSimpleArray \"[1,2,3]\";", "local": false}, "ropeCut": {"syntax": "ropeCut [rope, distance]", "server": false, "broadcasted": false, "description": "Cut rope and detach rope from vehicle", "example": "ropeCut [ ropes heli1 select 0, 5];", "local": false}, "setAmmo": {"syntax": "unit setAmmo [weapon, count]", "server": false, "broadcasted": true, "description": "Sets custom ammo count in the currently loaded magazine of the specified weapon. The unit must be local to the computer where command is executed.", "example": "Set player's handgun magazine ammo count to 10 rounds: player setAmmo [handgunWeapon player, 10];", "local": true}, "getCustomAimingCoef": {"syntax": "getCustomAimCoef unit", "server": true, "broadcasted": false, "description": "Returns aimPrecision from animation state with custom value that will directly affects weapon sway size and speed.", "example": "_coef = getCustomAimCoef player", "local": false}, "ctrlModel": {"syntax": "ctrlModel control", "server": false, "broadcasted": false, "description": "Returns model used in 3D Dialog Control.", "example": "_model = ctrlModel _control3D;", "local": false}, "BIS_fnc_moduleRank": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_moduleRespawnPosition": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "buldozer_LoadNewRoads": {"syntax": "buldozer_LoadNewRoads path", "server": false, "broadcasted": false, "description": "Generates new roads. Working only in buldozer.", "example": "result = buldozer_LoadNewRoads \"C:/A3/Map_Stratis/data/roads/\"", "local": false}, "BIS_fnc_groupVehicles": {"syntax": "[target, assignedVeh] call BIS_fnc_groupVehicles", "server": false, "broadcasted": false, "description": "Returns all vehicles a group possesses, assigned vehicles can be included.", "example": "[ group player, true ] call BIS_fnc_groupVehicles;", "local": false}, "BIS_fnc_moduleHealth": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "isLaserOn": {"syntax": "isLaserOn vehicle", "server": false, "broadcasted": true, "description": "Returns true if the vehicle has its laser turned on. Not to be confused with isIRLaserOn which is for units", "example": "_on = isLaserOn _vehicle;", "local": true}, "BIS_fnc_diagMacros": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Exports config macros. Parameter(s): 0: CONFIG or ARRAY - config container to be searched (e.g. configFile >> \"CfgVehicles\") or list of classes or classnames 1: ARRAY - list of macro names to be used (e.g. [\"MAPSIZE\",\"NAMESOUND\"]) 2 (Optional): STRING - macro category name (when param 0 is CONFIG, its classname is used by default - e.g. \"CfgVehicles\") Returns: STRING */"}, "vehicleCargoEnabled": {"syntax": "vehicleCargoEnabled vehicle", "server": false, "broadcasted": false, "description": "Check if the vehicle has enabled transporting other vehicles or not.", "example": "Blackfish (Vehicle Transport) with given variable name blackfish _canTransportVehicles = vehicleCargoEnabled blackfish; //returns true", "local": false}, "BIS_fnc_ORBATTooltip": {"syntax": "[target, control, position] call BIS_fnc_ORBATTooltip", "server": false, "broadcasted": false, "description": "Animates an ORBAT viewer.", "example": "Example needed", "local": false}, "commandSuppressiveFire": {"syntax": "unitName commandSuppressiveFire target", "server": false, "broadcasted": false, "description": "Order the given unit to suppress a given position or target (via the radio).", "example": "_soldier commandSuppressiveFire [1869.508,5760.962,0.000]", "local": true}, "removeAllCuratorAddons": {"syntax": "removeAllCuratorAddons curatorObj", "server": false, "broadcasted": false, "description": "Restrict access to all addons for given curator.", "example": "removeAllCuratorAddons myCurator;", "local": false}, "canSlingLoad": {"syntax": "vehicle canSlingLoad cargo", "server": false, "broadcasted": false, "description": "Returns true if it is possible to sling load cargo", "example": "_slingable = veh1 canSlingLoad veh2;", "local": false}, "removeMagazineGlobal": {"syntax": "unit removeMagazineGlobal magazineName", "server": true, "broadcasted": true, "description": "Removes the magazine from the unit.", "example": "player removeMagazineGlobal \"30Rnd_65x39_caseless_mag\";", "local": false}, "BIS_fnc_moduleCuratorSetAttributes": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "setGusts": {"syntax": "time setGusts value", "server": false, "broadcasted": false, "description": "Changes the gusts value smoothly during the given time (in seconds). A time of zero means there will be an immediate change. Value is 0 to 1.", "example": "60 setGusts 0.75;", "local": false}, "targetKnowledge": {"syntax": "unit targetKnowledge target", "server": false, "broadcasted": false, "description": "Returns unit's knowledge about target. The returned array includes information whether the target is", "example": "_allInfo = _soldierOne targetKnowledge _jeepOne;", "local": false}, "setPilotLight": {"syntax": "vehicle setPilotLight set", "server": false, "broadcasted": true, "description": "Switches headlights of a vehicle on/off. Note that the vehicle has to be local, for global variant use Arma 3 Actions \"LightOn\"/\"LightOff\"", "example": "car setPilotLight true;", "local": true}, "vehicleReceiveRemoteTargets": {"syntax": "vehicleReceiveRemoteTargets vehicle", "server": false, "broadcasted": false, "description": "Gets whether the vehicle can acquire targets via datalink from the Side center.", "example": "vehicleReceiveRemoteTargets (vehicle player);", "local": false}, "currentMagazineDetail": {"syntax": "currentMagazineDetail vehicle", "server": false, "broadcasted": false, "description": "Returns description of vehicle's currently loaded magazine, its ammo count (current/default) and its id.", "example": "_currentMagazineDetail = currentMagazineDetail player; //\"6.5mm 30Rnd STANAG Mag(30/30)[id:0]\"", "local": false}, "disableUAVConnectability": {"syntax": "object disableUAVConnectability [uav, checkAllItems]", "server": false, "broadcasted": false, "description": "Disables unit's AV terminal(s) connecting to UAV.", "example": "unit disableUAVConnectability [uav,true];", "local": false}, "tvSort": {"syntax": "control tvSort [path, reversed]", "server": false, "broadcasted": false, "description": "Sorts childrens of given item by item name (tvText). IDC means id of parent Tree View.", "example": "control tvSort [[0], true];", "local": false}, "cbChecked": {"syntax": "cbChecked control", "server": false, "broadcasted": false, "description": "Returns the current state of a checkbox (CT_CHECKBOX type 77 of Dialog Control).", "example": "_checked = cbChecked _myCheckBox;", "local": false}, "BIS_fnc_moduleEndMission": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "isEqualType": {"syntax": "val1 isEqualType val2", "server": false, "broadcasted": false, "description": "Compares 2 values by their type. A much faster alternative to typeName a == typeName b.", "example": "_var = [1,2,3]; _var isEqualType 0; //false _var isEqualType []; //true", "local": false}, "eyeDirection": {"syntax": "eyeDirection unit", "server": true, "broadcasted": false, "description": "Returns the direction object is watching (eyes, or a vehicle primary observer).", "example": "can = \"Land_Can_V3_F\" createVehicle position player; onEachFrame { can setPosASL [ (eyePos player select 0) + (eyeDirection player select 0), (eyePos player select 1) + (eyeDirection player select 1), (eyePos player select 2) + (eyeDirection player select 2) ] }", "local": false}, "setStaminaScheme": {"syntax": "setStaminaScheme scheme", "server": false, "broadcasted": false, "description": "Set stamina bar color. The scheme can be \"Normal\", \"FastDrain\", \"Exhausted\" or \"Default\".", "example": "setStaminaScheme \"Default\";", "local": false}, "addHandgunItem": {"syntax": "unit addHandgunItem item", "server": false, "broadcasted": true, "description": "Adds weapon item to the weapon cargo space. This is used for infantry weapons.", "example": "player addHandgunItem \"muzzle_snds_L\";", "local": true}, "addMissionEventHandler": {"syntax": "addMissionEventHandler [type, command]", "server": false, "broadcasted": false, "description": "Adds event handler (EH) attached to the current mission and returns EH handle. If EH has some data to return upon event, it is passed in _this variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution.", "example": "// A script could be executed to stop custom scripts graciously, or save progress & stats, for example: _id = addMissionEventHandler [\"Ended\",{ _this execVM \"missionEnded.sqf\" }];", "local": false}, "set3DENGrid": {"syntax": "set3DENGrid [type,value]", "server": false, "broadcasted": false, "description": "Sets the grid increment for the given transformation type.", "example": "set3DENGrid [\"t\",100];// 100m movement increment", "local": false}, "remoteExecCall": {"syntax": "params remoteExecCall [functionName, targets, JIP]", "server": false, "broadcasted": false, "description": "Asks server to execute given scripted function or script command on given target PC. The environment chosen for the execution is as follows:", "example": "// runs hint \"hello\" on each connected client \"hello\" remoteExecCall [\"hint\"];", "local": false}, "curatorRegisteredObjects": {"syntax": "curatorRegisteredObjects curatorObj", "server": false, "broadcasted": false, "description": "Returns array with all objects that has curator registered and their settings.", "example": "Example needed", "local": false}, "getAssignedCuratorLogic": {"syntax": "getAssignedCuratorLogic player", "server": false, "broadcasted": false, "description": "Returns curator logic to which given player has access.", "example": "(getAssignedCuratorLogic player) removeCuratorEditableObjects [allDead,true];", "local": false}, "simulCloudDensity": {"syntax": "simulCloudDensity pos", "server": false, "broadcasted": false, "description": "Returns density of clouds at given position.", "example": "simulCloudDensity (getPos player)", "local": false}, "BIS_fnc_taskSetState": {"syntax": "[taskName, taskState, showHint] call BIS_fnc_taskSetState", "server": false, "broadcasted": false, "description": "Set a task's state.", "example": "[\"BIS_task_01\",\"CANCELED\"] call BIS_fnc_taskSetState;", "local": false}, "BIS_fnc_moduleHQ": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Register or return side HQ speaker Parameter(s): 0: OBJECT - register the HQ SIDE - return HQ of the side Returns: OBJECT - the HQ */"}, "BIS_fnc_drawMinefields": {"syntax": "call BIS_fnc_drawMinefields", "server": false, "broadcasted": false, "description": "Draw minefields on the map. Dynamically calculated from all mines positions. Distinguishes AP and AT minefields.", "example": "call BIS_fnc_drawMinefields;", "local": false}, "BIS_fnc_initIntelObject": {"syntax": "[ object ] call BIS_fnc_initIntelObject;", "server": false, "broadcasted": false, "description": "The function sets up an object as intel retrievable by the players by adding a \"Take Intel\" addAction to it.", "example": "Setup an object as intel from its init attribute in the editor.", "local": false}, "ropeDestroy": {"syntax": "ropeDestroy rope", "server": false, "broadcasted": false, "description": "Destroy a rope.", "example": "ropeDestroy myRope;", "local": false}, "getPosASLW": {"syntax": "getPosASLW obj", "server": true, "broadcasted": false, "description": "Returns the object position height above sea surface (waves included).", "example": "_pos = getPosASLW _diver;", "local": false}, "face": {"syntax": "face person", "server": false, "broadcasted": false, "description": "Returns the face of a person.", "example": "face player", "local": false}, "BIS_fnc_moduleGenericRadio": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_localize": {"syntax": "localizationString call BIS_fnc_localize", "server": false, "broadcasted": false, "description": "Checks if passed string is localization key and if so, return the localized text. Else, returns the passed string itself.", "example": "// assuming the stringtable contains a key \"STR_someString\" with the value \"Hello world\" \"STR_someString\" call BIS_fnc_localize; // returns \"Hello world\" // assuming the stringtable does not contain a key \"STR_anotherString\" \"STR_anotherString\" call BIS_fnc_localize; // returns \"STR_anotherString\"", "local": false}, "clearItemCargo": {"syntax": "clearItemCargo box", "server": false, "broadcasted": false, "description": "Removes all items from ammo box (or any general weapon holder container).", "example": "clearItemCargo myBox;", "local": false}, "ropes": {"syntax": "ropes ropesOwner", "server": false, "broadcasted": false, "description": "Returns all ropes attached to a ropes owner vehicle in an Array.", "example": "hint str (ropes vehicle player);", "local": false}, "actionIDs": {"syntax": "actionIDs entity", "server": true, "broadcasted": false, "description": "Returns Array of Numbers, where numbers are IDs of all user actions added to given entity with addAction command.", "example": "_actions = actionIDs player;", "local": false}, "BIS_fnc_isCampaign": {"syntax": "[] call BIS_fnc_isCampaign", "server": false, "broadcasted": false, "description": "Checks to see if a mission is being run in a campaign.", "example": "[] call BIS_fnc_isCampaign;", "local": false}, "BIS_fnc_respawnMenuInventory": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "compileFinal": {"syntax": "Code = compileFinal expression", "server": false, "broadcasted": false, "description": "Compile expression and makes it final, preventing it from:", "example": "myCode = compileFinal \"a = a + 1\"; call myCode;", "local": false}, "profileName": {"syntax": "profileName", "server": false, "broadcasted": false, "description": "Returns profile name.", "example": "_myProfileName = profileName;", "local": false}, "getEnvSoundController": {"syntax": "position getEnvSoundController controller", "server": false, "broadcasted": false, "description": "Returns value of the specified controller.", "example": "position player getEnvSoundController \"trees\"; //0.3333", "local": false}, "isRemoteExecuted": {"syntax": "isRemoteExecuted", "server": false, "broadcasted": false, "description": "Returns true if the code context is being remote executed by remoteExec or remoteExecCall. In SP always returns false. See also isRemoteExecutedJIP", "example": "_remoteExecuted = isRemoteExecuted;", "local": false}, "vestMagazines": {"syntax": "vestMagazines unit", "server": false, "broadcasted": false, "description": "Get array with all magazines from vest of the given unit.", "example": "vestMagazines player;", "local": false}, "BIS_fnc_establishingShot": {"syntax": "[target, text, altitude, radius, angle, rotation, iconOptions, mode, fadeIn,waitTime] spawn BIS_fnc_establishingShot", "server": false, "broadcasted": false, "description": "Play a fake UAV observational sequence which serves as an establishing shot.", "example": "[player, \"I can see my house from here\", 500, 250, 75, 1, [], 0, true] spawn BIS_fnc_establishingShot", "local": false}, "BIS_fnc_moduleCuratorAddPoints": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_completedCuratorChallengesCount": {"syntax": "curator call BIS_fnc_completedCuratorChallengesCount", "server": false, "broadcasted": false, "description": "Return number of completed curator challenges.", "example": "curatorModule call BIS_fnc_completedCuratorChallengesCount;", "local": false}, "animationNames": {"syntax": "animationNames object", "server": false, "broadcasted": false, "description": "Returns Array of Strings where elements are the names of model animations, which should theoretically be available for use with animate command. However in practice this depends on whether animation is also made available for use in scripts via config.", "example": "_names = animationNames static_AT; Returns: [\"MainTurret\", \"MainGun\", \"MainTurret_destructX\", \"MainTurret_destructY\", \"MainTurret_destructZ\", \"MainGun_destructX\", \"MainGun_destructY\", \"MainGun_destructZ\", \"magazine_destruct\", \"ammo_belt_destruct\", \"bolt_destruct\", \"charging_handle_destruct\", \"damagehideVez_destruct\", \"damagehideHlaven_destruct\", \"damagehideRecoil_destruct\", \"Turret_shake\", \"Turret_shake_aside\", \"Magazine_hide\", \"Ammo_belt_hide\", \"muzzleFlash\", \"AddAutonomous_unhide\", \"bullet001_reload_hide\", \"bullet002_reload_hide\", \"bullet003_reload_hide\", \"bullet004_reload_hide\", \"bullet005_reload_hide\", \"bullet006_reload_hide\", \"bullet007_reload_hide\", \"bullet008_reload_hide\"]", "local": false}, "BIS_fnc_fadeEffect": {"syntax": "[fadeInOrOut, blackOrWhite, duration, blur, music, ending, success] call BIS_fnc_fadeEffect", "server": false, "broadcasted": false, "description": "Easily carry out complex fading. Default values will be used if parameters aren't defined or set to nil.", "example": "[1, \"WHITE\", 5, 1] call BIS_fnc_fadeEffect;", "local": false}, "BIS_fnc_onPlayerConnected": {"syntax": "[code, params]] call BIS_fnc_onPlayerConnected", "server": false, "broadcasted": false, "description": "Executes a function on server every time a player connects the mission.", "example": "[ { params [\"_player\", \"_params\"]; hint name _player; hint _params; }, \"Parameter\" ] call BIS_fnc_onPlayerConnected;", "local": false}, "buldozer_reloadOperMap": {"syntax": "buldozer_reloadOperMap", "server": false, "broadcasted": false, "description": "Reload oper map visible in costMap diag tool. Working only in buldozer.", "example": "buldozer_reloadOperMap;", "local": false}, "BIS_fnc_VRDrawGrid": {"syntax": "[location, colour] call BIS_fnc_VRDrawGrid", "server": false, "broadcasted": false, "description": "Visualizes surface grid (used primarily for VR missions).", "example": "[getPosATL player, [0.078, 0.3647, 0.0]] call BIS_fnc_VRDrawGrid;", "local": false}, "magazinesAllTurrets": {"syntax": "magazinesAllTurrets vehicle", "server": true, "broadcasted": false, "description": "Returns all magazines (including empty) from all vehicle turrets (including driver turret [-1]) and their ammo counts.", "example": "_mags = magazinesAllTurrets vehicle player;", "local": false}, "BIS_fnc_curatorChallengeFireWeapon": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_initRespawnBackpack": {"syntax": "call BIS_fnc_initRespawnBackpack", "server": false, "broadcasted": false, "description": "Init respawn backpack. Whover \"assembles\" it will receive a new respawn position. When backpack object has 'respawnNearbyPlayers' attribute set to 1, nearby player will receive the respawn as well.", "example": "call BIS_fnc_initRespawnBackpack;", "local": false}, "create3DENEntity": {"syntax": "create3DENEntity [mode, class, position, (isEmpty)]", "server": false, "broadcasted": false, "description": "Create new Eden Entity. Used for creating individual entities; to create a composition (e.g., infantry squad), use create3DENComposition.", "example": "dude1 = create3DENEntity [\"Object\",\"B_Soldier_F\",screenToWorld [0.5,0.5]];", "local": false}, "setLightDayLight": {"syntax": "light setLightDayLight bool", "server": false, "broadcasted": false, "description": "Sets if light can be used during the day.", "example": "myLight setLightDayLight true;", "local": true}, "canAddItemToVest": {"syntax": "unit canAddItemToVest item", "server": false, "broadcasted": false, "description": "Checks if given object can be stored into soldier's vest.", "example": "_item = \"HandGrenade\"; _fits = player canAddItemToVest _item; if (_fits) then { player addItemToVest _item; } else { hint \"no room!\"; };", "local": false}, "get3DENLayerEntities": {"syntax": "get3DENLayerEntities layerID", "server": false, "broadcasted": false, "description": "Return all entities and sub-layer in Eden Entity layer.", "example": "_myLayer = -1 add3DENLayer \"CTRG\"; player set3DENLayer _myLayer; _entities = get3DENLayerEntities _myLayer;", "local": false}, "setObjectViewDistance": {"syntax": "setObjectViewDistance distance", "server": false, "broadcasted": false, "description": "Sets the rendering distance of objects (and shadows).", "example": "setObjectViewDistance 2000;", "local": false}, "reverse": {"syntax": "reverse array", "server": false, "broadcasted": false, "description": "Reverses given array by reference (modifies the original array, just like resize).", "example": "_arr = [1,2,3]; reverse _arr; hint str _arr; //[3,2,1]", "local": false}, "forceFlagTexture": {"syntax": "object forceFlagTexture texture", "server": true, "broadcasted": true, "description": "Forces a flag texture onto a flag carrier (unit, vehicle or flag pole). No flag holder is required. If \"\" is used as texture, the texture is removed. This will override regularly owned flags. This type of flag texture cannot be retrieved using flagTexture.", "example": "player forceFlagTexture \"\\A3\\Data_F\\Flags\\Flag_red_CO.paa\";", "local": false}, "ctHeaderCount": {"syntax": "ctHeaderCount ctrl", "server": false, "broadcasted": false, "description": "Returns number of headers (rows not included) in the RscControlsTable.", "example": "ctHeaderCount _control;", "local": true}, "particlesQuality": {"syntax": "particlesQuality", "server": false, "broadcasted": false, "description": "Returns current user settings for particles quality (configure->video->general->particles). 0-low, 1-normal, 2-high", "example": "_currentQuality = particlesQuality;", "local": false}, "BIS_fnc_diagKeyTest": {"syntax": "mode call BIS_fnc_diagKeyTest", "server": false, "broadcasted": false, "description": "Returns all user actions according to mode.", "example": "0 call BIS_fnc_diagKeyTest;", "local": false}, "BIS_fnc_respawnBase": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_addWeapon": {"syntax": "[unit, \"weaponClassName\", 1, 0] call BIS_fnc_addWeapon;", "server": false, "broadcasted": false, "description": "Adds a weapon to the specified unit, with magazine classnames taken from the weapon's config (in CfgWeapons). This function does not remove magazines nor weapons prior to adding the new weapon, so that still has to be done manually.", "example": "newGun = [player, \"arifle_SDAR_F\", 6] call BIS_fnc_addWeapon; // Adds 6 dual-purpose magazines and the underwater gun to the player.", "local": false}, "BIS_fnc_curatorVisionModes": {"syntax": "[curator] call BIS_fnc_curatorVisionModes", "server": false, "broadcasted": false, "description": "Toggle curator vision mode.", "example": "_visionModes = [Curator] call BIS_fnc_curatorVisionModes;", "local": false}, "BIS_fnc_selectRespawnTemplate": {"syntax": "[mode, arguments] call BIS_fnc_selectRespawnTemplate", "server": false, "broadcasted": false, "description": "Select respawn template from CfgRespawnTemplates and execute its script / function. Internal use.", "example": "[\"playerKilledScript\", []] call BIS_fnc_selectRespawnTemplate;", "local": false}, "BIS_fnc_sideIsEnemy": {"syntax": "[sideA, sideB] call BIS_fnc_sideIsEnemy;", "server": false, "broadcasted": false, "description": "Determines if side B is enemy to side A the way the game engine does it. The relationship table can be found here: Side relations.", "example": "_isEnemy = [west, east] call BIS_fnc_sideIsEnemy; //Checks if EAST is enemy to WEST.", "local": false}, "getPersonUsedDLCs": {"syntax": "getPersonUsedDLCs unit", "server": true, "broadcasted": false, "description": "Returns a list of all DLCs objects the unit is currently using. For example if a unit is inside a vehicle from DLC, it will return the code of that DLC.", "example": "_objects = getPersonUsedDLCs player;", "local": false}, "removeCuratorEditingArea": {"syntax": "curatorObj removeCuratorEditingArea editAreaID", "server": false, "broadcasted": false, "description": "Removes editing area for given curator.", "example": "myCurator removeCuratorEditingArea 3;", "local": false}, "markAsFinishedOnSteam": {"syntax": "markAsFinishedOnSteam", "server": false, "broadcasted": false, "description": "Marks current mission as finished on Steam. Returns true if Steam query is successfully started or false otherwise.", "example": "markAsFinishedOnSteam; endMission \"END1\";", "local": false}, "handgunWeapon": {"syntax": "handgunWeapon unit", "server": true, "broadcasted": false, "description": "Returns the name of a unit's handgun (an empty string if there is none).", "example": "hint handgunWeapon player; //\"hgun_P07_F\"", "local": false}, "diag_setLightNew": {"syntax": "diag_setLightNew config", "server": false, "broadcasted": false, "description": "Overrides currently used scene lightning. The operand is config that is placed as a string (not file). The changes may not be applied immediately, but can be forced by the call of simulWeatherSync.", "example": "diag_setLightNew \"sunOrMoon = 1; diffuse[] = { 0, 0, 0, 0 }; diffuseCloud[] = { 0, 0, 0, 0 }; ambient[] = { 0, 0, 0, 0 }; ... \"", "local": false}, "setOxygenRemaining": {"syntax": "unit setOxygenRemaining value", "server": false, "broadcasted": false, "description": "Sets oxygen remaining. It has no effect when soldier is not diving. Oxygen remaining is a number between 0 and 1.", "example": "player setOxygenRemaining 0; // Drowns player", "local": false}, "getUnitTrait": {"syntax": "unit getUnitTrait skillName", "server": true, "broadcasted": false, "description": "Gets the current value of a trait of the given unit.", "example": "player getUnitTrait \"Medic\";", "local": false}, "removeBackpackGlobal": {"syntax": "removeBackpackGlobal unit", "server": true, "broadcasted": true, "description": "Removes backpack from a unit. (even non-local)", "example": "removeBackpackGlobal player;", "local": false}, "isGroupDeletedWhenEmpty": {"syntax": "isGroupDeletedWhenEmpty group", "server": false, "broadcasted": false, "description": "Checks if the given group marked for auto-deletion when empty. See deleteGroupWhenEmpty.", "example": "_isMarked = isGroupDeletedWhenEmpty _group;", "local": false}, "BIS_fnc_loop": {"syntax": "[action, parameters] call BIS_fnc_loop", "server": false, "broadcasted": false, "description": "Loop stacked code/function with timing and conditional control. Code and conditions are executed in non-scheduled environment.", "example": "// hints time every five seconds [\"itemAdd\", [\"uniqueId\", { hint str time; }, 5]] call BIS_fnc_loop;", "local": false}, "getAllEnvSoundControllers": {"syntax": "getAllEnvSoundControllers position", "server": false, "broadcasted": false, "description": "Returns an array containing the names and values of environmental variables that can be used in simple expressions when configuring sounds.", "example": "getAllEnvSoundControllers position player;", "local": false}, "BIS_fnc_curatorChallengeGetInVehicle": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "setPilotCameraDirection": {"syntax": "object setPilotCameraDirection Vector3D", "server": false, "broadcasted": false, "description": "Sets the direction of object airplane or helicopter pilotCamera (vector in model space).", "example": "vehicle player setPilotCameraDirection [0,1,0] //re-centers the camera", "local": true}, "BIS_fnc_addCommMenuItem": {"syntax": "[owner,itemClass,textArguments,expressionArguments,notification] call BIS_fnc_addCommMenuItem;", "server": false, "broadcasted": false, "description": "Add communication menu to the given unit. The item will be available in the Communication menu and visualized in comm menu icon area.", "example": "_supportHeli = [player,\"Support_Request_CAS_Heli\"] call BIS_fnc_addCommMenuItem; _supportHeli = [player,\"Support_Request_CAS_Heli\",nil,nil,\"\"] call BIS_fnc_addCommMenuItem; // don't show notification", "local": false}, "BIS_fnc_setObjectTexture": {"syntax": "[object, textures] call BIS_fnc_setObjectTexture", "server": false, "broadcasted": false, "description": "Set object textures.", "example": "[player, \"#(rgb,8,8,3)color(0,0,1,1)\"] call BIS_fnc_setObjectTexture;", "local": false}, "BIS_fnc_ctrlFitToTextHeight": {"syntax": "[control,offset,time] spawn BIS_fnc_ctrlFitToTextHeight", "server": false, "broadcasted": false, "description": "Resize structured text control to fit its text height.", "example": "_height = [_ctrl, 1.5, 3] spawn BIS_fnc_ctrlFitToTextHeight;", "local": false}, "BIS_fnc_respawnSide": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_listCuratorPlayers": {"syntax": "[] call BIS_fnc_listCuratorPlayers", "server": false, "broadcasted": false, "description": "Returns list of playable units with access to curator.", "example": "call BIS_fnc_listCuratorPlayers;", "local": false}, "forceWeatherChange": {"syntax": "forceWeatherChange", "server": false, "broadcasted": false, "description": "Forces saved wanted settings for weather to be actual (BEWARE: Will cause lag).", "example": "240 setOvercast 1; 360 setRain 1; forceWeatherChange; comment \"force immediate change overriding smooth transition\";", "local": false}, "BIS_fnc_moduleAmmo": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "missionVersion": {"syntax": "missionVersion", "server": false, "broadcasted": false, "description": "Returns the version of the current mission.", "example": "_version = missionVersion;", "local": false}, "BIS_fnc_initVirtualUnit": {"syntax": "[object] call BIS_fnc_initVirtualUnit", "server": false, "broadcasted": false, "description": "Initialize virtual unit. Disable it, turn the camera upwards and save its correct side.", "example": "someObject call BIS_fnc_initVirtualUnit;", "local": false}, "inRangeOfArtillery": {"syntax": "pos inRangeOfArtillery [[unit], magazineType]", "server": true, "broadcasted": false, "description": "Returns true if all given units are able to fire at given position with given magazineType.", "example": "_isInRange = getMarkerPos \"myTarget\" inRangeOfArtillery [[myArty], \"32Rnd_155mm_Mo_shells\"]", "local": false}, "setPosWorld": {"syntax": "object setPosWorld position", "server": true, "broadcasted": true, "description": "Sets position of an object based on PositionWorld, which is PositionASL of the model centre [0,0,0].", "example": "_obj setPosWorld getPosWorld _obj;", "local": false}, "BIS_fnc_showNotification": {"syntax": "[template,(arguments)] call BIS_fnc_showNotification;", "server": false, "broadcasted": false, "description": "Show Notification.", "example": "[\"TaskSucceeded\",[\"\",\"Disable the nuke\"]] call BIS_fnc_showNotification;", "local": false}, "doSuppressiveFire": {"syntax": "unitName doSuppressiveFire target", "server": false, "broadcasted": false, "description": "Order the given unit to suppress a given position or target (without radio messages).", "example": "_soldier doSuppressiveFire [1869.508,5760.962,0.000]", "local": true}, "boundingBoxReal": {"syntax": "boundingBoxReal obj", "server": false, "broadcasted": false, "description": "Returns a bounding box of given object in model coordinates space. This command is similar to boundingBox but gives more precise measurements.", "example": "_bbr = boundingBoxReal vehicle player; _p1 = _bbr select 0; _p2 = _bbr select 1; _maxWidth = abs ((_p2 select 0) - (_p1 select 0)); _maxLength = abs ((_p2 select 1) - (_p1 select 1)); _maxHeight = abs ((_p2 select 2) - (_p1 select 2));", "local": false}, "stance": {"syntax": "stance unit", "server": true, "broadcasted": false, "description": "Returns the stance of the given unit. It can be one of:", "example": "if (stance player == \"STAND\") then {hint \"I am standing!\"};", "local": false}, "moonPhase": {"syntax": "moonPhase date", "server": false, "broadcasted": false, "description": "Returns the phase of the in-game Moon on the given date in range 0...1, where 0 - new Moon, 1 - full Moon. According to this command the fullest Moon in Arma 3 at midnight is on setDate [4804,7,13,0,0]; Use Moon Phase Utility to find out date for a mission with desired moon.", "example": "_currentMoonPhase = moonPhase date;", "local": false}, "BIS_fnc_nearestRoad": {"syntax": "[center, radius, blacklist] call BIS_fnc_nearestRoad", "server": false, "broadcasted": false, "description": "Find the nearest road segment to certain position, within given radius.", "example": "_nearestRoad = [getPosATL player, 500] call BIS_fnc_nearestRoad;", "local": false}, "BIS_fnc_textTiles": {"syntax": "[content, position, tileSize, duration, fadeInOutTime, tileTransparency] spawn BIS_fnc_textTiles", "server": false, "broadcasted": false, "description": "Show animated text with background tiles. Can be used to display mission name.", "example": "[parseText \"<t font='PuristaBold' size='1.6'>MyMission</t><br />by Username\", true, nil, 7, 0.7, 0] spawn BIS_fnc_textTiles", "local": false}, "BIS_fnc_advHintArg": {"syntax": "[arguments,HTMLColour,hintClass] call BIS_fnc_advHintArg", "server": false, "broadcasted": false, "description": "Advanced hint arguments preprocess.", "example": "Example needed", "local": false}, "createSite": {"syntax": "type createSite pos", "server": false, "broadcasted": false, "description": "Create a new site.", "example": "-", "local": false}, "BIS_fnc_initParams": {"syntax": "[modules] call BIS_fnc_initParams;", "server": false, "broadcasted": false, "description": "Initialize mission params and create log in the diary.", "example": "call BIS_fnc_initParams;", "local": false}, "animateBay": {"syntax": "vehicle animateBay [pylon name/index, anim phase]", "server": false, "broadcasted": false, "description": "Force animation of bay to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released when bay state =1.", "example": "(vehicle player) animateBay [\"pylonLeft1\", 0.5];", "local": false}, "currentThrowable": {"syntax": "currentThrowable player", "server": false, "broadcasted": false, "description": "Returns currently selected throwable, which will be launched if user presses \"G\".", "example": "currentThrowable player; //[\"SmokeShellGreen\",\"SmokeShellGreenMuzzle\",[1.00002e+007,0]]", "local": false}, "removeItems": {"syntax": "unit removeItems item", "server": false, "broadcasted": false, "description": "Removes all items with given template from the inventory.", "example": "player removeItems \"FirstAidKit\";", "local": false}, "BIS_fnc_basicBackpack": {"syntax": "backPackClassName call BIS_fnc_basicBackpack;", "server": false, "broadcasted": false, "description": "Determines basic backpack with no equipment present (ie empty).", "example": "baseBackpack = \"b_assaultpack_rgr_medic\" call BIS_fnc_basicBackpack; // Returns \"b_assaultpack_rgr\", the base class.", "local": false}, "getSuppression": {"syntax": "getSuppression unit", "server": false, "broadcasted": false, "description": "Gets the suppression value of given unit. Returns SCALAR between 0 and 1. Suppression is not calculated for player entities.", "example": "getSuppression AI_unit_1;", "local": true}, "BIS_fnc_typeText2": {"syntax": "[stringLines, posX, posY, alignBottom, rootFormat, abortParams, abortCond, playSounds] call BIS_fnc_typeText2", "server": false, "broadcasted": false, "description": "Types a structured text on the screen, letter by letter, cursor blinking.", "example": "[ [ [\"CAMP ROGAIN,\",\"align = 'center' shadow = '1' size = '0.7' font='PuristaBold'\"], [\"RESSUPLY POINT\",\"align = 'center' shadow = '1' size = '0.7'\",\"#aaaaaa\"], [\"\",\"<br/>\"], [\"10 MINUTES LATER ...\",\"align = 'center' shadow = '1' size = '1.0'\"] ] ] spawn BIS_fnc_typeText2;", "local": false}, "shownHUD": {"syntax": "shownHUD", "server": false, "broadcasted": false, "description": "Returns array of Booleans corresponding to the visibility of various HUD elements (see extended showHUD).", "example": "_hudStatus = shownHUD;", "local": false}, "BIS_fnc_earthquake": {"syntax": "[intensity] call BIS_fnc_earthquake", "server": false, "broadcasted": false, "description": "Earthquake simulation - now just camera shake and sound. Stamina is impacted by the earthquake too.", "example": "[4] call BIS_fnc_earthquake;", "local": false}, "BIS_fnc_VRCourseLaunchers1": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "BIS_fnc_drawRespawnPositions": {"syntax": "[state] call BIS_fnc_drawRespawnPositions", "server": false, "broadcasted": false, "description": "Draws respawn positions on the map which were added by BIS_fnc_addRespawnPosition.", "example": "[ true ] call BIS_fnc_drawRespawnPositions;", "local": false}, "enableCaustics": {"syntax": "enableCaustics bool", "server": false, "broadcasted": false, "description": "Enable/disable caustics drawing.", "example": "enableCaustics true", "local": false}, "get3DENConnections": {"syntax": "get3DENConnections entity", "server": false, "broadcasted": false, "description": "Return all connections currently present on an entity.", "example": "Example needed", "local": false}, "commandArtilleryFire": {"syntax": "unit commandArtilleryFire [position, type, rounds]", "server": false, "broadcasted": false, "description": "Orders a unit to reload defined magazine commence fire burst on the given position (via the radio).", "example": "mortar1 commandArtilleryFire [[3000, 120, 1000], \"8Rnd_82mm_Mo_shells\", 3];", "local": false}, "BIS_fnc_moduleCuratorSetObjectCost": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_allSynchronizedObjects": {"syntax": "[object, filter] call BIS_fnc_allSynchronizedObjects", "server": false, "broadcasted": false, "description": "Return all synchronized objects, including those synced to synced and so on.", "example": "[BIS_Poliakko,\"LocationArea_F\"] call BIS_fnc_allSynchronizedObjects;", "local": false}, "ctValue": {"syntax": "Number = ctValue Control", "server": false, "broadcasted": false, "description": "Returns metadata (number) associated with a particular row of RscControlsTable.", "example": "_number = ctValue _control;", "local": true}, "setAutonomous": {"syntax": "uav setAutonomous bool", "server": false, "broadcasted": false, "description": "Sets UAV autonomous mode.", "example": "uav setAutonomous true;", "local": false}, "setLightUseFlare": {"syntax": "light setLightUseFlare bool", "server": false, "broadcasted": false, "description": "Sets if light has flare.", "example": "myLight setLightUseFlare true;", "local": true}, "ctClear": {"syntax": "ctClear ctrl", "server": false, "broadcasted": false, "description": "Removes all the lines from the RscControlsTable. Returns Nothing.", "example": "ctClear _control;", "local": true}, "setVehicleReportRemoteTargets": {"syntax": "vehicle setVehicleReportRemoteTargets bool", "server": false, "broadcasted": false, "description": "Sets that the vehicle will share targets that were acquired by its own sensors via datalink to the Side center.", "example": "(vehicle player) setVehicleReportRemoteTargets true;", "local": false}, "setUnitTrait": {"syntax": "unit setUnitTrait [skillName, value, isCustom]", "server": false, "broadcasted": true, "description": "Enables or disables a trait or alters a trait of the given unit. Custom trait can only be a bool.", "example": "player setUnitTrait [\"Medic\",true];", "local": true}, "useAISteeringComponent": {"syntax": "useAISteeringComponent state", "server": false, "broadcasted": true, "description": "Enable the new AI driving, used to test the old and new AI driving.", "example": "useAISteeringComponent true", "local": false}, "BIS_fnc_disableSaving": {"syntax": "id call BIS_fnc_disableSaving", "server": false, "broadcasted": false, "description": "Controls the disabling of saving, stacking each request to prevent saving being enabled too early.", "example": "\"savingID\" call BIS_fnc_disableSaving;", "local": false}, "BIS_fnc_setDate": {"syntax": "[date, global, transition] call BIS_fnc_setDate", "server": false, "broadcasted": false, "description": "Instantly set date and share it across network.", "example": "[[2035, 12, 31, 23, 59], true, true] call BIS_fnc_setDate;", "local": false}, "get3DENLinesVisible": {"syntax": "get3DENLinesVisible", "server": false, "broadcasted": false, "description": "Get visibility state of Eden Editor lines.", "example": "if (get3DENLinesVisible select 0) then {hint \"Lines are visible in the map.\";};", "local": false}, "connectTerminalToUAV": {"syntax": "person connectTerminalToUAV uav", "server": true, "broadcasted": true, "description": "Connect person with UAV terminal to UAV unit. UAV Terminal item needs to be assigned to GPS slot. If UAV is already connected to another terminal, this new connection will fail.", "example": "bool = player connectTerminalToUAV uav1;", "local": false}, "magazinesAmmoCargo": {"syntax": "magazinesAmmoCargo vehicle", "server": false, "broadcasted": false, "description": "Returns an array of subarrays with the type names and ammo left of all the vehicle's cargo or container magazines.", "example": "magazinesAmmoCargo vehicle player;", "local": false}, "backpackMagazines": {"syntax": "backpackMagazines unit", "server": false, "broadcasted": false, "description": "Get array with all magazines from backpack of the given unit.", "example": "backpackMagazines player;", "local": false}, "BIS_fnc_drawCuratorLocations": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Label every vilage, town and city in curator interface Parameter(s): 0: OBJECT - curator module Returns: BOOL */"}, "setWindForce": {"syntax": "time setWindForce wind", "server": false, "broadcasted": false, "description": "Set max. wind overall wind changes in time. A time of zero means there will be an immediate change. A wind level of zero is minimal changes and a wind level of one means that wind can change rapidly.", "example": "1800 setWindForce 0.5", "local": false}, "BIS_fnc_curatorObjectRegisteredTable": {"syntax": "[curatorLogic, [className, cost, className, cost...]] call BIS_fnc_curatorObjectRegisteredTable;", "server": false, "broadcasted": false, "description": "Register curator object costs from a table.", "example": "// Nothing but the listed flare modules will show up in the curator's unit list", "local": false}, "isFlashlightOn": {"syntax": "unit isFlashlightOn weapon", "server": false, "broadcasted": false, "description": "Returns true if there is a linked and enabled flashlight on a given weapon.", "example": "player isFlashlightOn (currentWeapon player);", "local": false}, "allCurators": {"syntax": "allCurators", "server": false, "broadcasted": false, "description": "Returns list of all curators.", "example": "_myVariable = allCurators;", "local": false}, "ropeDetach": {"syntax": "vehicle ropeDetach rope;", "server": false, "broadcasted": false, "description": "Detach a rope from an object.", "example": "vehicle player ropeDetach myRope;", "local": false}, "everyBackpack": {"syntax": "everyBackpack box", "server": false, "broadcasted": false, "description": "Returns array of backpacks stored in given crate or vehicle. Used for accessing backpack content of a backpack on ground.", "example": "everyBackpack cursorTarget;", "local": false}, "BIS_fnc_isCuratorEditable": {"syntax": "[object] call BIS_fnc_isCuratorEditable", "server": false, "broadcasted": false, "description": "Return true if given object is editable by player (when he's curator).", "example": "[object_1] call BIS_fnc_isCuratorEditable;", "local": false}, "BIS_fnc_VRCourseCommandingBehaviour2": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "enableChannel": {"syntax": "channel enableChannel enable", "server": false, "broadcasted": false, "description": "Enables/disables UI functionality which is responsible for sending text or voice chat to the given chat channel. If the channel was disabled in description.ext, it can be enabled with this command, however the UI functionality changes will be local to the PC executing this command. What this command cannot do:", "example": "0 enableChannel false; // Disable user ability to send voice and text on global channel", "local": false}, "BIS_fnc_addClassOO": {"syntax": "class call BIS_fnc_addClassOO", "server": false, "broadcasted": false, "description": "Registering a class for the OO scripting shell.", "example": "\"someOOClass\" call BIS_fnc_addClassOO;", "local": false}, "canAddItemToBackpack": {"syntax": "unit canAddItemToBackpack item", "server": false, "broadcasted": false, "description": "Checks if given object can be stored into soldier's backpack.", "example": "_item = \"HandGrenade\"; _fits = player canAddItemToBackpack _item; if (_fits) then { player addItemToBackpack _item; } else { hint \"no room!\"; };", "local": false}, "isInstructorFigureEnabled": {"syntax": "isInstructorFigureEnabled", "server": false, "broadcasted": false, "description": "Returns the status of INSTRUCTOR FIGURE setting in UI (OPTIONS >> GAME >> GENERAL >> INSTRUCTOR FIGURE).", "example": "hint str isInstructorFigureEnabled;", "local": false}, "BIS_fnc_VRSpawnEffect": {"syntax": "[object, reverse, size] call BIS_fnc_VRSpawnEffect", "server": false, "broadcasted": false, "description": "VR (unit) spawn effect.", "example": "[ player, false, 5 ] call BIS_fnc_VRSpawnEffect;", "local": false}, "setVehicleRadar": {"syntax": "vehicle setVehicleRadar rules", "server": false, "broadcasted": false, "description": "Sets the AI rules of Radar usage (Emission Control). Automatic means Radar switched on only when in Combat. The command doesn't affect player-controlled vehicles.", "example": "_vehicle setVehicleRadar 1;", "local": false}, "BIS_fnc_returnChildren": {"syntax": "[config,depth,lastTier,firstTier]] call BIS_fnc_returnChildren", "server": false, "broadcasted": false, "description": "Returns all subclasses within given class.", "example": "[ configFile >> \"CfgFunctions\", 0, false, false ] call BIS_fnc_returnChildren;", "local": false}, "magazineTurretAmmo": {"syntax": "vehicle magazineTurretAmmo [magazineClass, turretPath]", "server": false, "broadcasted": false, "description": "Returns ammo count of given type from given turret", "example": "vehicle player magazineTurretAmmo [\"cls\", [0]]", "local": false}, "synchronizedTriggers": {"syntax": "synchronizedTriggers waypoint", "server": false, "broadcasted": false, "description": "Returns the list of triggers synchronized with a given waypoint.", "example": "Example needed", "local": false}, "setPylonsPriority": {"syntax": "vehicle setPylonsPriority [priority pylon1, priority pylon2, ...]", "server": false, "broadcasted": false, "description": "Overrides default pylons priorities", "example": "(vehicle player) setPylonsPriority [0,1,2,3,4,5,5,4,3,2,1,0];", "local": false}, "BIS_fnc_baseWeapon": {"syntax": "[\"weaponName\"] call BIS_fnc_baseWeapon;", "server": false, "broadcasted": false, "description": "Determines base weapon class, with no attachments.", "example": "newGun [\"arifle_Mk20_MRCO_pointer_F\"] call BIS_fnc_baseWeapon; // Returns \"arifle_Mk20_F\"", "local": false}, "BIS_fnc_removeAllScriptedEventHandlers": {"syntax": "[namespace, name] call BIS_fnc_removeAllScriptedEventHandlers", "server": false, "broadcasted": false, "description": "Removes all scripted event handler with given name. Additionally \"ScriptedEventHandlerRemoved\" scripted EH is called for every removed event handler. For the list of available scripted event handlers see Arma 3: Event Handlers/ScriptedEventHandlers", "example": "[missionNamespace, \"event\"] call BIS_fnc_removeAllScriptedEventHandlers;", "local": false}, "collect3DENHistory": {"syntax": "collect3DENHistory code", "server": false, "broadcasted": false, "description": "Execute a block of code in which all Eden Editor operations will be recorded as one history step. For example creating an entity, setting its attributes and then connections would normally be recorded as three different steps. Calling them all within single collect3DENHistory block will group them together and the user will need to undo only once to revert the changes.", "example": "collect3DENHistory { _logic = create3DENEntity [\"Logic\", \"Logic\", position player]; add3DENConnection [\"Sync\", [_logic], player ]; }; Creates a logic and connects it to player in one history step.", "local": false}, "setObjectMaterial": {"syntax": "obj setObjectMaterial [selectionNumber, material]", "server": true, "broadcasted": false, "description": "Sets material of object selection. The selection number is defined through the hiddenselection[]={} array in the vehicle's config (starting with 0).", "example": "car setObjectMaterial [0,\"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"]; car setObjectMaterial [1,\"A3\\Structures_F\\Data\\Windows\\window_set.rvmat\"];", "local": false}, "BIS_fnc_removeVirtualMagazineCargo": {"syntax": "[object,magClasses,removeGlobally] call BIS_fnc_removeVirtualMagazineCargo", "server": false, "broadcasted": false, "description": "Remove virtual magazines from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualMagazineCargo;", "local": false}, "isVehicleRadarOn": {"syntax": "isVehicleRadarOn vehicle", "server": false, "broadcasted": false, "description": "Returns true if vehicle has active sensors on", "example": "isVehicleRadarOn vehicle player\u00a0; // returns true if radar is turned on", "local": false}, "loadUniform": {"syntax": "loadUniform unit", "server": false, "broadcasted": false, "description": "Returns current sum of mass from items stored in a uniform.", "example": "_weight = loadUniform player;", "local": false}, "BIS_fnc_tridentGetRelationship": {"syntax": "[side_1,side_2] call BIS_fnc_tridentGetRelationship", "server": false, "broadcasted": false, "description": "Description: Get relationship of competing Trident sides. The value slowly decreases towards 0.", "example": "[ west, east ] call BIS_fnc_tridentGetRelationship;", "local": false}, "BIS_fnc_jukebox": {"syntax": "[function, parameters] call BIS_fnc_jukebox", "server": false, "broadcasted": false, "description": "Plays music, depending on the player group status.", "example": "[] call BIS_fnc_jukebox;", "local": false}, "BIS_fnc_VRCourseBallistics1": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "allCutLayers": {"syntax": "allCutLayers", "server": false, "broadcasted": false, "description": "Returns all named layers used by cutRsc, cutText, cutObj or cutFadeOut. The layer normally would be added on the first use of any of the aforementioned commands, however if a layer needs to be reserved it could be done like so:", "example": "_allLayers = allCutLayers;", "local": false}, "shownCuratorCompass": {"syntax": "shownCuratorCompass", "server": false, "broadcasted": false, "description": "Returns true if compass is shown.", "example": "_isShown = shownCuratorCompass;", "local": false}, "removeVest": {"syntax": "removeVest unit", "server": true, "broadcasted": true, "description": "Removes vest from unit.", "example": "removeVest player;", "local": false}, "BIS_fnc_respawnSeagull": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "getHit": {"syntax": "vehicle getHit selection", "server": true, "broadcasted": false, "description": "Returns selection damage. Same as getHitPointDamage only argument is selection part instead of hit point. Note: Some part names are in Czech; see translation table.", "example": "player getHit \"head\";", "local": false}, "BIS_fnc_activateAddons": {"syntax": "[addons] call BIS_fnc_activateAddons", "server": false, "broadcasted": false, "description": "Activate addons upon mission start. Doesn't work when the mission is already running.", "example": "[\"class_1\",\"class_2\"] call BIS_fnc_activateAddons;", "local": false}, "lockCameraTo": {"syntax": "vehicle lockCameraTo [target, turretPath]", "server": false, "broadcasted": false, "description": "Lock/Unlock stabilized camera (in vanilla used currently only for UAVs) to target.", "example": "uav lockCameraTo [vehicle, [0,0]];", "local": false}, "tvSetPictureRightColorSelected": {"syntax": "control tvSetPictureRightColorSelected [path, color]", "server": false, "broadcasted": false, "description": "Sets the color of the right picture of a tree item defined by path when item is selected", "example": "_control tvSetPictureRightColorSelected [[0], [1,0,1,1]]", "local": false}, "BIS_fnc_VRFadeIn": {"syntax": "call BIS_fnc_VRFadeIn", "server": false, "broadcasted": false, "description": "Fade In effect for VR.", "example": "call BIS_fnc_VRFadeIn;", "local": false}, "getMusicPlayedTime": {"syntax": "getMusicPlayedTime", "server": false, "broadcasted": false, "description": "Returns elapsed time in seconds for currently playing music track.", "example": "playMusic [\"LeadTrack06_F_Tank\", 0]; onEachFrame {hintSilent str getMusicPlayedTime};", "local": false}, "getPosWorld": {"syntax": "getPosWorld object", "server": true, "broadcasted": false, "description": "Returns PositionWorld, which is PositionASL of the model centre [0,0,0] of an object, rather than transformed boundingCenter or LandContact vertices.", "example": "_obj setPosWorld getPosWorld _obj;", "local": false}, "get3DENEntity": {"syntax": "get3DENEntity id", "server": false, "broadcasted": false, "description": "Returns Eden Entity based on its Eden ID. If the ID points to a layer or a comment, the ID will be returned instead.", "example": "myEntity = get3DENEntity 1", "local": false}, "linearConversion": {"syntax": "linearConversion [minFrom, maxFrom, value, minTo, maxTo, clip]", "server": false, "broadcasted": false, "description": "Converts given value from given \"from\" range to wanted \"to\" range. If clipping is set to true, the resulting value is guaranteed to be within \"to\" range no matter what.", "example": "linearConversion [4, 8, 5, 0, 1, false];", "local": false}, "BIS_fnc_setMissionStatusSlot": {"syntax": "[id, text, texture, color, fade, position, barHeight] call BIS_fnc_setMissionStatusSlot", "server": false, "broadcasted": false, "description": "Set a slot for mission status with sectors, respawn tickets, etc.", "example": "Example needed", "local": false}, "isDamageAllowed": {"syntax": "isDamageAllowed object", "server": true, "broadcasted": false, "description": "A getter for allowDamage command. The command indicates if damage is allowed at current locality, hence local effect of the command. A complete solution for being able to tell whether or not an object can be damaged at current locality looks like this: _canBeDamaged = local _obj && isDamageAllowed _obj;", "example": "_isGod =\u00a0!isDamageAllowed player;", "local": false}, "BIS_fnc_moduleEffectsFire": {"syntax": "[module] call BIS_fnc_moduleEffectsFire", "server": false, "broadcasted": false, "description": "Creates fire on position of module (called usually by BIS_fnc_moduleEffectsEmitterCreator).", "example": "[BIS_module] call BIS_fnc_moduleEffectsFire;", "local": false}, "BIS_fnc_moduleHint": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Show a hint to all players of side Parameter(s): http://community.bistudio.com/wiki/Arma_3_Modules Returns: NONE */ // Parameters"}, "setHUDMovementLevels": {"syntax": "setHUDMovementLevels [minSpeed, maxSpeed, minAlt, maxAlt, minDir, maxDir, targetOrPosition]", "server": false, "broadcasted": false, "description": "Set min/max movement borders displayed in HUD gauges. Use -1 to skip some value.", "example": "setHUDMovementLevels [20,30,-1,-1,0.23,2.1,[0,0,0]]", "local": false}, "BIS_fnc_respawnTimePenalty": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Set or execute respawn time penalty Parameter(s): 0: CODE - penalty condition 1: NUMBER - penalty delay 2: TEXT - text displayed when penalty is in effect Returns: BOOL */"}, "removeOwnedMine": {"syntax": "unit removeOwnedMine mine", "server": false, "broadcasted": false, "description": "Removes ownership over a remotely detonatable mine from the unit.", "example": "player removeOwnedMine SuperMine;", "local": false}, "ctAddHeader": {"syntax": "Array = ctAddHeader Control", "server": false, "broadcasted": false, "description": "Adds a header line of controls according to the HeaderTemplate class. It returns an array containing header index and array of created controls in a format [<headerIndex>, [<control0>, <control1>...<control n>]].", "example": "_array = ctAddHeader _control;", "local": true}, "getDirVisual": {"syntax": "getDirVisual object", "server": true, "broadcasted": false, "description": "Returns object's heading in the range from 0 to 360 in render time scope.", "example": "_dir = getDirVisual player;", "local": false}, "getUnitLoadout": {"syntax": "getUnitLoadout unit", "server": false, "broadcasted": false, "description": "Returns a Unit Loadout Array with all assigned items, weapons, containers and their stored items. When String for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If Config is given, it will search given config (including mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:", "example": "getUnitLoadout player;", "local": false}, "BIS_fnc_setPPeffectTemplate": {"syntax": "[template, transition, global] call BIS_fnc_setPPeffectTemplate;", "server": false, "broadcasted": false, "description": "Apply post-process effects according to template from CfgPostprocessTemplates.", "example": "[\"Mediterranean\", 3, false] call BIS_fnc_setPPeffectTemplate;", "local": false}, "isSteamMission": {"syntax": "isSteamMission", "server": false, "broadcasted": false, "description": "Returns true if the current mission is a Steam Workshop mission.", "example": "if (isSteamMission) then { hint \"Thank you for subscribing to my mission on Steam!\"; } else { hint \"Thank you for downloading my mission off the Internet!\"; };", "local": false}, "firstBackpack": {"syntax": "firstBackpack box", "server": false, "broadcasted": false, "description": "Returns the first stored backpack.", "example": "myVariable = firstBackpack myBox;", "local": false}, "ctData": {"syntax": "ctrl ctData row", "server": false, "broadcasted": false, "description": "Returns metadata (string) associated with a particular row of RscControlsTable.", "example": "ctData _control;", "local": true}, "BIS_fnc_onDiaryChanged": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Register code to be executed when diary item changes. Arguments passed into code are: 0: DISPLAY - map display 1: BOOL - true if clicked on subject list, false when on record list (clicking on subject may also trigger record) 2: STRING - subject name 3: STRING - record name 4: ANY - passed arguments (index of onDiaryChanged code when no custom arguments were used) Parameter(s): _this: CODE ARRAY - code with custom arguments in format [CODE,ARG1,ARG2,...] NUMBER - remove code of given index Returns: NUMBER - index of onDiaryChanged code */"}, "ropeLength": {"syntax": "ropeLength rope", "server": false, "broadcasted": false, "description": "Return rope length in meters (set by ropeCreate, ropeCut, ropeUnwind)", "example": "_length = ropeLength (ropes heli1 select 0);", "local": false}, "BIS_fnc_colorConfigToRGBA": {"syntax": "configColor call BIS_fnc_colorConfigToRGBA", "server": false, "broadcasted": false, "description": "Converts config color format to RGBA array of numbers.", "example": "[\"0.5 + 0.25\",0,0,1] call BIS_fnc_colorConfigToRGBA; // returns [0.75,0,0,1]", "local": false}, "objectCurators": {"syntax": "objectCurators obj", "server": false, "broadcasted": false, "description": "Returns array with all curators which can edit given object.", "example": "_curatorsThatcanEdit = objectCurators BIS_Tank;", "local": false}, "screenshot": {"syntax": "screenshot filename", "server": false, "broadcasted": false, "description": "Captures a screenshot and stores it to given filename.", "example": "screenshot \"\";", "local": false}, "is3DENMultiplayer": {"syntax": "is3DENMultiplayer", "server": false, "broadcasted": false, "description": "Returns true if the Eden Editor is in multiplayer mode. Returns true in the following cases:", "example": "if is3DENMultiplayer then {systemChat \"Your hosting a test server!\"};", "local": false}, "BIS_fnc_moduleCuratorSetCamera": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_VRCourseCommandingBehaviour3": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "leaderboardRequestRowsFriends": {"syntax": "leaderboardRequestRowsFriends boardName", "server": false, "broadcasted": false, "description": "Requests given leaderboard to download friends rows from the given leaderboard", "example": "leaderboardRequestRowsFriends \"TT01\";", "local": false}, "removeAllAssignedItems": {"syntax": "removeAllAssignedItems unit", "server": false, "broadcasted": true, "description": "Unassigns and deletes all linked items from inventory. The commands operates on assignedItems array, which doesnt include goggles or headgear. Use removeGoggles and removeHeadgear for those.", "example": "removeAllAssignedItems player;", "local": true}, "BIS_fnc_moduleFDStatsClear": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "getObjectViewDistance": {"syntax": "getObjectViewDistance", "server": false, "broadcasted": false, "description": "Gets the values of rendering distances of objects and shadows.", "example": "_arr = getObjectViewDistance;", "local": false}, "BIS_fnc_forceCuratorInterface": {"syntax": "[mode, waitUntil] call BIS_fnc_forceCuratorInterface", "server": false, "broadcasted": false, "description": "Force curator interface, so user cannot exit it by pressing Zeus key.", "example": "[ True, True ] call BIS_fnc_forceCuratorInterface;", "local": false}, "BIS_fnc_diagPreviewCycle": {"syntax": "[container, position, vector, display] call BIS_fnc_diagPreviewCycle", "server": false, "broadcasted": false, "description": "Previews selected class from the list. When cheat1 is activated, classnames will be shown instead of display names.", "example": "[ \"CfgVehicles\"] call BIS_fnc_diagPreviewCycle;", "local": false}, "disableCollisionWith": {"syntax": "vehicle disableCollisionWith vehicle", "server": false, "broadcasted": true, "description": "Disable collision between vehicles. This command doesn't disable collision between PhysX objects.", "example": "[_veh1, _veh2] remoteExecCall [\"disableCollisionWith\", 0, _veh1];", "local": true}, "BIS_fnc_liveFeedEffects": {"syntax": "effect call BIS_fnc_liveFeedEffects", "server": false, "broadcasted": false, "description": "Add effect to the current live feed.", "example": "1 call BIS_fnc_liveFeedEffects;", "local": false}, "BIS_fnc_curatorRespawn": {"syntax": "[newUnit,oldUnit] call BIS_fnc_curatorRespawn", "server": false, "broadcasted": false, "description": "Restore unit for curators after respawn. When curator owner, it will transfer ownership to the new unit. When editable by curator, it will remove the dead unit and register the new one.", "example": "[BIS_newUnit,BIS_oldUnit] call BIS_fnc_curatorRespawn;", "local": false}, "hideObjectGlobal": {"syntax": "hideObjectGlobal object", "server": true, "broadcasted": true, "description": "This command is designed for MP. Hides object on all connected clients as well as JIP. Call on the", "example": "hideObjectGlobal nearestBuilding [2500,2500,0];", "local": false}, "addItemToVest": {"syntax": "unit addItemToVest item", "server": true, "broadcasted": true, "description": "Create new item and store it to soldier's vest. The item can also be a weapon or a magazine.", "example": "player addItemToVest \"itemGPS\";", "local": false}, "BIS_fnc_healthEffects": {"syntax": "call BIS_fnc_healthEffects", "server": false, "broadcasted": false, "description": "Effects when player is hit. Parameters are sent by handleDamage event handler.", "example": "call BIS_fnc_healthEffects;", "local": false}, "configClasses": {"syntax": "condition configClasses config", "server": false, "broadcasted": false, "description": "Returns an array of config entries which meet criteria in condition code. Command iterates through all available config sub classes of the given config class. Current looked at config is stored in _x variable (similar to alternative count command implementation). Condition has to return true in order for the looked at config to be added to the resulting array. Slightly faster than configProperties, but doesn't account for config properties or inherited entries.", "example": "collect all CfgVehicles configs: _configs = \"true\" configClasses (configFile >> \"CfgVehicles\");", "local": false}, "do3DENAction": {"syntax": "do3DENAction action", "server": false, "broadcasted": false, "description": "Performs given Eden Editor action.", "example": "do3DENAction \"MissionSave\";// saves the scenario", "local": false}, "tvValue": {"syntax": "tvValue [idc, [path]]", "server": false, "broadcasted": false, "description": "Returns scalar data from item on given path. IDC means id of parent Tree View.", "example": "tvValue [101, [0]];", "local": true}, "setCurrentChannel": {"syntax": "setCurrentChannel channel", "server": false, "broadcasted": false, "description": "Sets given channel as current chat channel. Scripted way of selecting desired channel on the UI. The given channel may be disabled (see enableChannel), this is why this command returns boolean, true on success or false on failure. Correspondence between channel and number:", "example": "_isDirectSelected = setCurrentChannel 5; // sets Direct channel as current active", "local": false}, "BIS_fnc_VRCoursePlaceables2": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "BIS_fnc_moduleStrategicMapORBAT": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "clearBackpackCargo": {"syntax": "clearBackpackCargo box", "server": false, "broadcasted": false, "description": "Removes all backpacks from ammo box (or any general weapon holder container).", "example": "clearBackpackCargo myBox;", "local": false}, "BIS_fnc_setTask": {"syntax": "[taskId, target, description, (destination, state, priority, showNotification, isGlobal, type, visibleIn3D)] call BIS_fnc_setTask;", "server": false, "broadcasted": false, "description": "Set task parameters.", "example": "Example needed", "local": false}, "ctrlSetModelScale": {"syntax": "control ctrlSetModelScale scale", "server": false, "broadcasted": false, "description": "Sets 3D control model scale", "example": "_ctrl3D ctrlSetModelScale 1.5;", "local": false}, "BIS_fnc_guiEffectTiles": {"syntax": "[display] call BIS_fnc_guiEffectTiles;", "server": false, "broadcasted": false, "description": "Used in dialogs to animate background UAV tiles. See notes for a full working example.", "example": "[ findDisplay 49] call BIS_fnc_guiEffectTiles //display 49 - pause menu", "local": false}, "BIS_fnc_keyCode": {"syntax": "input call BIS_fnc_keyCode", "server": false, "broadcasted": false, "description": "Returns DIK code of a given key.", "example": "13 call BIS_fnc_keyCode;//Returns \"EQUALS\"", "local": false}, "BIS_fnc_removeVirtualItemCargo": {"syntax": "[object,itemClasses,removeGlobally] call BIS_fnc_removeVirtualItemCargo", "server": false, "broadcasted": false, "description": "Remove virtual items from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualItemCargo;", "local": false}, "BIS_fnc_manageCuratorAddons": {"syntax": "[curators,classes,condition,text] call BIS_fnc_manageCuratorAddons", "server": false, "broadcasted": false, "description": "Set which vision modes curator can access.", "example": "[BIS_curator,[\"A3_Air_F_Heli\"],{count allPlayers > 15},\"Helicopters unlocked!\"] call BIS_fnc_manageCuratorAddons;", "local": false}, "removeHeadgear": {"syntax": "removeHeadgear unit", "server": true, "broadcasted": true, "description": "Removes headgear from a unit. If unit has no headgear command quietly fails.", "example": "removeHeadgear player;", "local": false}, "add3DENConnection": {"syntax": "add3DENConnection [type, from, to]", "server": false, "broadcasted": false, "description": "Connect entities together.", "example": "add3DENConnection [\"RandomStart\",get3DENSelected \"Object\",\"marker_0\"] Set random start on marker \"marker_0\" for all selected objects.", "local": false}, "tvText": {"syntax": "tvText [idc, path]", "server": false, "broadcasted": false, "description": "Returns shown text in the item on given path. IDC means id of parent Tree View.", "example": "tvText [101, [0]];", "local": false}, "getPlayerScores": {"syntax": "getPlayerScores unitName", "server": false, "broadcasted": false, "description": "In MP: returns the unit's table of scores (infantry kills, soft vehicle kills, armor kills, air kills, deaths, total score). In SP: empty array []", "example": "getPlayerScores BIS_player1;", "local": false}, "getDLCs": {"syntax": "getDLCs filter", "server": false, "broadcasted": false, "description": "Returns array of appIDs of DLCs. A list of all official DLCs:", "example": "_ownedDLCs = getDLCs 1;", "local": false}, "serverName": {"syntax": "serverName", "server": false, "broadcasted": false, "description": "Returns name of the hosting server in MP, \"\" in SP.", "example": "Example needed", "local": false}, "deleteGroupWhenEmpty": {"syntax": "group deleteGroupWhenEmpty delete", "server": true, "broadcasted": true, "description": "Marks given group for auto-deletion when group is empty. true will mark the group for auto-deletion, however false will only unmark the group that was marked previously. There are other engine group auto-deletion mechanisms in place, which are not affected by this.", "example": "_group deleteGroupWhenEmpty true;", "local": false}, "apply": {"syntax": "array apply code", "server": false, "broadcasted": false, "description": "Applies given code to each element of the array and returns resulting array. The value of the current array element, to which the code will be applied, is stored in variable _x.", "example": "_arr = [1,2,3,4,5,6,7,8,9,0] apply {[1,0] select (_x\u00a0% 2 == 0)}; //[1,0,1,0,1,0,1,0,1,0]", "local": false}, "addMagazines": {"syntax": "unit addMagazines [magazineName, count]", "server": true, "broadcasted": true, "description": "Adds multiple magazines to the unit. For cargo containers use addMagazineCargoGlobal command.", "example": "player addMagazines [\"30Rnd_65x39_caseless_mag\", 3];", "local": false}, "linkItem": {"syntax": "unit linkItem item", "server": true, "broadcasted": true, "description": "Create and assign item to the correct slot. If there is an item in the targeted slot, it gets replaced.", "example": "bluforUnit linkItem \"NVGoggles\"; opforUnit linkItem \"NVGoggles_OPFOR\"; independentUnit linkItem \"NVGoggles_INDEP\";", "local": false}, "add3DENEventHandler": {"syntax": "add3DENEventHandler [type,code]", "server": false, "broadcasted": false, "description": "Add code to be run when a Eden Editor event is triggered.", "example": "eh = add3DENEventHandler [\"onUndo\",{systemChat \"Zip...\"}];", "local": false}, "className": {"syntax": "className location", "server": false, "broadcasted": false, "description": "Returns short name of location.", "example": "_shortName = className myLocation;", "local": false}, "BIS_fnc_effectKilledAirDestruction": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_teamColor": {"syntax": "[teamId, getColour] call BIS_fnc_teamColor", "server": false, "broadcasted": false, "description": "Convert number to color team name or color.", "example": "[2, true] call BIS_fnc_teamColor;", "local": false}, "BIS_fnc_removeRespawnPosition": {"syntax": "[target,id] call BIS_fnc_removeRespawnPosition;", "server": false, "broadcasted": false, "description": "Remove a respawn position added by BIS_fnc_addRespawnPosition.", "example": "[west, 1] call BIS_fnc_removeRespawnPosition;", "local": false}, "BIS_fnc_credits_movieSupport": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* File: fn_credits_movieSupport.sqf Description: Movie credits supporters preprocessor. Parameter(s): None. Returned value: _array: Array _array select 0: String - Position name (and tags) as structured text. _array select 1: String - Names (and tags) as structured text - 1st paragraph. _array select 2: String - Names (and tags) as structured text - 2nd paragraph. _array select 3: String - Names (and tags) as structured text - 3rd paragraph. _array select 4: Number - Required space coeficient (numberOfNamesInOneParagraph * textSizeCoef) */"}, "BIS_fnc_effectKilledSecondaries": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "//Small secondary fuel explosions //By Maddmatt for ArmA 2"}, "BIS_fnc_findOverwatch": {"syntax": "[target, maxDistance, minDistance, minHeightAbove, searchCentre] call BIS_fnc_findOverwatch", "server": false, "broadcasted": false, "description": "Selects a position that provides overwatch onto another position.", "example": "[getPosATL enemyTank, 300, 75, 20, getPosATL player] call BIS_fnc_findOverwatch;", "local": false}, "ctSetCurSel": {"syntax": "Control ctSetCurSel Number", "server": false, "broadcasted": false, "description": "Selects the line with the given index. Will take only rows, but not headers into account. -1 deselects all. Returns Nothing.", "example": "_control ctSetCurSel 0;", "local": true}, "velocityModelSpace": {"syntax": "velocityModelSpace vehicle", "server": false, "broadcasted": false, "description": "Returns the velocity (speed vector) of the vehicle as an array with format [x, y, z]. Vector is in model space.", "example": "velocityModelSpace _chopper; comment \"Returns [X (left(-) right(+)), Y (backward(-) forward(+)), Z (down(-) up(+))]\";", "local": false}, "BIS_fnc_objectHeight": {"syntax": "object call BIS_fnc_objectHeight", "server": false, "broadcasted": false, "description": "Return object height defined by it's bounding box and ev. offset/fix.", "example": "player call BIS_fnc_objectHeight;", "local": false}, "removeFromRemainsCollector": {"syntax": "removeFromRemainsCollector remains", "server": true, "broadcasted": true, "description": "Removes vehicles/units from disposal manager, added earlier with addToRemainsCollector", "example": "removeFromRemainsCollector [unit1, unit2, vehicle1];", "local": false}, "allowCuratorLogicIgnoreAreas": {"syntax": "curatorObj allowCuratorLogicIgnoreAreas allow", "server": false, "broadcasted": false, "description": "Allows curator placing and working with modules outside of edit areas.", "example": "curatorModule allowCuratorLogicIgnoreAreas true", "local": false}, "BIS_fnc_moduleCuratorSetCoefs": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "diag_activeMissionFSMs": {"syntax": "diag_activeMissionFSMs", "server": false, "broadcasted": false, "description": "Returns array with active Mission FSMs.", "example": "{systemChat str _x} forEach diag_activeMissionFSMs;", "local": false}, "magazinesDetailUniform": {"syntax": "magazinesDetailUniform unit", "server": false, "broadcasted": false, "description": "Returns an array with the type names of all the unit's uniform magazines.", "example": "magazinesDetailUniform player", "local": false}, "BIS_fnc_forceEnd": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "weaponCargo": {"syntax": "weaponCargo box", "server": false, "broadcasted": false, "description": "Get array with weapons from ammo box (or any general weapon holder container).", "example": "hint str weaponCargo backpackContainer player;", "local": false}, "isTutHintsEnabled": {"syntax": "isTutHintsEnabled", "server": false, "broadcasted": false, "description": "Returns the status of TUTORIAL HINTS setting in UI (OPTIONS >> GAME >> GENERAL >> TUTORIAL HINTS).", "example": "hint str isTutHintsEnabled;", "local": false}, "get3DENGrid": {"syntax": "get3DENGrid type", "server": false, "broadcasted": false, "description": "Returns the grid increment for the given transformation type.", "example": "currentMovementIncrement = get3DENGrid \"t\";// returns 1", "local": false}, "animationSourcePhase": {"syntax": "object animationSourcePhase source", "server": false, "broadcasted": false, "description": "Returns current animation phase of given source. Similar to animationPhase or doorPhase but designed to complement animateSource. This command could be used to obtain relative turret direction and gun elevation on a vehicle (see Example 2)", "example": "_phase = house animationSourcePhase \"Door_1_source\";", "local": false}, "BIS_fnc_cameraOld": {"syntax": "[target] call BIS_fnc_cameraOld", "server": false, "broadcasted": false, "description": "Classic camera script, replaced by the Splendid\u2122 BIS_fnc_camera.", "example": "[player] call BIS_fnc_cameraOld; // starts the camera on the player", "local": false}, "BIS_fnc_addToPairs": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Adds given value to pair array, stored under unique key. If value is found: a) both values are scalars: values are added and stored as a single scalar b) one or both values are array: values are added and stored as a single array c) anything else: an array is created and both values are stored there Remarks: Function by default modifies the input array. This can be overrriden by setting '_copyArray' param to true. Syntax: _pairs:array = [_pairs:array,_key:string,_value:number,_copyArray:bool] call BIS_fnc_addToPairs; Example: [[\"apple\",3],[\"pear\",12]] = [[[\"apple\",3],[\"pear\",2]],\"pear\",10] call BIS_fnc_addToPairs; [[\"apple\",1],[\"pear\",2]] = [[[\"apple\",3],[\"pear\",2]],\"apple\",-2] call BIS_fnc_addToPairs; [[\"greetings\",[\"Hello!\",\"Hi!\"]],[\"rudewords\",\"\"]] = [[[\"greetings\",\"Hello!\"],[\"rudewords\",\"\"]],\"greetings\",\"Hi!\"] call BIS_fnc_addToPairs; */ #define SCALAR (typeName 123) #define ARRAY (typeName [])"}, "BIS_fnc_consolidateArray": {"syntax": "array call BIS_fnc_consolidateArray", "server": false, "broadcasted": false, "description": "Finds duplicities in the given array of anything and consolidates them into an array of sub-arrays", "example": "[\"apple\",\"apple\",\"pear\",\"pear\",\"apple\"] call BIS_fnc_consolidateArray; // Return: [[\"apple\",3],[\"pear\",2]]", "local": false}, "setSimpleTaskType": {"syntax": "task setSimpleTaskType taskType", "server": false, "broadcasted": false, "description": "Attach type to the simple task. See Default Task Types.", "example": "(currentTask player) setSimpleTaskType \"attack\";", "local": false}, "BIS_fnc_VRCoursePlaceables3": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "BIS_fnc_respawnConfirm": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "rotorsForcesRTD": {"syntax": "rotorsForcesRTD RTD_helicopter", "server": false, "broadcasted": false, "description": "Returns force produced by rotors.", "example": "_rotorForces = rotorsForcesRTD _taru// Returns [[-465.981,351.941,45960.5],[-469.079,397.451,46933.3]]", "local": false}, "getPylonMagazines": {"syntax": "getPylonMagazines vehicle", "server": false, "broadcasted": false, "description": "Return array of magazines on pylons", "example": "getPylonMagazines (vehicle player)", "local": false}, "BIS_fnc_addCuratorIcon": {"syntax": "[object, iconParams, map, 3D] call BIS_fnc_addCuratorIcon", "server": false, "broadcasted": false, "description": "Add an icon displayed in curator interface.", "example": "[ curatorModule, [\"targetIcon.paa\", [1,1,1,1], position player, 1, 1, 45, \"Target\", 1, 0.05, \"TahomaB\"], false ] call BIS_fnc_addCuratorIcon;", "local": false}, "tvSetText": {"syntax": "tvSetText [idc, path, text]", "server": false, "broadcasted": false, "description": "Sets string text to item on given path. IDC means id of parent Tree View.", "example": "tvSetText [101, [0], \"Test data\"];", "local": false}, "Arma_3_Revive": {"server": false, "broadcasted": false, "local": false}, "configHierarchy": {"syntax": "configHierarchy configClass", "server": false, "broadcasted": false, "description": "Returns hierarchy of the given config class. Just like with inheritsFrom, only complete config classes are supported", "example": "_hierarchy = configHierarchy (configFile >> \"CfgVehicles\" >> \"Car\"); //[bin\\config.bin,bin\\config.bin/CfgVehicles,bin\\config.bin/CfgVehicles/Car]", "local": false}, "BIS_fnc_effectFired": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_advHint": {"syntax": "[classes, duration1, condition1, duration2, condition2, showing, onlyFullHint, onlyOnce, useSound] call BIS_fnc_advHint;", "server": false, "broadcasted": false, "description": "Shows advanced hint to player.", "example": "[[\"Common\", \"GPS\"]] call BIS_fnc_advHint;", "local": false}, "BIS_fnc_StrategicMapMouseButtonClick": {"example": "-", "server": false, "broadcasted": false, "local": false, "description": "Internal function used by BIS_fnc_StrategicMapOpen."}, "shownUAVFeed": {"syntax": "shownUAVFeed", "server": false, "broadcasted": false, "description": "Returns true if video feed transmitted from UAV is shown. A getter for showUAVFeed", "example": "_bool = shownUAVFeed;", "local": false}, "ctrlDelete": {"syntax": "ctrlDelete control", "server": false, "broadcasted": false, "description": "Deletes given control.", "example": "ctrlDelete ((findDisplay 20000) displayCtrl 20001);", "local": false}, "BIS_fnc_addVirtualBackpackCargo": {"syntax": "[object,backpackClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualBackpackCargo", "server": false, "broadcasted": false, "description": "Add virtual backpacks to an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualBackpackCargo;", "local": false}, "BIS_fnc_registerCuratorObject": {"syntax": "[class, status, cost] call BIS_fnc_registerCuratorObject", "server": false, "broadcasted": false, "description": "Get individual cost of an object.", "example": "[\"someClass\", true, 5] call BIS_fnc_registerCuratorObject;", "local": false}, "getModelInfo": {"syntax": "getModelInfo object", "server": false, "broadcasted": false, "description": "Returns object's model info in format [modelName, modelPath, hasSkeleton]. Model path is suitable for use with createSimpleObject command.", "example": "_modelInfo = getModelInfo player;", "local": false}, "language": {"syntax": "language", "server": false, "broadcasted": false, "description": "Returns current game language.", "example": "_myLanguage = language; // will return \"English\" if game language is set to English", "local": false}, "set3DENLayer": {"syntax": "entity set3DENLayer layerID", "server": false, "broadcasted": false, "description": "Set layer for Eden Entity.", "example": "_myLayer = -1 add3DENLayer \"CTRG\"; player set3DENLayer _myLayer;", "local": false}, "unitAddons": {"syntax": "unitAddons className", "server": false, "broadcasted": false, "description": "Returns list with addons the unit belongs to.", "example": "hint str unitAddons typeOf player; //[\"A3_Characters_F_BLUFOR\"]", "local": false}, "BIS_fnc_configPath": {"syntax": "[config, format, strict] call BIS_fnc_configPath;", "server": false, "broadcasted": false, "description": "Returns config path to given entry in given format", "example": "[\"configFile >> \"\"CfgVehicles\"\" >> \"\"Car\"\"\"] call BIS_fnc_configPath; // [\"configFile\",\"CfgVehicles\",\"Car\"] [[\"configFile\",\"CfgVehicles\",\"Car\"]] call BIS_fnc_configPath; // bin\\config.cpp/CfgVehicles/Car [\"bin\\config.cpp/CfgVehicles/Car\"] call BIS_fnc_configPath; // [\"configFile\",\"CfgVehicles\",\"Car\"] [configFile >> \"CfgVehicles\" >> \"Car\", \"\"] call BIS_fnc_configPath; // \"configFile >> \"\"CfgVehicles\"\" >> \"\"Car\"\"\"", "local": false}, "isWeaponRested": {"syntax": "isWeaponRested unit", "server": false, "broadcasted": false, "description": "Returns true if weapon is currently rested.", "example": "_rest = isWeaponRested player;", "local": true}, "ctRemoveRows": {"syntax": "ctrl ctRemoveRows indices", "server": false, "broadcasted": false, "description": "Takes array of row indices as a parameter and removes rows with those indices. Indices of remaining rows will be recomputed.", "example": "_control ctRemoveRows [0, 1, 2];", "local": true}, "BIS_fnc_removeCommMenuItem": {"syntax": "[owner,itemID] call BIS_fnc_removeCommMenuItem;", "server": false, "broadcasted": false, "description": "Remove an item from the communication menu.", "example": "[player,2] call BIS_fnc_removeCommMenuItem;", "local": false}, "waypointsEnabledUAV": {"syntax": "waypointsEnabledUAV uav", "server": false, "broadcasted": false, "description": "Checks if the UAV has waypoints enabled.", "example": "_uav enableUAVWaypoints false; hint str waypointsEnabledUAV _uav; // returns false", "local": false}, "leaderboardDeInit": {"syntax": "leaderboardDeInit boardName", "server": false, "broadcasted": false, "description": "Deletes internal class for the leaderboard with given name. Returns true if the board has been found and deinitialized.", "example": "leaderboardDeInit \"TT01\"", "local": false}, "dynamicSimulationEnabled": {"syntax": "dynamicSimulationEnabled object", "server": false, "broadcasted": false, "description": "A getter for enableDynamicSimulation", "example": "hint str dynamicSimulationEnabled _myObject;", "local": false}, "removeWeaponTurret": {"syntax": "vehicle removeWeaponTurret [weaponName, turretPath]", "server": false, "broadcasted": true, "description": "Removes weapon from the turret. Use turret path [-1] for driver's turret.", "example": "_tank removeWeaponTurret [\"LMG_M200\",[0,0]];", "local": true}, "pushBack": {"syntax": "array pushBack element", "server": false, "broadcasted": false, "description": "Insert an element to the back of the given array. This command modifies the original array. (see also: pushBackUnique)", "example": "_arr = [1,2,3]; _arr pushBack 4; hint str _arr; //[1,2,3,4]", "local": false}, "BIS_fnc_getVirtualWeaponCargo": {"syntax": "object call BIS_fnc_getVirtualWeaponCargo", "server": false, "broadcasted": false, "description": "Get virtual weapons from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "BIS_ammoBox call BIS_fnc_getVirtualWeaponCargo;", "local": false}, "BIS_fnc_initMultiplayer": {"syntax": "call BIS_fnc_initMultiplayer", "server": false, "broadcasted": false, "description": "Multiplayer mission init, executed automatically upon mission start.", "example": "call BIS_fnc_initMultiplayer;", "local": false}, "backpackItems": {"syntax": "backpackItems unit", "server": false, "broadcasted": false, "description": "Get array with all items (of any kind, even weapons) in backpack of the given unit.", "example": "backpackItems player;", "local": false}, "BIS_fnc_effectFiredRocket": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_curatorObjectPlaced": {"syntax": "[module,object] call BIS_fnc_curatorObjectPlaced", "server": false, "broadcasted": false, "description": "Code executed when curator object is placed.", "example": "[ curatorModule, player ] call BIS_fnc_curatorObjectPlaced;", "local": false}, "clearAllItemsFromBackpack": {"syntax": "clearAllItemsFromBackpack unit", "server": false, "broadcasted": false, "description": "Removes all items from the backpack.", "example": "clearAllItemsFromBackpack player;", "local": false}, "setUserMFDvalue": {"syntax": "vehicle setUserMFDvalue [index, value]", "server": false, "broadcasted": false, "description": "When MFD is using user controllers, this command can set values on them. For example, MFD config for Blackfoot has an entry", "example": "BIS_Plane setUserMFDvalue [0,1]; // user0 in MFD will return 1", "local": false}, "isObjectRTD": {"syntax": "isObjectRTD helicopter", "server": false, "broadcasted": false, "description": "Returns true if RTD model is loaded", "example": "_heliRTD = isObjectRTD vehicle player;", "local": false}, "BIS_fnc_moduleEffectsShells": {"syntax": "[module] call BIS_fnc_moduleEffectsShells", "server": false, "broadcasted": false, "description": "Creates empty ammo cartridges on position of the module logic.", "example": "[BIS_module] call BIS_fnc_moduleEffectsShells;", "local": false}, "Revive": {"server": false, "broadcasted": false, "local": false}, "setRainbow": {"syntax": "time setRainbow value", "server": false, "broadcasted": false, "description": "Changes the rainbow value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", "example": "Example needed", "local": false}, "shownChat": {"syntax": "shownChat", "server": false, "broadcasted": false, "description": "Returns true if chat window is enabled. Chat window can be disabled with showChat command.", "example": "_bool = shownChat;", "local": false}, "BIS_fnc_isLoading": {"syntax": "call BIS_fnc_isLoading", "server": false, "broadcasted": false, "description": "Check if a loading screen is opened.", "example": "_isLoading = call BIS_fnc_isLoading;", "local": false}, "BIS_fnc_VRCourseCommandingBehaviour1": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "BIS_fnc_dirtEffect": {"syntax": "[unit, damage] call BIS_fnc_dirtEffect", "server": false, "broadcasted": false, "description": "Screen dirt (texture) postprocess. Displays dust PP according to damage obtained from near explosion; takes array from \"Explosion\" event handler.", "example": "[nil, 0.5] call BIS_fnc_dirtEffect;", "local": false}, "BIS_fnc_monthDays": {"syntax": "[year, month] call BIS_fnc_monthDays", "server": false, "broadcasted": false, "description": "Returns number of days in given month. Takes in account for leap year.", "example": "_daysInThisMonth = [date select 0, date select 1] call BIS_fnc_monthDays;", "local": false}, "BIS_fnc_moduleCuratorSetEditingAreaType": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_diagMissionWeapons": {"syntax": "[clipboard] call BIS_fnc_diagMissionWeapons", "server": false, "broadcasted": false, "description": "Lists all weapons and magazines available in a mission.", "example": "true call BIS_fnc_diagMissionWeapons;", "local": false}, "BIS_fnc_credits_movieConfig": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* File: fn_credits_movieConfig.sqf Description: Movie credits config preprocessor. Parameter(s): _this select 0: Number - Index of item in config (CfgCredits >> CreditsMovie >> item) Returned value: _array: Array _array select 0: String - Position name (and tags) as structured text. _array select 1: String - Names (and tags) as structured text. _array select 2: Number - Required space coeficient (numberOfNames * textSizeCoef), -1 if config entry doesn't exist */"}, "BIS_fnc_blackIn": {"syntax": "[id,smoothing] call BIS_fnc_blackIn", "server": false, "broadcasted": false, "description": "Unregister a black screen. When none other black screen is registered, fade it out.", "example": "[ \"TAG_aVeryUniqueID\", false ] call BIS_fnc_blackIn;", "local": false}, "BIS_fnc_sideName": {"syntax": "[sideNumber] call BIS_fnc_sideName;", "server": false, "broadcasted": false, "description": "Returns side name.", "example": "[2] call BIS_fnc_sideName;", "local": false}, "vestContainer": {"syntax": "vestContainer unit", "server": false, "broadcasted": false, "description": "Returns a cargo container of a unit's vest.", "example": "hint str vestContainer player; //2df7d600# 163942: dummyweapon.p3d", "local": false}, "setUnitLoadout": {"syntax": "unit setUnitLoadout loadout", "server": true, "broadcasted": true, "description": "Creates a loadout from given inventory structure and applies it to a unit. When String for class name is supplied, the command will search CfgVehicles for the given class in order to extract the loadout from config. If Config is given, it will search given config (including mission config) for the loadout information. In either case, the config should contain the following entries, which is standard for any unit class, for example:", "example": "player_2 setUnitLoadout (getUnitLoadout player_1); // Copies loadout from player_1 and applies it to player_2", "local": false}, "enableCollisionWith": {"syntax": "vehicle enableCollisionWith vehicle", "server": false, "broadcasted": true, "description": "Cancels the effects of disableCollisionWith.", "example": "[_veh1, _veh2] remoteExecCall [\"enableCollisionWith\", 0, _veh1];", "local": true}, "handgunItems": {"syntax": "handgunItems unit", "server": true, "broadcasted": false, "description": "Returns array with all items assigned to the handgun. This command is used for infantry weapons only.", "example": "handgunItems player; /* [ \"muzzle_snds_L\", //silencer \"\", //laser \"\", //optics \"\" //bipod ] */", "local": false}, "addVest": {"syntax": "unit addVest type", "server": true, "broadcasted": true, "description": "Create a new vest and try to link it into vest slot.", "example": "player addVest \"V_TacVest_blk_POLICE\";", "local": false}, "setDetailMapBlendPars": {"syntax": "setDetailMapBlendPars [fullDetail, noDetail]", "server": false, "broadcasted": false, "description": "Sets the detail texture map blend pars. Allows for smooth transition between detailed and undetailed terrain texture at distance. If noDetail > fullDetail, the texture detail will incur smooth transition in the area between the thresholds. If noDetail <= fullDetail there will be obvious visible edge between texture detail changes at fullDetail distance.", "example": "setDetailMapBlendPars [20, 50];", "local": false}, "forgetTarget": {"syntax": "group forgetTarget target", "server": false, "broadcasted": false, "description": "Resets info group has about target", "example": "soldier1 forgetTarget soldier2;", "local": false}, "BIS_fnc_moduleMine": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "curatorAddons": {"syntax": "curatorAddons curatorObj", "server": false, "broadcasted": false, "description": "Returns list of addons allowed to given curator.", "example": "_addons = curatorAddons myCurator;", "local": false}, "removeItemFromBackpack": {"syntax": "unit removeItemFromBackpack item", "server": true, "broadcasted": true, "description": "Removes item from soldier's backpack.", "example": "Example needed", "local": false}, "ctrlAnimationPhaseModel": {"syntax": "control ctrlAnimationPhaseModel source", "server": false, "broadcasted": false, "description": "Returns current animation phase of given source. Similar to animationSourcePhase.", "example": "_phase = _control3D ctrlAnimationPhaseModel \"Close\";", "local": false}, "BIS_fnc_ambientAnimGetParams": {"syntax": "input call BIS_fnc_ambientAnimGetParams", "server": false, "broadcasted": false, "description": "Feeds params of given animset to BIS_fnc_ambientAnim.", "example": "_animParams = \"KEEL\" call BIS_fnc_ambientAnimGetParams;", "local": false}, "BIS_fnc_paramCountdown": {"syntax": "number call BIS_fnc_paramCountdown", "server": false, "broadcasted": false, "description": "Set side mission time.", "example": "360 call BIS_fnc_paramCountdown;", "local": false}, "disableMapIndicators": {"syntax": "disableMapIndicators [disableFriendly,disableEnemy,disableMines,disablePing]", "server": false, "broadcasted": false, "description": "Command allows suppressing visualization of FRIENDLY, ENEMY, MINES and/or PING map indicators from difficulty setting EXTENDED MAP CONTENT.", "example": "Disable visualization of friendly and enemy units:disableMapIndicators [true,true,false,false];", "local": false}, "BIS_fnc_ORBATOpen": {"syntax": "[path, display, tags, numTiers, parameters] call BIS_fnc_ORBATOpen", "server": false, "broadcasted": false, "description": "Opens the ORBAT Viewer.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\",findDisplay 46, [], 4, [\"ConfigClass_1\",{systemChat \"ConfigClass_1\"}] ] call BIS_fnc_ORBATOpen;", "local": false}, "BIS_fnc_VRCourseBallistics4": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "lbSetTooltip": {"syntax": "lbSetTooltip [idc, index, tooltip]", "server": false, "broadcasted": false, "description": "Sets tooltip for item with given index of the listbox or combobox with id idc of the topmost user dialog to the given data.", "example": "lbSetTooltip [101, 1, \"tooltip\"];", "local": true}, "primaryWeaponItems": {"syntax": "primaryWeaponItems unit", "server": false, "broadcasted": false, "description": "Returns array with all items assigned to the primary weapon. This command is used for infantry weapons only.", "example": "primaryWeaponItems player; /* [ \"muzzle_snds_H\", //silencer \"acc_pointer_IR\", //laser \"optic_Aco\", //optics \"bipod_01_F_blk\" //bipod ] */", "local": false}, "setVehicleAmmoDef": {"syntax": "unit setVehicleAmmoDef value", "server": false, "broadcasted": true, "description": "Sets how much ammunition (compared to the configuration of magazines defined in the vehicle's class) the vehicle has. Note that the ammo will only be added to local turrets. To check the locality of turret use turretLocal.", "example": "player setVehicleAmmoDef 0;", "local": true}, "BIS_fnc_exportGroupFormations": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "curatorEditableObjects": {"syntax": "curatorEditableObjects curatorObj", "server": true, "broadcasted": false, "description": "Returns all editable objects which belong to a curator.", "example": "_objects = curatorEditableObjects myCurator;", "local": false}, "ctAddRow": {"syntax": "Array = ctAddRow Control", "server": false, "broadcasted": false, "description": "Adds one row of controls according to the RowTemplate class. It returns an array containing row index and array of created controls in a format [<rowIndex>, [<control0>, <control1>...<control n>]].", "example": "_array = ctAddRow _control;", "local": true}, "BIS_fnc_scriptedWaypointType": {"syntax": "[waypoint,type] call BIS_fnc_scriptedWaypointType", "server": false, "broadcasted": false, "description": "Return CfgWaypoints type of scripted waypoint. Returns empty string/config when waypoint is not scripted Returns \"Custom\"/CfgWaypoints root when waypoint is using custom script.", "example": "[BIS_scripted_WP_01,\"returnString\"] call BIS_fnc_scriptedWaypointType;", "local": false}, "timeMultiplier": {"syntax": "timeMultiplier", "server": false, "broadcasted": false, "description": "Returns the value set with setTimeMultiplier.", "example": "_multiplier = timeMultiplier;", "local": false}, "BIS_fnc_setToPairs": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Sets an item in pair array to given value. Remarks: Works similar to the BIS_fnc_addToPairs but it doesn't try to add values. It just overwrites the volue if the key already exists. Example: [[\"apple\",3],[\"pear\",10]] = [[[\"apple\",3],[\"pear\",2]],\"pear\",10] call BIS_fnc_setToPairs; */"}, "setBleedingRemaining": {"syntax": "unit setBleedingRemaining time", "server": false, "broadcasted": false, "description": "Sets for how many seconds injured unit leaves blood trail. The unit damage must be >= 0.1 for this command to have an effect, otherwise, the getBleedingRemaining will return 0 and no blood trail is left behind.", "example": "_unit setBleedingRemaining 60;", "local": false}, "turretLocal": {"syntax": "vehicle turretLocal turretPath", "server": true, "broadcasted": false, "description": "Checks if a turret is local.", "example": "_isLocal = vehicle player turretLocal [0];", "local": false}, "BIS_fnc_moduleTTCPTrigger": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_VRCourseBallistics2": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "BIS_fnc_addScore": {"syntax": "[object, number] call BIS_fnc_addScore", "server": false, "broadcasted": false, "description": "Adds a set amount of points to the score of a unit (MP only)", "example": "[player,20] call BIS_fnc_addScore;", "local": false}, "createVehicleCrew": {"syntax": "createVehicleCrew vehicle", "server": false, "broadcasted": false, "description": "Creates crew to given empty vehicle. Crew members are default crew defined in config. Crew side will also correspond to vehicle's faction.", "example": "_veh = createVehicle [\"B_MRAP_01_F\", getMarkerPos \"createVeh\", [], 0, \"NONE\"]; createVehicleCrew _veh;", "local": false}, "disableDebriefingStats": {"syntax": "disableDebriefingStats", "server": false, "broadcasted": false, "description": "Disable debriefing score table.", "example": "disableDebriefingStats;", "local": false}, "setPylonLoadOut": {"syntax": "vehicle setPylonLoadOut [pylon name/index, magazine name, forced, turret];", "server": false, "broadcasted": false, "description": "Will add missile to vehicle pylon, TransportPylonsComponent in config is required", "example": "(vehicle player) setPylonLoadOut [\"pylon1\", \"\"];", "local": false}, "ropeUnwind": {"syntax": "ropeUnwind [rope, speed, targetLength, relative]", "server": false, "broadcasted": false, "description": "Unwind rope to target length. Use relative parameter for changing rope length +/- from current length", "example": "ropeUnwind [ ropes heli1 select 0, 3, 10];//set rope length to 10m at 3m/s", "local": false}, "isMultiplayerSolo": {"syntax": "isMultiplayerSolo", "server": false, "broadcasted": false, "description": "Returns true when playing a game in solo multiplayer (for example Apex coop campaign PLAY SOLO option).", "example": "_state = isMultiplayerSolo;", "local": false}, "BIS_fnc_missionTasks": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Header function of local mission tasks. Automatically declares following variables: _taskID: STRING _taskState: STRING _taskExists: BOOL Parameter(s): 0: STRING - unique mode 1 (Optional): ANY - additional params 2 (Optional): CODE - specific task function (default: \"BIS_fnc_missionTasksLocal\") Returns: BOOL */"}, "BIS_fnc_textureVehicleIcon": {"syntax": "[wantedIcon] call BIS_fnc_textureVehicleIcon", "server": false, "broadcasted": false, "description": "Checks whether icon is defined in CfgVehicleIcons and if so, returns the icon.", "example": "_mediTexture = [\"iconManMedic\"] call BIS_fnc_textureVehicleIcon;", "local": false}, "get3DENActionState": {"syntax": "get3DENActionState action", "server": false, "broadcasted": false, "description": "Returns state of given action in the Eden Editor.", "example": "if (get3DENActionState \"ToggleMap\" == 1) then {systemChat \"Editor map is open!\"};", "local": false}, "BIS_fnc_ambientAnim": {"syntax": "[unit, animationset, equipmentlevel, snaptoObject, interpolate] call BIS_fnc_ambientAnim", "server": false, "broadcasted": false, "description": "Play set of ambient animations on given unit.", "example": "[player, \"STAND1\", \"NONE\"] call BIS_fnc_ambientAnim;", "local": false}, "ctFindRowHeader": {"syntax": "ctrl ctFindRowHeader row", "server": false, "broadcasted": false, "description": "Takes index of a row as a parameter. Returns index of the closest header above this row.", "example": "_index = _control ctFindRowHeader 0;", "local": true}, "BIS_fnc_removeDestroyedCuratorEditableObjects": {"syntax": "[object, parentClasses] call BIS_fnc_removeDestroyedCuratorEditableObjects", "server": false, "broadcasted": false, "description": "Make destroyed curator objects non-editable.", "example": "[curatorModule, [\"Man\"]] call BIS_fnc_removeDestroyedCuratorEditableObjects;", "local": false}, "setCuratorEditingAreaType": {"syntax": "curatorObj setCuratorEditingAreaType bool", "server": false, "broadcasted": false, "description": "Set whether curator can edit in all editing areas (true) or outside of them (false).", "example": "curatorModule setCuratorEditingAreaType true", "local": false}, "getCameraViewDirection": {"syntax": "getCameraViewDirection unit", "server": true, "broadcasted": false, "description": "Returns the direction unit is looking in render time scope. While for AI the origin for the view direction vector can be taken from eyePos unit, for human player the origin should be taken from player camera position positionCameraToWorld [0,0,0]", "example": "Draw AI eye direction (green), weapon direction (red) and camera direction (blue) in 3D: bob = createGroup east createUnit [\"O_Soldier_F\", [0,0,0], [], 0, \"NONE\"]; bob setVehiclePosition [player modelToWorld [0,100,0], [], 0, \"NONE\"]; onEachFrame { _beg = ASLToAGL eyePos bob; _endE = (_beg vectorAdd (eyeDirection bob vectorMultiply 100)); drawLine3D [ _beg, _endE, [0,1,0,1]]; _endW = (_beg vectorAdd (bob weaponDirection currentWeapon bob vectorMultiply 100)); drawLine3D [_beg, _endW, [1,0,0,1]]; _endV = (_beg vectorAdd (getCameraViewDirection bob vectorMultiply 100)); drawLine3D [_beg, _endV, [0,0,1,1]]; };", "local": false}, "weaponsItemsCargo": {"syntax": "weaponsItemsCargo vehicle", "server": false, "broadcasted": false, "description": "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's cargo weapons in weaponsItems format. If weapon has no magazine, an empty array [] is returned instead of magazine info.", "example": "weaponsItemsCargo vehicle player;", "local": false}, "createSimpleObject": {"syntax": "createSimpleObject [shapeName, positionWorld]", "server": false, "broadcasted": true, "description": "Create object with given shape defined as path to .p3d model. Supported LODs include Geometry, Fire Geometry, Roadway, View Geometry and ShadowVolume. Supported features include collision, texturing, animation, penetration, AI spotting occlusion, and surface specific sounds (like footsteps). Unsupported features include PhysX, damage, AI pathfinding (causes walking through walls), and built in lights.", "example": "_pos = player getRelPos [10, 0]; _tank = createSimpleObject [\"a3\\armor_f_beta\\apc_tracked_01\\apc_tracked_01_rcws_f.p3d\", _pos]; _tank setPos (_pos vectorAdd (getPosWorld _tank vectorDiff (_tank modelToWorld [0,0,0]))); _tank hideSelection [\"zasleh\", true]; _tank hideSelection [\"zasleh2\", true]; _tank hideSelection [\"clan\", true]; _tank animate [\"Wheel_podkoloL3\", 0.5, true]; _tank animate [\"Wheel_podkoloL6\", 0.5, true];", "local": false}, "BIS_fnc_dynamicGroups": {"example": "[\"Initialize\"] call BIS_fnc_dynamicGroups;//Exec on Server", "server": false, "broadcasted": false, "local": false, "description": "Function that adds dynamic groups to the mission as seen in End Game. Function needs to be initialized on server and client. Clients can then use action TeamSwitch (\"U\" by default) to access the Dynamic Groups interface."}, "isUIContext": {"syntax": "isUIContext", "server": false, "broadcasted": false, "description": "Returns true if the script originated from some UI control event, for example from \"onButtonDown\" EH. Exists within parent scope and immediate child scopes.", "example": "if (isUIContext) then {hint \"UI control event\"};", "local": false}, "addItemCargoGlobal": {"syntax": "box addItemCargoGlobal [item, count]", "server": true, "broadcasted": true, "description": "Creates new items and stores them in the given container. Works with items, weapons and magazines.", "example": "supplyBox addItemCargoGlobal [\"optic_ARCO2\", 10];", "local": false}, "attachedObjects": {"syntax": "attachedObjects obj", "server": false, "broadcasted": false, "description": "Returns a list of attached objects.", "example": "{ detach _x; } forEach attachedObjects player;", "local": false}, "BIS_fnc_addRespawnInventory": {"syntax": "[target, inventoryParams] call BIS_fnc_addRespawnInventory;", "server": false, "broadcasted": false, "description": "Add a respawn inventory for respawn menu. Available loadouts are defined in CfgRespawnInventory in Description.ext.", "example": "[west, \"WEST1\"] call BIS_fnc_addRespawnInventory;", "local": false}, "BIS_fnc_radialRed": {"syntax": "[victim, bodyPart, damage, shooter] call BIS_fnc_radialRed", "server": false, "broadcasted": false, "description": "Red radial postprocess (hit damage, fire damage). Parameters are the same as the first four of HandleDamage EH.", "example": "player addEventHandler [\"HandleDamage\", { _this call BIS_fnc_radialRed; }];", "local": false}, "rotorsRpmRTD": {"syntax": "rotorsRpmRTD RTD_helicopter", "server": false, "broadcasted": false, "description": "Returns rotors RPM", "example": "_mh9_main = (rotorsRpmRTD _MH9) select 0;//main rotor _mh9_tail = (rotorsRpmRTD _MH9) select 1;//tail rotor", "local": false}, "BIS_fnc_spawnObjects": {"syntax": "[position, className, count, offsetMatrix, offsetDir, dirNoise, enableSimulation] call BIS_fnc_spawnObjects", "server": false, "broadcasted": false, "description": "Create a stack of objects at given position or on top of given object (eg. table).", "example": "_randomPos = [(random 0.2) -0.1, (random 0.2) -0.1, 0]; _objects = [[_table, \"TOP\"], \"Box_NATO_Wps_F\", 3, _randomPos,(random 20)-10] call BIS_fnc_spawnObjects;", "local": false}, "removeGoggles": {"syntax": "removeGoggles unit", "server": true, "broadcasted": true, "description": "Removes goggles from unit (diver goggles for example). This command does not remove NVGoggles. Use unassignItem and removeItem or just unlinkItem for latter.", "example": "removeGoggles assaultDiver;", "local": false}, "BIS_fnc_finishCuratorChallenge": {"syntax": "[curator,input,taskState]] call BIS_fnc_finishCuratorChallenge", "server": false, "broadcasted": false, "description": "Handle repeated curator challenges. When rewards defined in the argument are exceeded, refilling points bar fill be offered instead. Number of challenges can be retrieved by", "example": "[BIS_curator,[\"DestroyVehicle\",BIS_curator],\"SUCCEEDED\"] call BIS_fnc_finishCuratorChallenge; _number = BIS_curator getVariable \"DestroyVehicle\";", "local": false}, "BIS_fnc_respawnTickets": {"syntax": "[<target>,(<tickets>,<dynamicTarget>)] call BIS_fnc_respawnTickets;", "server": false, "broadcasted": false, "description": "Manage respawn tickets used by Tickets respawn template. When player dies, number of tickets is decreased by 1. The most local tickets are always used. Example: When you first add tickets to player's side, they will be affected. If you later define tickets also to player's group, they will completely replace the side tickets. When player runs out of the tickets, his respawn is disabled. If you use also EndMission respawn template, the mission will automatically end once tickets in all name spaces are exhausted.", "example": "Add 5 tickets for BLUFOR [west, 5] call BIS_fnc_respawnTickets;", "local": false}, "BIS_fnc_VRCourseLaunchers3": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "clientOwner": {"syntax": "clientOwner", "server": false, "broadcasted": false, "description": "Returns the client's owner id", "example": "_id = clientOwner;", "local": false}, "BIS_fnc_execRemote": {"example": "See BIS_fnc_MP", "server": false, "broadcasted": false, "local": false, "description": "This function is now an alias to BIS_fnc_MP. Use remoteExec and remoteExecCall instead!"}, "weaponsItems": {"syntax": "weaponsItems vehicle", "server": false, "broadcasted": false, "description": "Returns an array with subarrays contains class names and also names of connected items of all the vehicle's weapons.", "example": "hint str weaponsItems player;", "local": false}, "setAmmoOnPylon": {"syntax": "vehicle setAmmoOnPylon [pylon name/index, ammo count]", "server": false, "broadcasted": false, "description": "Set count of ammo in magazine on pylon", "example": "(vehicle player) setAmmoOnPylon [1, 12];", "local": false}, "diag_recordTurretLimits": {"syntax": "diag_recordTurretLimits section", "server": false, "broadcasted": false, "description": "Start recording tool for creating turret aiming limits.", "example": "diag_recordTurretLimits true;", "local": false}, "selectMin": {"syntax": "selectMin array", "server": false, "broadcasted": false, "description": "Returns the array element with minimum numerical value. Engine solution to BIS_fnc_lowestNum and BIS_fnc_findExtreme. Therefore it is expected that supplied array consists of Numbers only. Booleans however are also supported and will be evaluated as Numbers: true - 1, false - 0. nil value treated as 0. Other non Number elements (not recommended) will be evaluated as 0 and Bad conversion: scalar message will be logged into .rpt.", "example": "_min = selectMin [1,2,3,4,5]; //1", "local": false}, "BIS_fnc_VREffectKilled": {"syntax": "[object, instant, delay] call BIS_fnc_VREffectKilled", "server": false, "broadcasted": false, "description": "Delete body of a virtual soldier after he's killed.", "example": "[ player, true, 5 ] call BIS_fnc_VREffectKilled;", "local": false}, "isEqualTypeAny": {"syntax": "val isEqualTypeAny types", "server": false, "broadcasted": false, "description": "Compares type of given value to every type in the given array and if match is found, true is returned.", "example": "_var = [1,2,3]; _var isEqualTypeAny [0,\"\",objNull]; //false _var isEqualTypeAny [0,\"\",objNull,[]]; //true", "local": false}, "dynamicSimulationDistanceCoef": {"syntax": "dynamicSimulationDistanceCoef class", "server": false, "broadcasted": false, "description": "A getter for setDynamicSimulationDistanceCoef", "example": "hint str dynamicSimulationDistanceCoef \"IsMoving\";", "local": false}, "enableUAVWaypoints": {"syntax": "uav enableUAVWaypoints enable", "server": false, "broadcasted": false, "description": "Enables/disables the option for player to set waypoints for UAV in AV terminal.", "example": "_uav enableUAVWaypoints false; hint str waypointsEnabledUAV _uav; // returns false", "local": false}, "BIS_fnc_moduleEffectsBubbles": {"syntax": "[module] call BIS_fnc_moduleEffectsBubbles", "server": false, "broadcasted": false, "description": "Creates underwater bubble effect on defined place (called usually by BIS_fnc_moduleEffectsEmitterCreator).", "example": "[BIS_module] call BIS_fnc_moduleEffectsBubbles;", "local": false}, "Dynamic_Groups": {"server": false, "broadcasted": false, "local": false}, "BIS_fnc_vehicleRoles": {"syntax": "vehicle call BIS_fnc_vehicleRoles", "server": false, "broadcasted": false, "description": "Returns vehicle roles.", "example": "cursorObject call BIS_fnc_vehicleRoles;", "local": false}, "BIS_fnc_ORBATSetGroupFade": {"syntax": "[path, alpha, time] call BIS_fnc_ORBATSetGroupFade", "server": false, "broadcasted": false, "description": "Set fade value of CfgORBAT group and all groups below it.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"O_Brigade\", 0.5, 5 ] call BIS_fnc_ORBATSetGroupFade;", "local": false}, "secondaryWeaponItems": {"syntax": "secondaryWeaponItems unit", "server": false, "broadcasted": false, "description": "Returns array with all items assigned to the secondary weapon. This command is used for infantry weapons only.", "example": "secondaryWeaponItems player; //[\"\",\"\",\"\",\"\"]", "local": false}, "BIS_fnc_taskDestination": {"syntax": "taskName call BIS_fnc_taskDestination", "server": false, "broadcasted": false, "description": "Return a task's destination.", "example": "\"BIS_task_01\" call BIS_fnc_taskDestination;", "local": false}, "BIS_fnc_showUnitInfo": {"syntax": "[showUnitInfo] call BIS_fnc_showUnitInfo", "server": false, "broadcasted": false, "description": "Hides or shows weapon information. Also hides grenades information.", "example": "false call BIS_fnc_showUnitInfo; // hides weapon information", "local": false}, "assignAsTurret": {"syntax": "unit assignAsTurret [vehicle, [turretPath]]", "server": false, "broadcasted": false, "description": "Assigns the soldier to turret.", "example": "player assignAsTurret [BIS_vehicle, [0,1] ];", "local": false}, "BIS_fnc_loadInventory": {"syntax": "param call BIS_fnc_loadInventory;", "server": false, "broadcasted": false, "description": "Adds a predefined loadout (either via CfgVehicles, CfgRespawnInventory, or a custom inventory saved via BIS_fnc_saveInventory) to a specified unit.", "example": "loadout = [player,configfile >> \"CfgVehicles\" >> \"B_Soldier_SL_F\"] call BIS_fnc_loadInventory; // Gives loadout of BLUFOR Squad Leader to player unit.", "local": false}, "BIS_fnc_moduleDate": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_moduleChat": {"syntax": "[logic, units, isActivated] call BIS_fnc_moduleChat", "server": false, "broadcasted": false, "description": "Make a list of units use any *chat command (groupChat, vehicleChat, sideChat, commandChat, globalChat).", "example": "myLogic setVariable [\"Channel\", \"2\"]; myLogic setVariable [\"Text\", \"Hello everyone, this is side chat!\"]; [myLogic, [player], true] call BIS_fnc_moduleChat;", "local": false}, "pixelW": {"syntax": "pixelW", "server": false, "broadcasted": false, "description": "Returns width of one pixel for current resolution.", "example": "_pixelWidth = pixelW;", "local": false}, "BIS_fnc_timeToString": {"syntax": "[Time,Format] call BIS_fnc_timeToString;", "server": false, "broadcasted": false, "description": "This function returns a 24-hour time as a string from a decimal", "example": "_time = 7.36; [_time] call BIS_fnc_timeToString; // 07:21:36", "local": false}, "isSprintAllowed": {"syntax": "isSprintAllowed unit", "server": false, "broadcasted": false, "description": "Returns true if player is allowed to sprint", "example": "isSprintAllowed player;", "local": false}, "BIS_fnc_playMusic": {"syntax": "[class,start,volume] call BIS_fnc_playMusic", "server": false, "broadcasted": false, "description": "Plays given song.", "example": "[\"LeadTrack04_F\",10,0.5] call BIS_fnc_playMusic; //Song starts at 10 seconds with 50% volume.", "local": false}, "BIS_fnc_diagVehicleIcons": {"syntax": "[parentClass, position, map] call BIS_fnc_diagVehicleIcons", "server": false, "broadcasted": false, "description": "Previews all vehicle icons on map.", "example": "[\"all\", getPos player] call BIS_fnc_diagVehicleIcons;", "local": false}, "setHorizonParallaxCoef": {"syntax": "setHorizonParallaxCoef coef", "server": false, "broadcasted": false, "description": "Sets coef used to shift horizon position based on camera height (use 0 to disable shifting).", "example": "setHorizonParallaxCoef 1;", "local": false}, "BIS_fnc_moduleLightning": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Zeus lightning strike Parameter(s): http://community.bistudio.com/wiki/Arma_3_Modules Returns: NONE */"}, "BIS_fnc_preload": {"syntax": "call BIS_fnc_preload", "server": false, "broadcasted": false, "description": "Start automatic loading screen upon mission start. On client, it will finish only when server is finished.", "example": "call BIS_fnc_preload;", "local": false}, "BIS_fnc_moduleRespawnInventory": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Set respawn loadouts a curator can assign to players Parameter(s): 0: OBJECT - curator logic 1: BOOL - true to make all loadouts availale, false to base them on units the curator can place Returns: BOOL */"}, "BIS_fnc_fatigueEffect": {"syntax": "call BIS_fnc_fatigueEffect", "server": false, "broadcasted": false, "description": "Effects for high fatigue values. Internal engine use only, as it relies on internal BIS_* variables.", "example": "call BIS_fnc_fatigueEffect;", "local": false}, "BIS_fnc_indicateBleeding": {"syntax": "call BIS_fnc_indicateBleeding;", "server": false, "broadcasted": false, "description": "Shows a PP effect which indicates bleeding.", "example": "call BIS_fnc_indicateBleeding;", "local": false}, "vectorMagnitudeSqr": {"syntax": "vectorMagnitudeSqr vector", "server": false, "broadcasted": false, "description": "Squared magnitude of a 3D vector.", "example": "_sizeSqr = vectorMagnitudeSqr [0,3,4]; //25", "local": false}, "inArea": {"syntax": "position inArea trigger", "server": false, "broadcasted": false, "description": "Checks whether given position is inside given area. The area is usually a rectangle or an ellipse defined similar to triggerArea format. Hence argument for this command could be a trigger, a marker, a location or an array in format [center, a, b, angle, isRectangle, c]. This command also supports hexagon area which can be created from ellipse when both a and b are negative. Hexagon ellipses are also supported by both marker creation and drawEllipse.", "example": "_playerIsInside = player inArea _myTrigger;", "local": false}, "BIS_fnc_moduleDoorOpen": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_groupIndicator": {"syntax": "argument call BIS_fnc_groupIndicator", "server": false, "broadcasted": false, "description": "Displays Group Indicator (to the right of the screen in", "example": "[] call BIS_fnc_groupIndicator; // starts group indicator", "local": false}, "BIS_fnc_setRank": {"syntax": "[target, rank] call BIS_fnc_setRank", "server": false, "broadcasted": false, "description": "Set rank of vehicle crew.", "example": "[ vehicle player, \"Captain\" ] call BIS_fnc_setRank;", "local": false}, "environmentEnabled": {"syntax": "environmentEnabled", "server": false, "broadcasted": false, "description": "Returns status of enableEnvironment command", "example": "_enabled = environmentEnabled;", "local": false}, "vectorModelToWorld": {"syntax": "object vectorModelToWorld modelDir", "server": false, "broadcasted": false, "description": "Converts vector direction from model to world space.", "example": "Convert model space vector [0,-10,4] to world space; vector gets rotated according to _airplane: _airplane vectorModelToWorld [0,-10,4];", "local": false}, "pushBackUnique": {"syntax": "array pushBackUnique element", "server": false, "broadcasted": false, "description": "Adds element to the back of the given array but only if it is unique to the array. The index of the added element is returned upon success, otherwise -1. This command modifies the original array.", "example": "_arr = [1,2,3]; _index = _arr pushBackUnique 3; hint str [_index, _arr]; //[-1,[1,2,3]]", "local": false}, "BIS_fnc_respawnGroup": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_moduleTrident": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_curatorObjectRegistered": {"syntax": "[curator, code] call BIS_fnc_curatorObjectRegistered", "server": false, "broadcasted": false, "description": "Register \"curatorObjectRegistered\" handler. Cost of vehicles with crews will be automatically calculated based on vehicle + crew cost.", "example": "[curatorModule,{hint format [\"Curator:%1, Classes:%2\",_this # 0, _this # 1]}] call BIS_fnc_curatorObjectRegistered;", "local": false}, "isCopilotEnabled": {"syntax": "isCopilotEnabled vehicle", "server": true, "broadcasted": false, "description": "Returns true if copilots actions are enabled.", "example": "if (!isCopilotEnabled myHeli) then { myHeli enableCopilot true; };", "local": false}, "BIS_fnc_removeSupportLink": {"syntax": "[requester,provider] call BIS_fnc_removeSupportLink", "server": false, "broadcasted": false, "description": "Removes support types during a mission.", "example": "[requesterMod, providerMod] call BIS_fnc_removeSupportLink;", "local": false}, "curatorCoef": {"syntax": "curatorObj curatorCoef action", "server": false, "broadcasted": false, "description": "Returns current coeficient setting.", "example": "curatorModule curatorCoef \"Place\"", "local": false}, "BIS_fnc_taskSetDescription": {"syntax": "[ taskId, [ taskDescription, taskTitle, taskMarker ] ] call BIS_fnc_taskSetDescription", "server": false, "broadcasted": false, "description": "Set a task description. For easy task manipulation, use the Arma 3 Task Framework.", "example": "[ \"tsk_destroyAA\", [ \"You should plant Satchels under those Shilkas! Good luck.\", \"Destroy the Shilkas\", \"Shilkas\" ] ] call BIS_fnc_taskSetDescription;", "local": false}, "setRandomLip": {"syntax": "unit setRandomLip bool", "server": false, "broadcasted": false, "description": "Enables/Disables random lip. When enabled, the unit continuously moves its lips as if it's talking.", "example": "player setRandomLip true;", "local": false}, "BIS_fnc_moduleZoneProtection": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "setCustomWeightRTD": {"syntax": "helicopterRTD setCustomWeightRTD weight", "server": false, "broadcasted": false, "description": "Add virtual custom weight to a helicopter's center of gravity. This can be used to simulate added internal payload for specific scenarios, and affects the flight model.", "example": "myHelicopterRTD setCustomWeightRTD 120;", "local": false}, "ropeAttachedObjects": {"syntax": "ropeAttachedObjects ropesOwner", "server": false, "broadcasted": false, "description": "Returns an array of all objects that are attached to a vehicle with ropes. This command is the opposite of ropeAttachedTo.", "example": "_cargoArray = ropeAttachedObjects heli1;", "local": false}, "BIS_fnc_getUnitByUid": {"syntax": "playerUID call BIS_fnc_getUnitByUid", "server": false, "broadcasted": false, "description": "Returns object belonging to given player UID", "example": "_unitPlayedByUID550055 = \"550055\" call BIS_fnc_getUnitByUid;", "local": false}, "doorPhase": {"syntax": "object doorPhase door", "server": false, "broadcasted": false, "description": "Return animation phase of door on vehicle.", "example": "_phase = heli doorPhase \"door_L\";", "local": false}, "BIS_fnc_moduleCurator": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_getUnitInsignia": {"syntax": "[ object ] call BIS_fnc_getUnitInsignia;", "server": false, "broadcasted": false, "description": "Get a unit's uniform insignia placed with BIS_fnc_setUnitInsignia", "example": "_texture = [ player ] call BIS_fnc_getUnitInsignia", "local": false}, "forceRespawn": {"syntax": "forceRespawn unit", "server": false, "broadcasted": true, "description": "Forces unit to respawn. The effect as if the player pressed RESPAWN button in the game pause menu, the unit is killed only there is no \"so and so was killed\" message and no score adjustment.", "example": "forceRespawn player;", "local": true}, "BIS_fnc_isForcedCuratorInterface": {"syntax": "[] call BIS_fnc_isForcedCuratorInterface", "server": false, "broadcasted": false, "description": "Return if curator interface is forced (user cannot leave it by pressing Zeus key).", "example": "_isForced = call BIS_fnc_isForcedCuratorInterface;", "local": false}, "getAllOwnedMines": {"syntax": "getAllOwnedMines unit", "server": false, "broadcasted": false, "description": "Gets all mine objects this unit has ownership over.", "example": "_mines = getAllOwnedMines player;", "local": false}, "BIS_fnc_effectKilledAirDestructionStage2": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "allMapMarkers": {"syntax": "allMapMarkers", "server": false, "broadcasted": false, "description": "Return all markers in map including user placed markers (_USER_DEFINED #).", "example": "_markers = allMapMarkers; returns: [\"marker1\",\"_USER_DEFINED #2/0\"]", "local": false}, "setLightAttenuation": {"syntax": "light setLightAttenuation [start, constant, linear, quadratic, hardlimitstart, hardlimitend]", "server": false, "broadcasted": false, "description": "Sets attenuation of light. Standard method of attenuation (1 / (constant + linear*dist + quadratic*dist*dist)). start param represents distance, where the attenuation starts to take effects (dist = distance - start).", "example": "myLight setLightAttenuation [2,4,4,0,9,10];", "local": true}, "BIS_fnc_moduleSkiptime": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "addUniform": {"syntax": "unit addUniform type", "server": true, "broadcasted": true, "description": "Create a new uniform and try to link it into uniform slot (given uniform has to be supported by allowedUniforms list of target soldier). To check if uniform is allowed use isUniformAllowed and to force add incompatible uniform use forceAddUniform", "example": "_unit addUniform \"U_B_CombatUniform_mcam\";", "local": false}, "getCursorObjectParams": {"syntax": "getCursorObjectParams", "server": false, "broadcasted": false, "description": "Returns object and named selections under cursor and distance to object's surface (to the point cursor points at). If object surface is further away than 50 meters, selections are always an empty array and distance is 1e10 (10^10).", "example": "hint str getCursorObjectParams;", "local": false}, "allPlayers": {"syntax": "allPlayers", "server": false, "broadcasted": false, "description": "Returns a list of all human players including dead players. The command also returns all connected headless clients. To filter headless clients out: _justPlayers = allPlayers - entities \"HeadlessClient_F\"; NOTES:", "example": "{ systemChat format [ \"Player\u00a0%1 is\u00a0%2\", name _x, [\"dead\", \"alive\"] select alive _x ]; } forEach allPlayers;", "local": false}, "groupId": {"syntax": "groupId group", "server": true, "broadcasted": false, "description": "Returns group name.", "example": "_name = groupId (group player);", "local": false}, "sendAUMessage": {"syntax": "sendAUMessage [clientList, command]", "server": false, "broadcasted": false, "description": "Send the command to the list of clients.", "example": "sendAUMessage [[dpnid1, dpnid2], \"ConnectTo: 192.168.1.66\"]", "local": false}, "BIS_fnc_moduleDiary": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "removeAllMissionEventHandlers": {"syntax": "removeAllMissionEventHandlers type", "server": false, "broadcasted": false, "description": "Removes all mission event handlers of the given type which were added by addMissionEventHandler.", "example": "removeAllMissionEventHandlers \"Loaded\";", "local": false}, "removePrimaryWeaponItem": {"syntax": "unit removePrimaryWeaponItem item", "server": false, "broadcasted": true, "description": "Removes given weapon item from the primary weapon cargo space.", "example": "player removePrimaryWeaponItem \"acc_flashlight\";", "local": true}, "openYoutubeVideo": {"syntax": "openYoutubeVideo youTubeUrl", "server": false, "broadcasted": false, "description": "Opens Steam overlay with given YT video. Video URL is the end part of the YT URL, starting with watch?v=.... If the user has Steam overlay disabled, the command will display appropriate message to the user and return false.", "example": "//Open http://www.youtube.com/watch?v=UBIAbm7Rt78 _isOpened = openYoutubeVideo \"watch?v=UBIAbm7Rt78\";", "local": false}, "getHitIndex": {"syntax": "vehicle getHitIndex hitPartIndex", "server": true, "broadcasted": false, "description": "Return current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with getAllHitPointsDamage command.", "example": "vehicle player getHitIndex 3;", "local": false}, "BIS_fnc_refreshCommMenu": {"syntax": "call BIS_fnc_refreshCommMenu", "server": false, "broadcasted": false, "description": "Refresh the communication menu variable.", "example": "call BIS_fnc_refreshCommMenu;", "local": false}, "canAddItemToUniform": {"syntax": "unit canAddItemToUniform item", "server": false, "broadcasted": false, "description": "Checks if given object can be stored into soldier's uniform.", "example": "_item = \"HandGrenade\"; _fits = player canAddItemToUniform _item; if (_fits) then { player addItemToUniform _item; } else { hint \"no room!\"; };", "local": false}, "selectRandom": {"syntax": "selectRandom array", "server": false, "broadcasted": false, "description": "Returns a random element from the given array. Engine solution to BIS_fnc_selectRandom", "example": "_randomElement = selectRandom [1,2,3,4,5];", "local": false}, "addForce": {"syntax": "object addForce [force, position]", "server": true, "broadcasted": true, "description": "Applies force to given object at given position. Force is defined as vector [x, y, z] in world space, position is vector [x, y, z] in model space. If you need to define force in model space, use vectorModelToWorld or vectorModelToWorldVisual commands first. The force applied as impulse. For more information see NVIDIA docs", "example": "Apply force [0,1000,0] defined in world space (not factoring object actual positioning) to object position [1,0,0]: _object addForce [[0,1000,0],[1,0,0]];", "local": false}, "sideAmbientLife": {"syntax": "sideAmbientLife", "server": false, "broadcasted": false, "description": "Returns side of ambient life, for example ambient life placed in Eden Editor.", "example": "_sideAmbientLife = sideAmbientLife;", "local": false}, "getObjectDLC": {"syntax": "getObjectDLC obj", "server": true, "broadcasted": false, "description": "Returns appID of the DLC the object belongs to or nil if object is vanilla.", "example": "_appID = getObjectDLC cursorTarget; if (!isNil \"_appID\") then { hint format [\"This object belongs to DLC with id:\u00a0%1\", _appID]; } else { hint \"This object is vanilla\"; };", "local": false}, "ropeAttachedTo": {"syntax": "ropeAttachedTo cargo", "server": false, "broadcasted": false, "description": "Returns the ropes owner to which other objects are attached with ropes. This command is the opposite of ropeAttachedObjects.", "example": "_heli = ropeAttachedTo veh1;", "local": false}, "addMusicEventHandler": {"syntax": "addMusicEventHandler [type, function]", "server": false, "broadcasted": false, "description": "Adds playMusic event handler. Returns id of the handler or -1 when failed. Just like addMissionEventHandler, music EH is also attached to the mission.", "example": "_ehID = addMusicEventHandler [\"MusicStart\", {hint str _this}];", "local": false}, "incapacitatedState": {"syntax": "incapacitatedState person", "server": false, "broadcasted": false, "description": "Returns the incapacitated state of the given unit.", "example": "_result = incapacitatedState player;", "local": false}, "worldToModelVisual": {"syntax": "object worldToModelVisual worldPosition", "server": false, "broadcasted": false, "description": "Converts position from world space to object model space in render time scope.", "example": "_relPos = myObject worldToModelVisual [0,0,0];", "local": false}, "roadAt": {"syntax": "roadAt position", "server": true, "broadcasted": false, "description": "Returns road segment at given position, objNull otherwise. Same as isOnRoad only returns the actual road object instead of boolean.", "example": "_road = roadAt ASLToAGL getPosASL player;", "local": false}, "waypointName": {"syntax": "waypointName waypoint", "server": false, "broadcasted": false, "description": "Gets the waypoint name.", "example": "_wpName = waypointName [_grp,2];", "local": false}, "BIS_fnc_isThrowable": {"syntax": "magazine call BIS_fnc_isThrowable", "server": false, "broadcasted": false, "description": "Returns true if given magazine is throwable", "example": "_isThrowable = \"SmokeShellGreen\" call BIS_fnc_isThrowable;", "local": false}, "BIS_fnc_validateParametersOO": {"syntax": "[class,method,params] call BIS_fnc_validateParametersOO", "server": false, "broadcasted": false, "description": "Validating the parameters of a certain method in a class.", "example": "[\"someClass\",\"someMethod\",[5,47,\"test\"]] call BIS_fnc_validateParametersOO;", "local": false}, "BIS_fnc_moduleUnlockArea": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "isWeaponDeployed": {"syntax": "isWeaponDeployed unit", "server": true, "broadcasted": false, "description": "Returns true if weapon is currently deployed.", "example": "_dep = isWeaponDeployed player;", "local": false}, "ctrlSetFontSecondary": {"syntax": "ctrl ctrlSetFontSecondary fontClass", "server": false, "broadcasted": false, "description": "Sets the font size of the secondary text of given control.", "example": "_control ctrlSetFontSecondary \"TahomaB\";", "local": false}, "getPilotCameraRotation": {"syntax": "getPilotCameraRotation object", "server": false, "broadcasted": false, "description": "Returns rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera .", "example": "_pilotCamRot = getPilotCameraRotation vehicle player", "local": true}, "BIS_fnc_curatorChallengeFindIntel": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "objectParent": {"syntax": "objectParent object", "server": false, "broadcasted": false, "description": "Returns parent of an object if the object is proxy, otherwise objNull. In case of backpack, the parent is a weaponholder or a cargo space of a vehicle or the unit carrying it. Unit in a vehicle will return the vehicle as parent.", "example": "_weaponholder = objectParent _mybackpack;", "local": false}, "exportJIPMessages": {"syntax": "exportJIPMessages fileName", "server": false, "broadcasted": false, "description": "Export list of JIP to a file.", "example": "exportJIPMessages \"myFileNameWithoutExtension\";", "local": false}, "isEqualTypeParams": {"syntax": "input isEqualTypeParams template", "server": false, "broadcasted": false, "description": "Compares types of all elements of input array to types of all elements of template array. Similar to isEqualTypeArray however this command is designed for fast validation of functions params, so there are differences:", "example": "[1,2,player,\"10\"] isEqualTypeParams [0,0,objNull,\"\"]; //true 123 isEqualTypeParams [0,0,objNull,\"\"]; //false [] isEqualTypeParams [0,0,objNull,\"\"]; //false [1,2,player] isEqualTypeParams [0,0,objNull,\"\"]; //false [1,2,player,\"10\",true] isEqualTypeParams [0,0,nil,\"\"]; //true [1,2,getPos player,\"10\",true] isEqualTypeParams [0,0,nil,\"\"]; //true", "local": false}, "ctrlSetFontHeightSecondary": {"syntax": "ctrl ctrlSetFontHeightSecondary value", "server": false, "broadcasted": false, "description": "Sets the font size of the secondary text of given control.", "example": "_control ctrlSetFontHeightSecondary 0.05;", "local": false}, "BIS_fnc_modulePostprocess": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_paramGuerFriendly": {"syntax": "number call BIS_fnc_paramGuerFriendly", "server": false, "broadcasted": false, "description": "Set relationship between Independents and remaining sides.", "example": "2 call BIS_fnc_paramGuerFriendly;", "local": false}, "BIS_fnc_addStackedEventHandler": {"syntax": "[id, event, code, arguments] call BIS_fnc_addStackedEventHandler;", "server": false, "broadcasted": false, "description": "Stacks an event handler. All event handlers accept user arguments, which are passed to the EH code in _this variable. If the EH has own params returned in _this variable as well, user arguments are appended to the end of _this array. Note that if you try to add empty EH, i.e. with empty code, it will simply be ignored.", "example": "[\"someId\", \"onEachFrame\", {hintSilent str time}] call BIS_fnc_addStackedEventHandler;", "local": false}, "showScoretable": {"syntax": "showScoretable force", "server": false, "broadcasted": false, "description": "Forces the score table to be shown, hidden or reset to default functionality. Forcing score table will make it show even in SP. When score table is forced opened it cannot be closed manually, when it is force closed, it cannot be opened manually.", "example": "showScoretable 1;", "local": false}, "pixelGridBase": {"syntax": "pixelGridBase", "server": false, "broadcasted": false, "description": "Returns grid size based on screen resolution.", "example": "_gridBaseHeight = pixelH * pixelGridBase;", "local": false}, "fullCrew": {"syntax": "fullCrew vehicle", "server": true, "broadcasted": false, "description": "Returns array with all crew inside given vehicle. Since Arma 3 v1.55.133810 it is possible to return empty seats as well.", "example": "_list = fullCrew vehicle player;", "local": false}, "ctSetValue": {"syntax": "Control ctSetValue Number", "server": false, "broadcasted": false, "description": "Associates metadata (number) with the row determined by the index. Returns Nothing.", "example": "_control ctSetValue 0;", "local": true}, "BIS_fnc_exportCfgPatches": {"syntax": "[config,classes] call BIS_fnc_exportCfgPatches", "server": false, "broadcasted": false, "description": "Export list of addons for Community Wiki http://community.bistudio.com/wiki/Category:Arma_3:_Assets.", "example": "call BIS_fnc_exportCfgPatches;", "local": false}, "lbSetPictureColor": {"syntax": "lbSetPictureColor [idc, index, color]", "server": false, "broadcasted": false, "description": "Sets the color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.", "example": "lbSetPictureColor [101, 0, [0, 1, 0, 0.5]];", "local": false}, "BIS_fnc_flamesEffect": {"syntax": "call BIS_fnc_flamesEffect", "server": false, "broadcasted": false, "description": "Flames (texture) postprocess.", "example": "call BIS_fnc_flamesEffect;", "local": false}, "BIS_fnc_setFog": {"syntax": "[strenght, density, altitude] call BIS_fnc_setFog", "server": false, "broadcasted": false, "description": "Instantly set weather conditions and share it across network.", "example": "[1,1,100] call BIS_fnc_setFog;//Returns [1,1,100]", "local": false}, "BIS_fnc_moveToRespawnPosition": {"syntax": "[unit, position, canBeDead] call BIS_fnc_moveToRespawnPosition", "server": false, "broadcasted": false, "description": "Move given unit to given respawn position. Units moved to height >= 30m will start on parachute. Position [0,0,0] is blacklisted. This function must be executed where unit to be moved is local", "example": "[player, \"SpawnMarker1\"] call BIS_fnc_moveToRespawnPosition;", "local": false}, "vectorDotProduct": {"syntax": "vector1 vectorDotProduct vector2", "server": false, "broadcasted": false, "description": "Dot product of two 3D vectors.", "example": "_dot = [1,0,1] vectorDotProduct [0,0,2];", "local": false}, "drawPolygon": {"syntax": "map drawPolygon [polygon, color]", "server": false, "broadcasted": false, "description": "Draws given polygon on the given map control with given color. The polygon must consist of at least 3 points. Unlike with other draw<shape> commands and due to complexity, this command does not support filling of the polygon with color. Use drawTriangle command to construct and fill polygon shape as a workaround.", "example": "test_polygon = []; for \"_i\" from 1 to 12 do { test_polygon pushBack (player getPos [10 + random 100, 360/_i]); }; findDisplay 12 displayCtrl 51 ctrlAddEventHandler [\"Draw\", { _this select 0 drawPolygon [test_polygon, [0,0,1,1]]; }];", "local": false}, "BIS_fnc_getCfgData": {"syntax": "config call BIS_fnc_getCfgData", "server": false, "broadcasted": false, "description": "Smart-return number, text or array value from config.", "example": "_value = (configFile >> \"BulletBubbles\" >> \"BulletBubbles1\") call BIS_fnc_getCfgData;", "local": false}, "get3DENAttribute": {"syntax": "entity get3DENAttribute attribute", "server": false, "broadcasted": false, "description": "Returns the value of the given entity's attribute in Eden Editor.", "example": "systemChat str ((get3DENMouseOver select 1) get3DENAttribute \"name\"); // returns variable name of object under cursor", "local": false}, "magazineCargo": {"syntax": "magazineCargo box", "server": false, "broadcasted": false, "description": "Get array with magazines from ammo box (or any general weapon holder container).", "example": "hint str magazineCargo uniformContainer cursorTarget;", "local": false}, "getPilotCameraDirection": {"syntax": "getPilotCameraDirection object", "server": false, "broadcasted": false, "description": "Returns model space vector of the object airplane or helicopter pilotCamera .", "example": "_pilotCamVector = getPilotCameraDirection vehicle player", "local": true}, "BIS_fnc_curatorChallengeIlluminate": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "cursorObject": {"syntax": "cursorObject", "server": false, "broadcasted": false, "description": "Returns the object under cursor. This command is quite different from cursorTarget as it is more precise in determining the boundaries of the pointed at object and can detect a larger variety of objects including map objects and trees.", "example": "hint str [getModelInfo cursorObject, typeOf cursorObject];", "local": false}, "currentMagazineDetailTurret": {"syntax": "vehicle currentMagazineDetailTurret [turret path]", "server": false, "broadcasted": false, "description": "Returns the class name of currently used magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".", "example": "_magazineDetail = MBT_Kuma currentMagazineDetailTurret [0];", "local": false}, "BIS_fnc_curatorAttributes": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Return attributes available for given entity Parameter(s): 0: OBJECT - curator 1: OBJECT or GROUp or ARRAY or STRING - checked entity Returns: ARRAY of STRINGs */"}, "diag_activeSQFScripts": {"syntax": "diag_activeSQFScripts", "server": false, "broadcasted": false, "description": "Returns information about active SQF scripts.", "example": "[] spawn { hint str diag_activeSQFScripts; }; // displays [[\"<spawn> hint str diag_activeSQFScripts;\", \"\", true, 1]]", "local": false}, "BIS_fnc_setTaskLocal": {"example": "-", "server": false, "broadcasted": false, "local": false, "description": "\u26a0"}, "getBurningValue": {"syntax": "getBurningValue unit", "server": false, "broadcasted": false, "description": "Returns amount of damage from fire.", "example": "Example needed", "local": false}, "BIS_fnc_VRCourseCommandingVehicles2": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "addItem": {"syntax": "unit addItem item", "server": true, "broadcasted": true, "description": "Creates new item and tries to add it into inventory. Inventory must have enough space to accomodate new item or command will fail.The item can also be a weapon or a magazine.", "example": "bluforUnit addItem \"NVGoggles\"; bluforUnit assignItem \"NVGoggles\"; opforUnit addItem \"NVGoggles_OPFOR\"; opforUnit assignItem \"NVGoggles_OPFOR\"; independentUnit addItem \"NVGoggles_INDEP\"; independentUnit assignItem \"NVGoggles_INDEP\";", "local": false}, "BIS_fnc_wpPatrol": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "BIS_fnc_initExpo": {"syntax": "call BIS_fnc_initExpo", "server": false, "broadcasted": false, "description": "Disable parts of the main menu during public presentation. Press Ctrl+Shift+U to toggle the lock.", "example": "call BIS_fnc_initExpo;", "local": false}, "BIS_fnc_moduleTTCPClear": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "backpackCargo": {"syntax": "backpackCargo box", "server": false, "broadcasted": false, "description": "Get array with backpacks from ammo box (or any general weapon holder container).", "example": "hint str backpackCargo vehicle player;", "local": false}, "BIS_fnc_animateTaskWaypoint": {"syntax": "param call BIS_fnc_animateTaskWaypoint;", "server": false, "broadcasted": false, "description": "Plays an animation that pushes the active task waypoint up and down.", "example": "[player] call BIS_fnc_animateTaskWaypoint;", "local": false}, "BIS_fnc_firedBombDemine": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "params [ [\"_vehicle\",objnull,[objnull]], [\"_weapon\",\"\",[\"\"]], [\"_muzzle\",\"\",[\"\"]], [\"_mode\",\"\",[\"\"]], [\"_ammo\",\"\",[\"\"]], [\"_magazine\",\"\",[\"\"]], [\"_projectile\",objnull,[objnull]] ];"}, "unassignItem": {"syntax": "unit unassignItem item", "server": true, "broadcasted": true, "description": "Unassigns existing item and tries to put it into inventory. If there is no space in inventory the item simply disappears.", "example": "bluforUnit unassignItem \"NVGoggles\"; bluforUnit removeItem \"NVGoggles\"; opforUnit unassignItem \"NVGoggles_OPFOR\"; opforUnit removeItem \"NVGoggles_OPFOR\"; independentUnit unassignItem \"NVGoggles_INDEP\"; independentUnit removeItem \"NVGoggles_INDEP\";", "local": false}, "allTurrets": {"syntax": "allTurrets vehicle", "server": false, "broadcasted": false, "description": "Returns array of available turret paths from vehicle object. To look up turrets from config, use BIS_fnc_allTurrets", "example": "_turretPaths = allTurrets SlammerUP; //[[0],[0,0]] _turretPaths = allTurrets [SlammerUP, true]; //[[0],[0,0]] <- Commander turret is also FFV turret _turretPaths = allTurrets [SlammerUP, false]; //[[0]]", "local": false}, "isIRLaserOn": {"syntax": "unit isIRLaserOn weapon", "server": false, "broadcasted": false, "description": "Returns true if there is a linked and enabled IR on the given weapon.", "example": "player isIRLaserOn currentWeapon player;", "local": false}, "BIS_fnc_moduleStrategicMapInit": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_blackOut": {"syntax": "[id,smoothing] call BIS_fnc_blackOut", "server": false, "broadcasted": false, "description": "Register a black screen. Start the black screen when the first request is registered.", "example": "[ \"TAG_aVeryUniqueID\", false ] call BIS_fnc_blackOut;", "local": false}, "BIS_fnc_moduleSFX": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "isRemoteExecutedJIP": {"syntax": "isRemoteExecutedJIP", "server": false, "broadcasted": false, "description": "Returns true if the code context is being remote executed from the JIP queue by remoteExec or remoteExecCall (when JIP param was set). It is a subset of isRemoteExecuted:", "example": "_remoteExecutedJIP = isRemoteExecutedJIP;", "local": false}, "ropeCreate": {"syntax": "ropeCreate [fromObject, fromPoint, toObject, toPoint, segments, length]", "server": false, "broadcasted": false, "description": "Create a rope (PhysX rope in Arma 3).", "example": "myRope = ropeCreate [vehicle player, \"slingload0\", myCargo, [0, 0, 0], 10]; //A3 example", "local": false}, "BIS_fnc_taskExists": {"syntax": "[taskName] call BIS_fnc_taskExists", "server": false, "broadcasted": false, "description": "Return true if a task exists.", "example": "_exists = [\"MyTask\"] call BIS_fnc_taskExists;", "local": false}, "getItemCargo": {"syntax": "getItemCargo box", "server": true, "broadcasted": false, "description": "Returns all items names and count from ammo box (or any general weapon holder container).", "example": "hint str getItemCargo cursorTarget;", "local": false}, "BIS_fnc_moduleVolume": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "Pixel_Grid_System": {"server": false, "broadcasted": false, "local": false}, "isBurning": {"syntax": "isBurning unit", "server": false, "broadcasted": false, "description": "Returns whether the unit is burning. This returns true only if unit is damaged by nearby fire, it does not check whether a fireplace is burning, use inflamed command for that.", "example": "if (isBurning player) then { player groupChat \"I'm burning!!\"; }", "local": false}, "BIS_fnc_initRespawn": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "setGroupIdGlobal": {"syntax": "group setGroupIdGlobal [nameFormat, nameParam1, ..., nameParamN]", "server": true, "broadcasted": true, "description": "A global equivalent of setGroupId", "example": "Example needed", "local": false}, "getObjectTextures": {"syntax": "getObjectTextures obj", "server": true, "broadcasted": false, "description": "Gets all custom textures (hiddenSelectionsTextures) associated with the object.", "example": "_textures = getObjectTextures player;", "local": false}, "BIS_fnc_skirmishTrigger": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "An internally used .fsm."}, "netId": {"syntax": "netId var", "server": false, "broadcasted": false, "description": "Unique ID of object or group. As this command is MP only, you can use BIS_fnc_netId, which extends the use to SP as well. See also: BIS_fnc_objectVar", "example": "_playerNetId = netId player;", "local": false}, "getPosASLVisual": {"syntax": "getPosASLVisual object", "server": true, "broadcasted": false, "description": "Returns an object's rendered 3D position ASL (z value above sea level) in render time scope. Alias of visiblePositionASL.", "example": "_playerRenderedPosASL = getPosASLVisual player;", "local": false}, "BIS_fnc_moduleObjectiveTarget": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "findIf": {"syntax": "array findIf code", "server": false, "broadcasted": false, "description": "Searches for an element within array for which the code evaluates to true. Returns the 0 based index on success or -1 if not found. Code on the right side of the command is evaluated for each element of the array, processed element can be referenced in code as _x.", "example": "[unit1,unit2,unit3] findIf {!alive _x}; //return index of first dead unit", "local": false}, "BIS_fnc_exportInventory": {"syntax": "[unit,type,identity] call BIS_fnc_exportInventory", "server": false, "broadcasted": false, "description": "Export unit's loadout.", "example": "[ player, \"init\", true ] call BIS_fnc_exportInventory;", "local": false}, "BIS_fnc_configExtremes": {"syntax": "[paths, properties, (propertyTypes, propertyDefaults)] call BIS_fnc_configExtremes", "server": false, "broadcasted": false, "description": "Scan config paths and return min and max values for each property.", "example": "[[configFile >> \"cfgWeapons\"] call BIS_fnc_returnChildren, [\"maxRange\",\"reloadTime\"]] call BIS_fnc_configExtremes;", "local": false}, "BIS_fnc_adjustSimpleObject": {"syntax": "[object, [class, model, reversed, verticalOffset, animAdjustments, selectionToHide]] call BIS_fnc_adjustSimpleObject", "server": false, "broadcasted": false, "description": "Adjust simple object vertical position, animations and selection according to provided data.", "example": "[myCar, [\"B_MyCar_F\", \"path\\to\\file.p3d\"]] call BIS_fnc_adjustSimpleObject;", "local": false}, "ctrlSetChecked": {"syntax": "control ctrlSetChecked checked", "server": false, "broadcasted": false, "description": "Sets checked state of a checkbox in checkboxes control (CT_CHECKBOXES type 7 of Dialog Control). Since Arma 3 v1.71.141591 it is possible to check checkbox with given index in multiple checkboxes set-up. For more information see DialogControls-CheckBoxes.", "example": "_control ctrlSetChecked true;", "local": false}, "BIS_fnc_paramRespawnTickets": {"syntax": "number call BIS_fnc_paramRespawnTickets", "server": false, "broadcasted": false, "description": "Set side respawn tickets.", "example": "360 call BIS_fnc_paramRespawnTickets;", "local": false}, "selectMax": {"syntax": "selectMax array", "server": false, "broadcasted": false, "description": "Returns the array element with maximum numerical value. Engine solution to BIS_fnc_greatestNum and BIS_fnc_findExtreme. Therefore it is expected that supplied array consists of Numbers only. Booleans however are also supported and will be evaluated as Numbers: true - 1, false - 0. nil value treated as 0. Other non Number elements (not recommended) will be evaluated as 0 and Bad conversion: scalar message will be logged into .rpt.", "example": "_max = selectMax [1,2,3,4,5]; //5", "local": false}, "diag_lightNewLoad": {"syntax": "diag_lightNewLoad path", "server": false, "broadcasted": false, "description": "Allows loading of lightning config during the gameplay (effectively changing the current scene lightning). Filename path can be either absolute or relative. The file must contain only the class LightningNew, which should contain lightning configuration.", "example": "diag_lightNewLoad \"o:\\lighting.txt\"", "local": false}, "BIS_fnc_VRCourseTargetDesignation2": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "enableAimPrecision": {"syntax": "unit enableAimPrecision enable", "server": false, "broadcasted": false, "description": "Set whether animation's aim precision affects weapon sway.", "example": "player enableAimPrecision false;", "local": false}, "BIS_fnc_moduleEffectsSmoke": {"syntax": "[module] call BIS_fnc_moduleEffectsSmoke", "server": false, "broadcasted": false, "description": "Creates smoke on position of module (called usually by BIS_fnc_moduleEffectsEmitterCreator).", "example": "[BIS_module] call BIS_fnc_moduleEffectsSmoke;", "local": false}, "slingLoadAssistantShown": {"syntax": "slingLoadAssistantShown", "server": false, "broadcasted": false, "description": "Returns true of Sling Load Assistant is open", "example": "waitUntil {slingLoadAssistantShown}; hint \"You lack rudimentary motor skills and basic eye-hand coordination.\"; //scold user for unethical practices", "local": false}, "BIS_fnc_briefingAnimate": {"syntax": "[markerName, stepId, delay] call BIS_fnc_briefingAnimate", "server": false, "broadcasted": false, "description": "Animate briefing markers.", "example": "// given you have 6 markers: // - \"myMarker\" // - \"myMarker_0\" // - \"myMarker_1\" // - \"myMarker_2\" // - \"myMarker_3\" // - \"myMarker_4\" for \"_i\" from 0 to 4 do { private _commit = 1; [\"myMarker\", 5, _commit] call BIS_fnc_briefingAnimate; sleep _commit; };", "local": false}, "set3DENObjectType": {"syntax": "objects set3DENObjectType classname", "server": false, "broadcasted": false, "description": "Sets the classname of one or more given Eden Editor objects. For Logic objects use set3DENLogicType", "example": "[ get3DENMouseOver select 1] set3DENObjectType \"B_crew_F\"; // turns object under cursor into a blufor crewman", "local": false}, "curatorEditingArea": {"syntax": "curatorEditingArea curatorObj", "server": false, "broadcasted": false, "description": "Returns all curator editing areas.", "example": "_editingArea = curatorEditingArea myCurator;", "local": false}, "modelToWorldVisual": {"syntax": "object modelToWorldVisual modelPos", "server": false, "broadcasted": false, "description": "Converts position from object model space to world space in render time scope. For ASL version see modelToWorldVisualWorld.", "example": "_aboveAndBehindPlayer = player modelToWorldVisual [0,-1,3];", "local": false}, "setWindDir": {"syntax": "time setWindDir value", "server": false, "broadcasted": true, "description": "Changes the wind direction smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", "example": "60 setWindDir 180", "local": false}, "canTriggerDynamicSimulation": {"syntax": "canTriggerDynamicSimulation unit", "server": false, "broadcasted": false, "description": "A getter for triggerDynamicSimulation", "example": "hint str canTriggerDynamicSimulation player;", "local": false}, "addPlayerScores": {"syntax": "unit addPlayerScores values", "server": false, "broadcasted": false, "description": "MP server only: Adds player score.", "example": "player addPlayerScores [0, 1, 0, 0, 1];", "local": false}, "BIS_fnc_moduleTaskCreate": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Create Task module function */"}, "saveJoysticks": {"syntax": "saveJoysticks", "server": false, "broadcasted": false, "description": "Saves joysticks key mappings into the joysticks.cfg file. Engine add these joysticks to the Joystick Scheme mapping dialog in options controls section.", "example": "Example needed", "local": false}, "weightRTD": {"syntax": "weightRTD helicopter", "server": false, "broadcasted": false, "description": "Returns weight of RTD helicopter.", "example": "_taruWeight = weightRTD taru// Returns [7000,300,1990.56,0,0]", "local": false}, "BIS_fnc_respawnCounter": {"syntax": "[text,colour] call BIS_fnc_respawnCounter", "server": false, "broadcasted": false, "description": "Set or execute respawn counter params.", "example": "[\"Some text\", 2] call BIS_fnc_respawnCounter;", "local": false}, "BIS_fnc_taskReal": {"syntax": "[taskName, owner] call BIS_fnc_taskReal", "server": false, "broadcasted": false, "description": "Find the actual task associated with a task name assigned to a unit.", "example": "[ \"testTask\", player ] call BIS_fnc_taskReal; //Returns Task testTask (id 0)", "local": false}, "BIS_fnc_exportCfgVehicles": {"syntax": "[mode,sides,classes,useAI] call BIS_fnc_exportCfgVehicles;", "server": false, "broadcasted": false, "description": "Export list of objects for Community Wiki (Assets).", "example": "[] call BIS_fnc_exportCfgVehicles;", "local": false}, "BIS_fnc_moduleCuratorSetCostsDefault": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "UAVControl": {"syntax": "UAVControl uav", "server": false, "broadcasted": false, "description": "Returns array with current operator of UAV and his vehicle role in UAV.", "example": "UAVControl uav;", "local": false}, "BIS_fnc_moduleFDSkeetDestruction": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_VRCourseCommandingActions3": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "BIS_fnc_damageChanged": {"syntax": "call BIS_fnc_damageChanged", "server": false, "broadcasted": false, "description": "Handle effects caused by changing of damage.", "example": "call BIS_fnc_damageChanged;", "local": false}, "removeAll3DENEventHandlers": {"syntax": "removeAll3DENEventHandlers type", "server": false, "broadcasted": false, "description": "Removes all Eden Editor event handlers of given type.", "example": "removeAll3DENEventHandlers \"onUndo\";", "local": false}, "BIS_fnc_removeScriptedEventHandler": {"syntax": "[namespace, name, id] call BIS_fnc_removeScriptedEventHandler", "server": false, "broadcasted": false, "description": "Removes scripted event handler with given name and id. Additionally \"ScriptedEventHandlerRemoved\" scripted EH is called. For the list of available scripted event handlers see Arma 3: Event Handlers/ScriptedEventHandlers", "example": "[missionNamespace, \"event\", 2] call BIS_fnc_removeScriptedEventHandler;", "local": false}, "setFatigue": {"syntax": "unit setFatigue value", "server": true, "broadcasted": false, "description": "Sets the person's fatigue, from 0 to 1.", "example": "player setFatigue 1;", "local": false}, "modelToWorldWorld": {"syntax": "obj modelToWorldWorld modelPos", "server": false, "broadcasted": false, "description": "Converts position from object model space to world space (usable by setPosWorld for example).", "example": "player modelToWorldWorld [0,1,0]", "local": false}, "leaderboardInit": {"syntax": "leaderboardInit boardName", "server": false, "broadcasted": false, "description": "Initialize the leaderboard structure for board with given name. Returns true if board is already initialized.", "example": "leaderboardInit \"TT01\"", "local": false}, "BIS_fnc_setCuratorVisionModes": {"syntax": "[curator,mode] call BIS_fnc_setCuratorVisionModes", "server": false, "broadcasted": false, "description": "Set which vision modes curator can access.", "example": "[BIS_curator,[-1,-2]] call BIS_fnc_setCuratorVisionModes;", "local": false}, "BIS_fnc_VRCourseCommandingActions1": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "tvData": {"syntax": "tvData [idc, [path]]", "server": false, "broadcasted": false, "description": "Returns string data from item on given path. IDC means id of parent Tree View.", "example": "tvData [101, [0]];", "local": true}, "BIS_fnc_moduleSkill": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "isAbleToBreathe": {"syntax": "isAbleToBreathe unit", "server": false, "broadcasted": false, "description": "If unit is diving and doesn't have a re-breather, it returns false. Diving means the unit's head is underwater. If unit is underwater and has a re-breather, the command returns true.", "example": "_canBreath = isAbleToBreathe player;", "local": false}, "getAssignedCuratorUnit": {"syntax": "getAssignedCuratorUnit curatorObj", "server": false, "broadcasted": false, "description": "Returns unit assigned to curator logic.", "example": "_curatorUnit = getAssignedCuratorUnit (allCurators select 0); _curatorUnit joinAs [createGroup civilian, 0];", "local": false}, "BIS_fnc_moduleTTStatsClear": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "setTimeMultiplier": {"syntax": "setTimeMultiplier value", "server": false, "broadcasted": true, "description": "Sets a time multiplier for in-game time. The command range is now capped at 0.1 - 120 to avoid performance problems.", "example": "setTimeMultiplier 60;", "local": false}, "backpackContainer": {"syntax": "backpackContainer unit", "server": false, "broadcasted": false, "description": "Returns a cargo container of a unit's backpack.", "example": "hint str backpackContainer player; //1a5f7900# 163944: backpack_fast.p3d", "local": false}, "BIS_fnc_ambientAnimCombat": {"syntax": "[unit, animationset, equipmentlevel, condition, behaviour] call BIS_fnc_ambientAnimCombat;", "server": false, "broadcasted": false, "description": "Play set of ambient animations on given unit AND allows the unit to leave the ambient state and engage enemy or move away.", "example": "[_unit,\"STAND\",\"FULL\",{(player distance _this) < 5}] call BIS_fnc_ambientAnimCombat;", "local": false}, "BIS_fnc_liveFeedModuleSetTarget": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Set a live feed's target via a module. Parameters: _this: OBJECT - Live Feed - Set Target module */ // On dedicated servers, player is not you"}, "BIS_fnc_removeRespawnInventory": {"syntax": "[target,id] call BIS_fnc_removeRespawnInventory;", "server": false, "broadcasted": false, "description": "Remove a respawn inventory added by BIS_fnc_addRespawnInventory.", "example": "[west, 1] call BIS_fnc_removeRespawnInventory;", "local": false}, "isFilePatchingEnabled": {"syntax": "isFilePatchingEnabled", "server": false, "broadcasted": false, "description": "Returns true if file patching is enabled otherwise false", "example": "_state = isFilePatchingEnabled;", "local": false}, "BIS_fnc_createRuin": {"syntax": "building call BIS_fnc_createRuin", "server": false, "broadcasted": false, "description": "Create a building ruin and hide the original object.", "example": "aBuilding call BIS_fnc_createRuin;", "local": false}, "setGroupOwner": {"syntax": "group setGroupOwner clientID", "server": false, "broadcasted": false, "description": "Changes the ownership of a group (and all its units) to a given client. Group leader can't be a player. Only works when called from a server. Returns true if locality was changed. For agents use setOwner command.", "example": "_localityChanged = _someGroup setGroupOwner (owner _playerObject);", "local": false}, "BIS_fnc_diagPreview": {"syntax": "[container, parentClass, distance, startPos] call BIS_fnc_diagPreview", "server": false, "broadcasted": false, "description": "Previews selected classes from given container.", "example": "[ \"CfgVehicles\", \"Car\", 15, [0,0,0] ] call BIS_fnc_diagPreview;", "local": false}, "curatorMouseOver": {"syntax": "curatorMouseOver", "server": false, "broadcasted": false, "description": "Returns Curator Editable Object under curator mouse pointer in form of array:", "example": "_mouseOver = curatorMouseOver; possible return value:", "local": false}, "BIS_fnc_unpackStaticWeapon": {"syntax": "[group, weaponPos, targetPos, leaderPos] call BIS_fnc_unpackStaticWeapon;", "server": false, "broadcasted": false, "description": "This function will move given support team to the given weapon position. The weapon crew will unpack carried weapon and start watching given target position. Requires three personnel in the team: Team Leader, Gunner and Asst. Gunner. This function is MP compatible.", "example": "[leader1, \"weapon_mrk\", \"target_mrk\"] call BIS_fnc_unpackStaticWeapon;", "local": false}, "BIS_fnc_initPlayable": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "get3DENEntityID": {"syntax": "get3DENEntityID entity", "server": false, "broadcasted": false, "description": "Returns unique index of an Eden Entity. This number remains the same even after saving and loading the scenario.", "example": "myID = get3DENEntityID player", "local": false}, "addCuratorCameraArea": {"syntax": "curatorObj addCuratorCameraArea [cameraAreaID,position,radius]", "server": false, "broadcasted": false, "description": "Adds or changes curator camera area (depends on if ID is already used).", "example": "myCurator addCuratorCameraArea [3,position mySoldier,300];", "local": false}, "addMagazineAmmoCargo": {"syntax": "cargospace addMagazineAmmoCargo [magazine, quantity, ammocount]", "server": true, "broadcasted": true, "description": "Adds magazines with specified ammo count to the cargo space of a vehicle or a container.", "example": "_ammobox addMagazineAmmoCargo [\"30Rnd_65x39_caseless_mag\", 2, 5];", "local": false}, "BIS_fnc_loadFunctions": {"syntax": "[fileDirectory, prefix, nameVars, global] call BIS_fnc_loadFunctions", "server": false, "broadcasted": false, "description": "Compile scripts and save them into globally available functions. Defines _fnc_scriptName variable.", "example": "[\"scripts\\myDir\\\", \"MY_fnc_\", [\"script1\", \"script2\"], true] call BIS_fnc_loadFunctions;", "local": false}, "BIS_fnc_diagAARrecord": {"syntax": "call BIS_fnc_diagAARrecord", "server": false, "broadcasted": false, "description": "Starts recording units position and events for an AAR (After Action Review).", "example": "call BIS_fnc_diagAARrecord;", "local": false}, "allDisplays": {"syntax": "allDisplays", "server": false, "broadcasted": false, "description": "Returns a list of all opened GUI displays. Other displays, such as IGUI displays could be accessed via uiNamespace variable, which is updated every time display is opened or closed. For example, to access IGUI displays: uiNamespace getVariable [\"IGUI_displays\", []];. Other display variables:", "example": "_allDisps = allDisplays;", "local": false}, "BIS_fnc_trackMissionTime": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "Example 1:"}, "BIS_fnc_moduleTaskSetDestination": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Set Task Destination module function */"}, "BIS_fnc_camera": {"syntax": "[mode, parameter] call BIS_fnc_camera", "server": false, "broadcasted": false, "description": "Splendid\u2122 Camera, \"Ultimate Screenshot Simulator\"", "example": "[] call BIS_fnc_camera;", "local": false}, "BIS_fnc_advHintCredits": {"syntax": "call BIS_fnc_advHintCredits", "server": false, "broadcasted": false, "description": "Advanced hint credits preprocessor.", "example": "call BIS_fnc_advHintCredits;", "local": false}, "BIS_fnc_moduleEffectsPlankton": {"syntax": "[module] call BIS_fnc_moduleEffectsPlankton", "server": false, "broadcasted": false, "description": "Creates underwater plankton effect around player (called usually by BIS_fnc_moduleEffectsEmitterCreator).", "example": "[BIS_module] call BIS_fnc_moduleEffectsPlankton;", "local": false}, "taskCustomData": {"syntax": "taskCustomData task", "server": false, "broadcasted": false, "description": "Returns custom data attached to the local task or an empty array if there are no custom data attached.", "example": "_data = taskCustomData \"someTask\";", "local": false}, "getPosATLVisual": {"syntax": "getPosATLVisual object", "server": true, "broadcasted": false, "description": "Returns an object's rendered 3D position ATL (z value above ground) in render time scope.", "example": "_playerRenderedPosATL = getPosATLVisual player;", "local": false}, "BIS_fnc_feedbackInit": {"syntax": "call BIS_fnc_feedbackInit", "server": false, "broadcasted": false, "description": "Init function for feedback system. Declaration of variables, eventhandlers, etc. for in-game effects. Engine use only.", "example": "call BIS_fnc_feedbackInit;", "local": false}, "setVehicleReportOwnPosition": {"syntax": "vehicle setVehicleReportOwnPosition report", "server": false, "broadcasted": false, "description": "Sets that the vehicle will share its own position via datalink to the Side center.", "example": "(vehicle player) setVehicleReportOwnPosition true;", "local": false}, "addToRemainsCollector": {"syntax": "addToRemainsCollector remains", "server": true, "broadcasted": true, "description": "Adds an array of vehicles/units to disposal manager for automatic wreck/body removal. The disposal manager follows wreck/body removal values set in description.ext", "example": "addToRemainsCollector [unit1, unit2, vehicle1];", "local": false}, "humidity": {"syntax": "humidity", "server": false, "broadcasted": false, "description": "Returns the current humidity value. 0 is no humidity and 1 is 100% humidity. Humidity value quickly changes from 0 to 1 when rain starts, then slowly changes from 1 to 0 when rain stops.", "example": "currentHumidity = humidity;", "local": false}, "BIS_fnc_diagMacrosAuthor": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "uniformItems": {"syntax": "uniformItems unit", "server": false, "broadcasted": false, "description": "Get array with all items (of any kind, even weapons) from uniform.", "example": "uniformItems player;", "local": false}, "BIS_fnc_moduleObjectiveRaceFinish": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "tvSetCurSel": {"syntax": "tvSetCurSel [idc, path]", "server": false, "broadcasted": false, "description": "Sets cursor to given item on given path. IDC means id of parent Tree View. To deselect all items use [-1] for the path param (available since Arma 3 v1.55.133898)", "example": "tvSetCurSel [101, [0]];", "local": false}, "splitString": {"syntax": "str splitString delimiters", "server": false, "broadcasted": false, "description": "An SQF version of C++ strtok. Splits given string str into an array of tokens according to given delimiters. In addition, if empty string \"\" is used for delimiters, str is split by each character.", "example": "_str = \"- This, is a sample string.\" splitString \"-,. \"; // [\"This\",\"is\",\"a\",\"sample\",\"string\"] _str joinString \" \"; // \"This is a sample string\"", "local": false}, "setCustomAimCoef": {"syntax": "unit setCustomAimCoef coef", "server": false, "broadcasted": false, "description": "Set custom aim precision coefficient for weapon sway", "example": "player setCustomAimCoef 1;", "local": false}, "BIS_fnc_taskState": {"syntax": "taskID call BIS_fnc_taskState", "server": false, "broadcasted": false, "description": "Returns task's state.", "example": "\"task_1\" call BIS_fnc_taskState;", "local": false}, "BIS_fnc_drawCuratorDeaths": {"syntax": "[unit] call BIS_fnc_drawCuratorDeaths", "server": false, "broadcasted": false, "description": "Show skull unit for curator when the unit dies.", "example": "player call BIS_fnc_drawCuratorDeaths;", "local": false}, "magazinesAmmoFull": {"syntax": "magazinesAmmoFull vehicle", "server": false, "broadcasted": false, "description": "Returns array of arrays of all vehicle's magazines with extended information about them. Magazine type is available for loaded magazines only, otherwise it is -1.", "example": "_magazinesAmmoFull = magazinesAmmoFull player; /* [ [\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Uniform\"], [\"30Rnd_65x39_caseless_mag\",30,false,-1,\"Vest\"], [\"16Rnd_9x21_Mag\",16,false,-1,\"Vest\"], [\"SmokeShellGreen\",1,true,0,\"SmokeShellGreenMuzzle\"], [\"Chemlight_green\",1,true,0,\"ChemlightGreenMuzzle\"], [\"HandGrenade\",1,true,0,\"HandGrenadeMuzzle\"], [\"30Rnd_65x39_caseless_mag\",30,true,1,\"arifle_MX_ACO_pointer_F\"], [\"16Rnd_9x21_Mag\",16,true,2,\"hgun_P07_F\"] ] */", "local": false}, "curatorPoints": {"syntax": "curatorPoints curatorObj", "server": false, "broadcasted": false, "description": "Returns number of points that curator have. Points can be only in range from 0 to 1.", "example": "_points = curatorPoints myCurator;", "local": false}, "diag_mergeConfigFile": {"syntax": "diag_mergeConfigFile path", "server": false, "broadcasted": false, "description": "Adjust configs on-the-fly without the need of restarting the game (by merging the given config file into the main config in memory). Location is relative to the Userdir (default) or mission directory depending on the the value of UserDir [FileName,UserDir]. Doesn't work with cfgAmmo & few other classes. (Since 1.69, cfgAmmo should be mergeable!) Merging config file means also that you can't delete parameters through diag_mergeConfigFile. Changes applied by diag_mergeConfigFile are applied to all new entities so restart of mission is not necessarily required - spawning vehicle again or changing back forth weapon should usually do the trick.", "example": "diag_mergeConfigFile [\"O:\\Arma3\\A3\\Stuff_F\\config.cpp\"]", "local": false}, "BIS_fnc_addSupportLink": {"syntax": "[requesterUnit, requesterMod, providerMod] call BIS_fnc_addSupportLink", "server": false, "broadcasted": false, "description": "Adds support types during a mission.", "example": "[ player, BIS_requesterMod, BIS_providerMod ] call BIS_fnc_addSupportLink;", "local": false}, "BIS_fnc_moduleTaskSetState": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Set Task State module function */"}, "BIS_fnc_param": {"syntax": "[input,index,(defaultValue,dataTypes,requiredCount)] call BIS_fnc_param;", "server": false, "broadcasted": false, "description": "Load a script parameter. See Functions Library (Arma 3) for detailed description.", "example": "_target = [_this, 0, objNull, [objNull,[]], [2,3]] call BIS_fnc_param;", "local": false}, "BIS_fnc_logFormat": {"syntax": "[Text, <Parameters>] call BIS_fnc_logFormat;", "server": false, "broadcasted": false, "description": "Display debug message.", "example": "[\"my message goes here\"] call BIS_fnc_logFormat;", "local": false}, "BIS_fnc_exportFunctionsToWiki": {"syntax": "[filter, timestamp] call BIS_fnc_exportFunctionsToWiki", "server": false, "broadcasted": false, "description": "\u26a0", "example": "[] spawn BIS_fnc_exportFunctionsToWiki; // export all functions", "local": false}, "setLightnings": {"syntax": "time setLightnings value", "server": false, "broadcasted": false, "description": "Changes the lightnings value smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", "example": "1800 setLightnings 0.7;", "local": false}, "setVelocityModelSpace": {"syntax": "vehicle setVelocityModelSpace [x, y, z]", "server": false, "broadcasted": true, "description": "Sets the velocity (speed vector) of the given vehicle relative to its model.", "example": "car setVelocityModelSpace [0, 10, 0]; //pushes car forward", "local": true}, "diag_drawMode": {"syntax": "diag_drawMode type", "server": false, "broadcasted": false, "description": "Activates specific debug visualization.", "example": "diag_drawMode \"normal\"", "local": false}, "joinString": {"syntax": "array joinString separator", "server": false, "broadcasted": false, "description": "Joins array into String with provided separator. Array can be of mixed types, all elements will be converted to String prior to joining, but the fastest operation is on the array of Strings.", "example": "_str = \"- This, is a sample string.\" splitString \"-,. \"; // [\"This\",\"is\",\"a\",\"sample\",\"string\"] _str joinString \" \"; // \"This is a sample string\"", "local": false}, "tvAdd": {"syntax": "tvAdd [idc, pathParent, text]", "server": false, "broadcasted": false, "description": "Adds an item with given text to Tree View control. The position on Tree View where to add the item and the actual path to this item once added are different. If item is added to existing item, then parent item path is used. If no parent exists, empty array [] is used. See Tree View Path for more information.", "example": "_index = _ctrl tvAdd [[], \"Parent Item\"];", "local": false}, "loadAbs": {"syntax": "loadAbs unit", "server": false, "broadcasted": false, "description": "Returns current sum of mass from items stored in all unit's containers, linked items and weapons.", "example": "Player weight:_weight = loadAbs player;", "local": false}, "BIS_fnc_moduleObjectiveRaceStart": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "endl": {"syntax": "endl", "server": false, "broadcasted": false, "description": "Creates a string containing a line break, similar to lineBreak for text. The name is inspired by c++ std::endl (line end). The command returns \"\\r\\n\", which contains control characters rather than printable characters:", "example": "diag_log (\"line1\" + endl + \"line2\");", "local": false}, "isStaminaEnabled": {"syntax": "isStaminaEnabled unit;", "server": true, "broadcasted": false, "description": "Check if stamina depletion is enabled", "example": "isStaminaEnabled player;", "local": false}, "delete3DENEntities": {"syntax": "delete3DENEntities entities", "server": false, "broadcasted": false, "description": "Delete given entities in Eden Editor, including anything that can be placed in editor.", "example": "delete3DENEntities (all3DENEntities select 0); // removes all objects", "local": false}, "BIS_fnc_getCfgDataArray": {"syntax": "config call BIS_fnc_getCfgDataArray", "server": false, "broadcasted": false, "description": "Gets an array defined in Config. If the value is not an array, it's retyped into one.", "example": "_array = (missionConfigFile >> \"Characters\" >> \"Default\" >> \"equipAdjust\") call BIS_fnc_getCfgDataArray;", "local": false}, "setWaypointLoiterRadius": {"syntax": "waypoint setWaypointLoiterRadius radius", "server": false, "broadcasted": false, "description": "Assignes loiter radius to waypoint", "example": "[_grp, 2] setWaypointLoiterRadius 200;", "local": false}, "BIS_fnc_mirrorCuratorSettings": {"syntax": "[from,to,modes,shareType] call BIS_fnc_mirrorCuratorSettings", "server": false, "broadcasted": false, "description": "Mirrors settings from one curator to another.", "example": "[ [curator_1,curator_2], [curator_3,curator_4], [\"addons\",\"objects\",\"coefs\"] ] call BIS_fnc_mirrorCuratorSettings;", "local": false}, "enableWeaponDisassembly": {"syntax": "enableWeaponDisassembly enable", "server": true, "broadcasted": true, "description": "Enables or disables disassembly of static weapons. Could be applied to local player, to another unit or to static weapon directly.", "example": "enableWeaponDisassembly false;", "local": false}, "BIS_fnc_respawnInstant": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "enginesRpmRTD": {"syntax": "enginesRpmRTD RTD_helicopter", "server": false, "broadcasted": false, "description": "Returns all engines RPM", "example": "_UH80_E1 = (enginesRpmRTD _UH80) select 0;//engine 1 RPM _UH80_E2 = (enginesRpmRTD _UH80) select 1;//engine 2 RPM", "local": false}, "BIS_fnc_diagKey": {"syntax": "call BIS_fnc_diagKey", "server": false, "broadcasted": false, "description": "Tracks pressed keys. (getNumber (missionConfigFile >> \"diagKey\") > 0) has to be true.", "example": "call BIS_fnc_diagKey;", "local": false}, "BIS_fnc_getVirtualMagazineCargo": {"syntax": "object call BIS_fnc_getVirtualMagazineCargo", "server": false, "broadcasted": false, "description": "Get virtual magazines from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "BIS_ammoBox call BIS_fnc_getVirtualMagazineCargo;", "local": false}, "taskType": {"syntax": "taskType task", "server": false, "broadcasted": false, "description": "Returns the type of the given task", "example": "_type = taskType (currentTask player);", "local": false}, "vectorDirVisual": {"syntax": "vectorDirVisual objectName", "server": true, "broadcasted": false, "description": "Return object's normalized direction vector in world space ([x,y,z]) in render time scope.", "example": "_dirVector = vectorDirVisual _unit;", "local": false}, "BIS_fnc_effectFiredSmokeLauncher": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/*ArmA 2 smokscreen, by Maddmatt Uses code from VBS2 Smoke launcher by Philipp Pilhofer (raedor) & Andrew Barron */"}, "getAnimSpeedCoef": {"syntax": "getAnimSpeedCoef unit", "server": false, "broadcasted": false, "description": "Get coefficient for animation speed.", "example": "getAnimSpeedCoef player;", "local": false}, "BIS_fnc_moduleFuel": {"syntax": "[logic, units, isActivated] call BIS_fnc_moduleFuel", "server": false, "broadcasted": false, "description": "Set fuel of linked units' vehicles.", "example": "[myLogic, [unit1, unit2, vehicle1], true] call BIS_fnc_moduleFuel;", "local": false}, "BIS_fnc_neutralizeUnit": {"syntax": "object call BIS_fnc_neutralizeUnit", "server": false, "broadcasted": false, "description": "Neutralize an object by intrinsic means:", "example": "cursorTarget call BIS_fnc_neutralizeUnit;", "local": false}, "BIS_fnc_removeVirtualWeaponCargo": {"syntax": "[object,weaponClasses,removeGlobally] call BIS_fnc_removeVirtualWeaponCargo", "server": false, "broadcasted": false, "description": "Remove virtual weapons from an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], true ] call BIS_fnc_removeVirtualWeaponCargo;", "local": false}, "ctrlSetModel": {"syntax": "control ctrlSetModel model", "server": false, "broadcasted": false, "description": "Sets model for 3D Dialog Control.", "example": "_control3D ctrlSetModel \"\\a3\\Ui_f\\objects\\Compass.p3d\";", "local": false}, "remoteExecutedOwner": {"syntax": "remoteExecutedOwner", "server": false, "broadcasted": false, "description": "Returns clientOwner of the PC, which initiated Remote Execution call. If used in SP or outside of remote executed context, the command returns 0. To check if the context was remote executed or remote executed from JIP queue, use isRemoteExecuted and isRemoteExecutedJIP", "example": "_callerRE = remoteExecutedOwner;", "local": false}, "BIS_fnc_liveFeedTerminate": {"syntax": "call BIS_fnc_liveFeedTerminate", "server": false, "broadcasted": false, "description": "Terminate a live feed.", "example": "call BIS_fnc_liveFeedTerminate;", "local": false}, "vectorWorldToModel": {"syntax": "object vectorWorldToModel worldDir", "server": false, "broadcasted": false, "description": "Converts vector direction from world to model space.", "example": "Convert world space vector [0,-10,4] to model space of object _airplane: _airplane vectorWorldToModel [0,-10,4];", "local": false}, "getRelPos": {"syntax": "object getRelPos [distance, direction]", "server": true, "broadcasted": false, "description": "Returns position, which is given distance and relative direction away from original object.", "example": "Find position 100 metres away at player's 3 o'clock:_relpos = player getRelPos [100, 90];", "local": false}, "removeCuratorCameraArea": {"syntax": "curatorObj removeCuratorCameraArea cameraAreaID", "server": false, "broadcasted": false, "description": "Removes curator camera area.", "example": "myCurator removeCuratorCameraArea 3;", "local": false}, "BIS_fnc_callScriptedEventHandler": {"syntax": "[namespace, name, arguments, returnResults] call BIS_fnc_callScriptedEventHandler", "server": false, "broadcasted": false, "description": "Calls all the codes assigned to scripted event handler with given name. Since", "example": "[missionNamespace, \"event\", [player, 123]] call BIS_fnc_callScriptedEventHandler;", "local": false}, "BIS_fnc_drawAO": {"syntax": "[[triggerName],''distance''] call BIS_fnc_drawAO;", "server": false, "broadcasted": false, "description": "Draws a dashed line around the outer edges of a trigger.", "example": "[Trigger1] call BIS_fnc_drawAO; // Draws a dashed line around trigger1's outer edge, with 50m between each line.", "local": false}, "BIS_fnc_exportMapToBiTXT": {"syntax": "[resolution, size, zCoeff] call BIS_fnc_exportMapToBiTXT", "server": false, "broadcasted": false, "description": "Returns terrain height map to BiTXT (Universal Bistudio TXT) format, which can be imported to Object Builder. Output is also copied to clipboard.", "example": "[10, 10, 1] call BIS_fnc_exportMapToBiTXT;", "local": false}, "BIS_fnc_toggleCuratorVisionMode": {"syntax": "[curator, mode] call BIS_fnc_toggleCuratorVisionMode", "server": false, "broadcasted": false, "description": "Toggle curator vision mode.", "example": "[Curator, -2] call BIS_fnc_toggleCuratorVisionMode;", "local": false}, "BIS_fnc_advHintCall": {"syntax": "fullTextcall call BIS_fnc_advHintCall", "server": false, "broadcasted": false, "description": "Advanced hint call, creates hint itself.", "example": "false call BIS_fnc_advHintCall;", "local": false}, "distanceSqr": {"syntax": "var1 distanceSqr var2", "server": false, "broadcasted": false, "description": "Computes the squared distance between two objects or positions.", "example": "player distanceSqr (leader player)", "local": false}, "BIS_fnc_liveFeedModuleEffects": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Add effects to a live feed via a module. Parameters: _this: OBJECT - Live Feed - Effects module */ // They ran me on a dedicated server. I stopped their function."}, "setPitch": {"syntax": "person setPitch pitch", "server": true, "broadcasted": false, "description": "Sets the pitch of a persons voice.", "example": "unit1 setPitch 0.5;", "local": false}, "dynamicSimulationSystemEnabled": {"syntax": "dynamicSimulationSystemEnabled", "server": false, "broadcasted": false, "description": "A getter for enableDynamicSimulationSystem", "example": "hint str dynamicSimulationSystemEnabled;", "local": false}, "isUAVConnectable": {"syntax": "object isUAVConnectable [uav, checkAllItems]", "server": false, "broadcasted": false, "description": "Returns true if UAV is connectable by AV terminal(s).", "example": "connectable = unit isUAVConnectable [uav,true];", "local": false}, "BIS_fnc_getCfgSubClasses": {"example": "_allVehHitPoints = (configfile >> \"CfgVehicles\" >> \"C_Hatchback_01_sport_F\" >> \"HitPoints\") call BIS_fnc_getCfgSubClasses;", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Return all child classes of given class. Remark(s): * Can by called 2 ways: * 1st way (general) works for any config. * 2nd way is for comfortable working with mission description.ext. Parameter(s): _this: CFG _this: ARRAY of STRINGS - missionConfigFile classes and an attribute. Example: * 1st way of calling: _subclasses = (missionconfigfile >> \"Hubs\" >> \"A1\" >> \"QuickStart\") call Bis_fnc_getCfgSubClasses; * 2nd way of calling: _subclasses = [\"Hubs\"] call Bis_fnc_getCfgSubClasses; Returns: ARRAY (of STRINGS with sub-classes names) */"}, "BIS_fnc_diagFindMissingAuthors": {"syntax": "call BIS_fnc_diagFindMissingAuthors", "server": false, "broadcasted": false, "description": "Copies a list of objects to the clipboard which miss the author attribute.", "example": "call BIS_fnc_diagFindMissingAuthors;", "local": false}, "setLightFlareSize": {"syntax": "light setLightFlareSize size", "server": false, "broadcasted": false, "description": "Sets relative size of the flare for the light.", "example": "myLight setLightFlareSize 5;", "local": true}, "BIS_fnc_traceBullets": {"syntax": "[unit, number] call BIS_fnc_traceBullets", "server": false, "broadcasted": false, "description": "Visualise unit's bullet trajectories. Can only be used on one shooter in a single instance.", "example": "[player] spawn BIS_fnc_traceBullets;", "local": false}, "lineIntersectsSurfaces": {"syntax": "lineIntersectsSurfaces [begPosASL, endPosASL, ignoreObj1, ignoreObj2, sortMode, maxResults, LOD1, LOD2, returnUnique]", "server": true, "broadcasted": false, "description": "Returns list of intersections with surfaces from begPosASL to endPosASL. If there is ground intersection, it is also included. Works on units. Works underwater. Doesn't return intersection with sea surface. Hardcoded max distance: 5000m. By default, for speed purposes, command will return only 1st intersection with unique objects. Since Arma 3 v1.69.140138, this could be tweaked with an optional param. NOTE: if begPosASL is under the ground and endPosASL is above it, the command will only return intersection with the ground, this is engine limitation and none of the intersectXXX commands will work when initiated from under the ground.", "example": "_intersections = lineIntersectsSurfaces [eyePos player, aimPos chopper, player, chopper, true, -1];", "local": false}, "remove3DENEventHandler": {"syntax": "remove3DENEventHandler [type,id]", "server": false, "broadcasted": false, "description": "Removes Eden Editor event handler of given type and ID.", "example": "eh = add3DENEventHandler [\"onUndo\",{systemChat \"Zip...\"}]; remove3DENEventHandler [\"onUndo\",eh];", "local": false}, "BIS_fnc_moduleModules": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_moduleObjectiveGetIn": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_runLater": {"syntax": "param call BIS_fnc_runLater;", "server": false, "broadcasted": false, "description": "Stack code/function that should be run later, after some time/frames or/and custom condition.", "example": "//Hints current game time in the next frame after 5 seconds have passed [\"uniqueId\", { hint str time; }, 5] call BIS_fnc_runLater;", "local": false}, "BIS_fnc_deleteTask": {"syntax": "[taskID,owner] call BIS_fnc_deleteTask", "server": false, "broadcasted": false, "description": "Deletes given task.", "example": "[ \"task_1\" ] call BIS_fnc_deleteTask;", "local": false}, "BIS_fnc_objectSide": {"syntax": "[target, boolean] call BIS_fnc_objectSide", "server": false, "broadcasted": false, "description": "Returns object side as defined in config (i.e. not affected by dynamic changing like rating)", "example": "_realVehicleSide = [vehicle player, true] call BIS_fnc_objectSide;", "local": false}, "isLocalized": {"syntax": "isLocalized stringName", "server": false, "broadcasted": false, "description": "Checks whether given string name is localized.", "example": "if (isLocalized \"STR_DN_SNAKE\") then { hint localize \"STR_DN_SNAKE\"; } else { hint \"STR_DN_SNAKE\"; diag_log \"ToDo: STR_DN_SNAKE is not localized\"; };", "local": false}, "distance2D": {"syntax": "param1 distance2D param2", "server": true, "broadcasted": false, "description": "Returns a 2D distance (distance projected to X,Y plane) in meters between two Objects or two Positions or Object and Position.", "example": "_meters = player distance2D heli;", "local": false}, "setSimulWeatherLayers": {"syntax": "setSimulWeatherLayers layers", "server": false, "broadcasted": false, "description": "Sets number of simul weather layers, affects quality of simul weather clouds.", "example": "Example needed", "local": false}, "BIS_fnc_enemyDetected": {"syntax": "unit call BIS_fnc_enemyDetected", "server": false, "broadcasted": false, "description": "Returns true if unit knows about nearby enemy unit or driven vehicle.", "example": "_enemyDetected = _unit call BIS_fnc_enemyDetected;", "local": false}, "tvCount": {"syntax": "tvCount [idc, [path]]", "server": false, "broadcasted": false, "description": "Returns childrens count of item on given path. IDC means id of parent Tree View.", "example": "tvCount [101, [0]];", "local": true}, "lightnings": {"syntax": "lightnings", "server": false, "broadcasted": false, "description": "Return the current lightnings value.", "example": "Get the current lightnings value:_lightningsVal = lightnings;", "local": false}, "vectorDiff": {"syntax": "vector1 vectorDiff vector2", "server": false, "broadcasted": false, "description": "Subtracts one 3D vector from another. (vector1 - vector2)", "example": "hint str (velocity car vectorDiff velocity bike);", "local": false}, "vectorDistance": {"syntax": "vector1 vectorDistance vector2", "server": false, "broadcasted": false, "description": "Distance between two 3D vectors.", "example": "_euclideanDist = getPosASL player vectorDistance [0,0,0];", "local": false}, "BIS_fnc_taskSetType": {"example": "[_taskId:string,_taskType:string] call BIS_fnc_taskSetType;", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Sets task type to given task. Parameters: 0: STRING - task id 1: STRING - task type Returns: STRING - task id */"}, "BIS_fnc_missionConversations": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Header function of local mission conversations Parameter(s): 0: STRING - unique mode 1 (Optional): ANY - additional params Returns: BOOL */"}, "BIS_fnc_missionRespawnType": {"syntax": "type call BIS_fnc_missionRespawnType", "server": false, "broadcasted": false, "description": "Return respawn type defined in Description.ext. Can return as Number (e.g 1) or String (e.g \"BIRD\").", "example": "_respawnAsNumber = 0 call BIS_fnc_missionRespawnType;", "local": false}, "ctRowControls": {"syntax": "Array = Control ctRowControls Number", "server": false, "broadcasted": false, "description": "Returns array of controls on the row with the given index.", "example": "_array = _control ctRowControls 0;", "local": true}, "setWindStr": {"syntax": "time setWindStr value", "server": false, "broadcasted": false, "description": "Changes the wind strength smoothly during the given time (in seconds). A time of zero means there will be an immediate change.", "example": "60 setWindStr 0.8; // set the wind strength to 0.8 gradually over the next 60 seconds", "local": false}, "BIS_fnc_respawnWave": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "triggerDynamicSimulation": {"syntax": "unit triggerDynamicSimulation trigger", "server": false, "broadcasted": false, "description": "Controls ability of given unit to activate entities with disabled Arma_3_Dynamic_Simulation. If false dynamically disabled entities will not be activated by unit presence", "example": "player triggerDynamicSimulation false;", "local": false}, "BIS_fnc_sayMessage": {"syntax": "[speaker, message, channel] call BIS_fnc_sayMessage", "server": false, "broadcasted": false, "description": "Make a speaker say a message.", "example": "[leader player, \"to_c01_m01_brief_001_br_briefing_a_CENTAUR_0\", \"say3D\"] call BIS_fnc_sayMessage;", "local": false}, "BIS_fnc_alignTabs": {"syntax": "array call BIS_fnc_alignTabs", "server": false, "broadcasted": false, "description": "Align two columns divided by tabs. A tab counts for 8 characters.", "example": "[ [\"Player:\", str player], [\"Name:\", name player], [\"Type:\", typeOf player], [\"Location:\", str getPosATL player], [\"Direction:\", str getDir player] ] call BIS_fnc_alignTabs;", "local": false}, "BIS_fnc_unitAddon": {"syntax": "[object] call BIS_fnc_unitAddon", "server": false, "broadcasted": false, "description": "Return addon from CfgPatches to which a given object belongs to.", "example": "[ player ] call BIS_fnc_unitAddon;", "local": false}, "removeUniform": {"syntax": "removeUniform unit", "server": true, "broadcasted": true, "description": "Removes uniform from unit.", "example": "removeUniform player;", "local": false}, "BIS_fnc_groupFromNetId": {"syntax": "netId call BIS_fnc_groupFromNetId;", "server": false, "broadcasted": false, "description": "Extends MP-only groupFromNetId functionality to SP", "example": "_grp = \"0:3\" call BIS_fnc_groupFromNetId;", "local": false}, "BIS_fnc_moduleCoverMap": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_garage": {"syntax": "[mode,params] call BIS_fnc_garage", "server": false, "broadcasted": false, "description": "Splendid Virtual Arsenal Garage", "example": "[\"Open\",true] call BIS_fnc_garage;", "local": false}, "setPilotCameraRotation": {"syntax": "object setPilotCameraRotation rotation", "server": false, "broadcasted": false, "description": "Sets rotation (relative to the centered camera position) of the object airplane or helicopter pilotCamera .", "example": "vehicle player setPilotCameraRotation [ rad 90, rad 45 ]", "local": true}, "removeAllContainers": {"syntax": "removeAllContainers unit", "server": false, "broadcasted": false, "description": "Removes all containers from the unit.", "example": "removeAllContainers player;", "local": false}, "CfgRemoteExec": {"server": false, "broadcasted": false, "local": false}, "BIS_fnc_moduleFDCPOut": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_moduleFDCPIn": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "getClientState": {"syntax": "getClientState", "server": false, "broadcasted": false, "description": "Returns client state in network game. Works on both, client and dedicated server. The following states are possible:", "example": "_state = getClientState;", "local": false}, "BIS_fnc_paramWeather": {"syntax": "[0] call BIS_fnc_paramWeather;", "server": false, "broadcasted": false, "description": "Sets overcast using BIS_fnc_setOvercast.", "example": "overCastValue = [1] call BIS_fnc_paramWeather;", "local": false}, "BIS_fnc_getServerVariable": {"syntax": "[target, varName, default] spawn BIS_fnc_getServerVariable", "server": false, "broadcasted": false, "description": "Fetch a variable saved on server. Used when you want to share variables only to specific clients to prevent large traffic. Must be spawned because communication with server takes some time.", "example": "[ missionNamespace, \"BIS_someVar\", \"defaultValue\"] spawn BIS_fnc_getServerVariable;", "local": false}, "BIS_fnc_animalSiteSpawn": {"syntax": "[animalSite, classnamesToSpawn, radius] call BIS_fnc_animalSiteSpawn;", "server": false, "broadcasted": false, "description": "Create an area that spawns animals. The animals will be created or deleted if a player is inside or outside the area's radius. Can only be used by the server or in singleplayer.", "example": "[ player, [\"rabbit_f\",\"turtle_f\",\"hen_random_f\"], 200] call BIS_fnc_animalSiteSpawn;", "local": false}, "BIS_fnc_moduleTTCPOut": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "backpack": {"syntax": "backpack unit", "server": false, "broadcasted": false, "description": "Returns a class of a backpack.", "example": "_classname = backpack player;", "local": false}, "get3DENMissionAttribute": {"syntax": "section get3DENMissionAttribute class", "server": false, "broadcasted": false, "description": "Return value of scenario attribute.", "example": "systemChat str (\"Multiplayer\" get3DENMissionAttribute \"respawn\");", "local": false}, "BIS_fnc_initLeaflet": {"syntax": "[mode, parameters] call BIS_fnc_initLeaflet", "server": false, "broadcasted": false, "description": "Initialize interactive leaflet.", "example": "[\"init\", [myLeaflet, \"#(argb,8,8,3)color(1,1,0,1)\", \"Yellow pages\"]] call BIS__fnc_initLeaflet;", "local": false}, "unlinkItem": {"syntax": "unit unlinkItem item", "server": true, "broadcasted": true, "description": "Unassign and delete existing item from its assigned slot. If item does not exist or is not in the assigned slot, command simply fails.", "example": "bluforUnit unlinkItem \"NVGoggles\"; opforUnit unlinkItem \"NVGoggles_OPFOR\"; independentUnit unlinkItem \"NVGoggles_INDEP\";", "local": false}, "controlsGroupCtrl": {"syntax": "ctrlgrp controlsGroupCtrl idc", "server": false, "broadcasted": false, "description": "Returns a child control with specified idc from a controls group", "example": "_control = _controlsGroup controlsGroupCtrl 101;", "local": false}, "getArtilleryETA": {"syntax": "unit getArtilleryETA [targetPosition, magazineType]", "server": true, "broadcasted": false, "description": "Returns ETA to the target in seconds for given artillery unit based on target position and used magazine, -1 if target can't be hit.", "example": "_mortar getArtilleryETA [getPos _target, getArtilleryAmmo [_mortar] select 0];", "local": false}, "BIS_fnc_randomPos": {"syntax": "[whitelist, blacklist, code] call BIS_fnc_randomPos", "server": false, "broadcasted": false, "description": "Selects random position according to given params within given area", "example": "_randomPosMapNoWater = [] call BIS_fnc_randomPos;", "local": false}, "BIS_fnc_effectPlankton": {"syntax": "call BIS_fnc_effectPlankton", "server": false, "broadcasted": false, "description": "Create underwater plankton particle effect.", "example": "call BIS_fnc_effectPlankton;", "local": false}, "BIS_fnc_wpArtillery": {"syntax": "[group, position, target, firedRounds, type] call BIS_fnc_wpArtillery", "server": false, "broadcasted": false, "description": "Let group members fire artillery barrage on waypoint position. Units must have magazine type.", "example": "[group player, getMarkerPos \"artilleryStrike\", objNull, 30, \"8Rnd_82mm_Mo_shells\"] call BIS_fnc_wpArtillery;", "local": false}, "setSpeech": {"syntax": "location setSpeech speech", "server": false, "broadcasted": false, "description": "Add speech to location.", "example": "Example needed", "local": false}, "set3DENIconsVisible": {"syntax": "set3DENIconsVisible [showMap, showScene]", "server": false, "broadcasted": false, "description": "Toggle visibility of Eden Editor icons.", "example": "set3DENIconsVisible [ false, false ]; Hide all icons", "local": false}, "isObjectHidden": {"syntax": "isObjectHidden object", "server": true, "broadcasted": false, "description": "Checks visibility of a given object on the local machine.", "example": "_bobIsHidden = isObjectHidden bob;", "local": false}, "BIS_fnc_uniqueClasses": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Composes array of classes with unique param (based on returned value of passed code). If class inherits the param from parent, it's not listed. Parameter(s): 0: CONFIG - class which is searched 1: CODE - code executed on class, which is passed as _this Returns: ARRAY - classes in format [class,value] class: CONFIG - class with unique param value: ANY - value returned by the passed code for the given class */"}, "BIS_fnc_moduleEffectsEmitterCreator": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* File: fn_moduleEffectsEmitterCreator.sqf Description: Module function. Creates particle emitters and calls effect function. Parameter(s): _this select 0 (Object) - Module logic. _this select 1 (String) - Function name. _this select 2 (Number) - Optional - Number of emitters. Returned value: None. */"}, "BIS_fnc_incapacitatedEffect": {"syntax": "call BIS_fnc_incapacitatedEffect", "server": false, "broadcasted": false, "description": "A draft of incapacitated effects function.", "example": "call BIS_fnc_incapacitatedEffect;", "local": false}, "BIS_fnc_log": {"syntax": "param call BIS_fnc_log;", "server": false, "broadcasted": false, "description": "Log debug message.", "example": "diag_tickTime call BIS_fnc_log;", "local": false}, "diag_activeSQSScripts": {"syntax": "diag_activeSQSScripts", "server": false, "broadcasted": false, "description": "Returns array with active SQSs.", "example": "{systemChat str _x} forEach diag_activeSQSScripts;", "local": false}, "BIS_fnc_moduleBootcampStage": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Change the current Stage in Bootcamp MP Guided Mode Parameter(s): http://community.bistudio.com/wiki/Arma_3_Modules Returns: NONE */ // Parameters"}, "BIS_fnc_diagAAR": {"syntax": "[mode, arguments] call BIS_fnc_diagAAR", "server": false, "broadcasted": false, "description": "Fill an AAR (After Action Review) display with data and Event Handlers.", "example": "[\"Init\", [_anAARDisplay]] call BIS_fnc_diagAAR;", "local": false}, "enableSimulationGlobal": {"syntax": "entity enableSimulationGlobal enable", "server": true, "broadcasted": true, "description": "MP command. Enable or disable simulation for given entity, globally. Call this only from the server. Has the same effect as enableSimulation when used in SP.", "example": "_myObject enableSimulationGlobal false;", "local": false}, "setWaypointForceBehaviour": {"syntax": "waypoint setWaypointForceBehaviour state", "server": false, "broadcasted": false, "description": "Forces the behavior of waypoint, disables AUTOCOMBAT.", "example": "[grp, 2] setWaypointForceBehaviour true;", "local": false}, "BIS_fnc_VRCourseLaunchers2": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "BIS_fnc_curatorPinged": {"syntax": "[module, player] call BIS_fnc_curatorPinged", "server": false, "broadcasted": false, "description": "Show effects when player pings curator. Icon and entity list highlighting is handled by engine", "example": "[ module_curator, player ] call BIS_fnc_curatorPinged;", "local": false}, "BIS_fnc_moduleCuratorAddEditingAreaPlayers": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_MP": {"syntax": "[params, functionName, target, isPersistent, isCall] call BIS_fnc_MP;", "server": false, "broadcasted": false, "description": "Send function for remote execution (and executes locally if conditions are met).", "example": "// Logs a message for every player on the server. [\"Imma spamming your log!\",\"BIS_fnc_log\"] call BIS_fnc_MP;", "local": false}, "BIS_fnc_arrayShuffle": {"syntax": "array call BIS_fnc_arrayShuffle", "server": false, "broadcasted": false, "description": "Return a new array with randomized order of elements from input array.", "example": "[1,2,3] call BIS_fnc_arrayShuffle; // can return [1,2,3], [3,1,2], [2,3,1], [1,3,2], [2,1,3] or [3,2,1]", "local": false}, "getAimingCoef": {"syntax": "getAimingCoef unit", "server": false, "broadcasted": false, "description": "Get current aiming coefficient (higher ~ less precise, default is 1)", "example": "_coef = getAimingCoef player", "local": false}, "waves": {"syntax": "waves", "server": false, "broadcasted": false, "description": "Return waves value.", "example": "waveIntensity = waves;", "local": false}, "BIS_fnc_taskCompleted": {"syntax": "taskID call BIS_fnc_taskCompleted", "server": false, "broadcasted": false, "description": "Returns true if task has been completed.", "example": "_completed = \"task_1\" call BIS_fnc_taskCompleted;", "local": false}, "targets": {"syntax": "unit targets [enemyOnly, maxDistance, sides, maxAge, alternateCenter]", "server": true, "broadcasted": false, "description": "Retrives list of given unit targets matching specified filter. If the filter is not specified, all targets are returned.", "example": "_targets = _unit targets [false, 300, [east,sideEnemy]]; //all targets of east or renegade side in 300m", "local": false}, "enableDynamicSimulation": {"syntax": "object enableDynamicSimulation enable", "server": false, "broadcasted": false, "description": "Enables or disables Arma_3_Dynamic_Simulation for given non AI object", "example": "_myObject enableDynamicSimulation true;", "local": false}, "getPlateNumber": {"syntax": "getPlateNumber vehicle", "server": false, "broadcasted": false, "description": "Get the license plates from any vehicle which has plates configured.", "example": "getPlateNumber vehicle player", "local": false}, "BIS_fnc_isUnitVirtual": {"syntax": "[object] call BIS_fnc_isUnitVirtual", "server": false, "broadcasted": false, "description": "Return if unit is virtual (used for example for Zeus players).", "example": "_isVirtual = someObject call BIS_fnc_isUnitVirtual;", "local": false}, "BIS_fnc_diagRadio": {"syntax": "call BIS_fnc_diagRadio;", "server": false, "broadcasted": false, "description": "Tracks played radio sentences.", "example": "call BIS_fnc_diagRadio;", "local": false}, "wingsForcesRTD": {"syntax": "wingsForcesRTD RTD_helicopter", "server": false, "broadcasted": false, "description": "Returns force produced by wings.", "example": "_wingForce = wingsForcesRTD _rtdHelo", "local": false}, "BIS_fnc_moduleRespawnVehicle": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Set vehicle respawn, compatible both with SP and MP. Parameter(s): 0: OBJECT - vehicle 1: NUMBER - respawn delay in seconds (default is 0) BOOL - true to remove vehicle respawn (further params are ignored), false to check if the vehicle is marked for respawn 2: NUMBER - how long until the vehicle is automatically respawned after its crew leaves it (default is -1, i.e., disabled) 3: NUMBER - number of time the vehicle can be respawned (default is -1, i.e., unlimited) 4: CODE - code executed upon respawn. Passed arguments are [<newVehicle>,<oldVehicle>]. The old vehicle is deleted only after this code is completed. 5: POSITION - type of respawn position: 0 = where it started 1 = where it was destroyed 2 = on vehicle's side respawn marker (e.g., \"respawn_vehicle_west\") 3 = on BLUFOR respawn marker 4 = on OPFOR respawn marker 5 = on Independent respawn marker 6 = on Civilian respawn marker 7 = on side respawn marker of unit which destroyed the vehicle 6: NUMBER - position selection type (0 = random, 1 = newest, 2 = oldest) 7: NUMBER - type of old vehicle deletion (0 = don't delete, 1 = delete, 2 = delete with an explosion effect) 8: BOOL - true to show notifcation when the vehicle is respawned Returns: BOOL */"}, "BIS_fnc_romanNumeral": {"syntax": "integer call BIS_fnc_romanNumeral;", "server": false, "broadcasted": false, "description": "Convert integer to roman numeral (e.g. 42 becomes \"XLII\").", "example": "1 call BIS_fnc_romanNumerald; //Returns \"I\"", "local": false}, "actionName": {"syntax": "actionName action", "server": false, "broadcasted": false, "description": "Returns localized name of action.", "example": "actionName \"ReloadMagazine\"", "local": false}, "removeAllPrimaryWeaponItems": {"syntax": "removeAllPrimaryWeaponItems unit", "server": false, "broadcasted": true, "description": "Removes all items from weapon except magazine.", "example": "Example needed", "local": true}, "BIS_fnc_relScaledDist": {"syntax": "[referenceObject, relativeObject] call BIS_fnc_relScaledDist", "server": false, "broadcasted": false, "description": "Exponentially inflated rational number between 0 and 1, with 1 being center and 0 being edge of the trigger. This function can be used to check where in a trigger area an object is. Is it near the border of the trigger area the number will go against 0.", "example": "[ myTrigger, player ] call BIS_fnc_relScaledDist;", "local": false}, "sort": {"syntax": "array sort order", "server": false, "broadcasted": false, "description": "Attempts to sort given array either in ascending (true) or descending (false) order. All array elements should be one of the following types:", "example": "_arr = [5.21725,1.30859,4,5.03028,1]; _arr sort true; hint str _arr; //[1,1.30859,4,5.03028,5.21725]", "local": false}, "addOwnedMine": {"syntax": "Unit addOwnedMine mine", "server": false, "broadcasted": false, "description": "Sets ownership over a remotely detonatable mine to the unit.", "example": "player addOwnedMine SuperMine;", "local": false}, "setObjectTextureGlobal": {"syntax": "obj setObjectTextureGlobal [selection, texture]", "server": true, "broadcasted": true, "description": "Set the texture of the given selection on all computers in a network session.", "example": "player setObjectTextureGlobal [0, \"\\MyAddon\\blue.paa\"];", "local": false}, "tvSetTooltip": {"syntax": "tvSetTooltip [idc, path, text]", "server": false, "broadcasted": false, "description": "Sets the tooltip text associated with the specified tree view path.", "example": "tvSetTooltip [101, [0,2], \"This is a tooltip\"];", "local": false}, "BIS_fnc_VRCourseCommandingVehicles1": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "ctrlAngle": {"syntax": "ctrlAngle control", "server": false, "broadcasted": false, "description": "Gets rotation info of an ST_PICTURE control.", "example": "ctrlAngle _control;", "local": false}, "BIS_fnc_isLeapYear": {"syntax": "year call BIS_fnc_isLeapYear", "server": false, "broadcasted": false, "description": "Returns true if given year is a leap year, otherwise false.", "example": "_isLeapYear = 2035 call BIS_fnc_isLeapYear;", "local": false}, "setStamina": {"syntax": "unit setStamina stamina", "server": false, "broadcasted": false, "description": "Set units' stamina (seconds until depletion)", "example": "player setStamina 42;", "local": false}, "showCuratorCompass": {"syntax": "showCuratorCompass bool", "server": false, "broadcasted": false, "description": "Hides or shows compass in curator interface.", "example": "showCuratorCompass true;", "local": false}, "BIS_fnc_getRespawnInventories": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Return respawn inventories available for the given unit Parameter(s): 0: OBJECT, GROUP, SIDE or NAMESPACE 1 (Optional): BOOL - true to show even inventories disabled by curator 2 (Optional): BOOL - true to return namespace, inventory and role limits (used in the new respawn screen) instead of inventories itself Returns: ARRAY (of Strings) */"}, "diag_resetShapes": {"syntax": "diag_resetShapes", "server": false, "broadcasted": false, "description": "Reload models on-the-fly without the need of restarting the game. Changes applied by diag_resetShapes are applied to all new entities so restart of mission is not necessarily required - spawning vehicle again or changing back forth weapon should usually do the trick. It works only with \"-FilePatching\" in combination with local data. Command will reload only models present in local data.", "example": "diag_resetShapes", "local": false}, "BIS_fnc_taskSetDestination": {"syntax": "[taskName, destination] call BIS_fnc_taskSetDestination", "server": false, "broadcasted": false, "description": "Set a task's destination.", "example": "[\"BIS_task_01\",[1337,1337,0]] call BIS_fnc_taskSetDestination;", "local": false}, "setConvoySeparation": {"syntax": "vehicle setConvoySeparation distance", "server": false, "broadcasted": false, "description": "Sets the distance to keep to the vehicle which is in front.", "example": "vehicle setConvoySeparation 20;", "local": false}, "BIS_fnc_sortBy": {"syntax": "[array, parameters, algorithm, direction, filter] call BIS_fnc_sortBy", "server": false, "broadcasted": false, "description": "Sorts an array according to given algorithm. See sort for simple sorts.", "example": "// sort numbers from lowest to highest _sortedNumbers = [[1,-80,0,480,15,-40], [], {_x}, \"ASCEND\"] call BIS_fnc_sortBy;", "local": false}, "ropeEndPosition": {"syntax": "ropeEndPosition rope", "server": false, "broadcasted": false, "description": "Return rope end positions in Position3D format", "example": "_ends = ropeEndPosition (ropes heli1 select 0); _end1 = _ends select 0; _end2 = _ends select 1;", "local": false}, "shownArtilleryComputer": {"syntax": "shownArtilleryComputer", "server": false, "broadcasted": false, "description": "Checks whether the player has the artillery computer currently open.", "example": "if ( shownArtilleryComputer ) then { hint \"Artillery Computer shown on screen\"; };", "local": false}, "BIS_fnc_itemType": {"syntax": "weaponClass call BIS_fnc_itemType", "server": false, "broadcasted": false, "description": "Returns item category and type.", "example": "\"arifle_MX_pointer_F\" call BIS_fnc_itemType;", "local": false}, "currentChannel": {"syntax": "currentChannel", "server": false, "broadcasted": false, "description": "Returns currently selected user chat channel on the UI (selected with < and > in MP). Correspondence between channel and number:", "example": "_selected = currentChannel; // 3 - for example for the Group", "local": false}, "synchronizedWaypoints": {"syntax": "synchronizedWaypoints obj", "server": false, "broadcasted": false, "description": "Returns the list of waypoints synchronized with a given trigger or waypoint.", "example": "Example needed", "local": false}, "BIS_fnc_setIDCStreamFriendly": {"syntax": "[target,IDC] call BIS_fnc_setIDCStreamFriendly", "server": false, "broadcasted": false, "description": "Shows or hides UI control according to state of the Stream Friendly UI switch in Game Options.", "example": "[ (findDisplay 1337) displayCtrl 42 ] call BIS_fnc_setIDCStreamFriendly;", "local": false}, "BIS_fnc_liveFeedModuleSetSource": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Set a live feed's source via a module. Parameters: _this: OBJECT - Live Feed - Set Source module */ // <insert smart comment about dedicated servers here>"}, "createMPCampaignDisplay": {"syntax": "display createMPCampaignDisplay class", "server": false, "broadcasted": false, "description": "Create a MP campaign display. The class name must be a mission collection declared in the configs; in example, configFile/\"CfgMissions\"/\"MPMissions\"/\"Apex\"/", "example": "findDisplay 46 createMPCampaignDisplay \"Apex\";", "local": false}, "addCuratorAddons": {"syntax": "curatorObj addCuratorAddons addons", "server": false, "broadcasted": false, "description": "Allow curator use of given addon.", "example": "curatorObj addCuratorAddons [\"A3_Armor_F_AMV\",\"A3_Armor_F_Panther\"];", "local": false}, "BIS_fnc_missionTimeLeft": {"syntax": "call BIS_fnc_missionTimeLeft", "server": false, "broadcasted": false, "description": "Returns time in seconds until the mission end. Remaining time can be set using estimatedTimeLeft command or using BIS_fnc_countdown.", "example": "call BIS_fnc_missionTimeLeft;", "local": false}, "BIS_fnc_allTurrets": {"syntax": "vehicleClass call BIS_fnc_allTurrets", "server": false, "broadcasted": false, "description": "Returns all vehicle turrets from config with options. Does what allTurrets command does, except the param is vehicle's config class name", "example": "_allTurrets = \"C_Offroad_01_F\" call BIS_fnc_allTurrets; // []", "local": false}, "modParams": {"syntax": "modParams [modClass, options]", "server": false, "broadcasted": false, "description": "Returns list of mod parameters according to given options, values are in same order as the given options. Available options:", "example": "_data = modParams [\"Kart\", [\"name\", \"logo\", \"picture\"]];", "local": false}, "BIS_fnc_missionFlow": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "FSM for internal use."}, "get3DENCamera": {"syntax": "get3DENCamera", "server": false, "broadcasted": false, "description": "Returns the camera Object used by the Eden Editor.", "example": "// set exact yaw, pitch, and roll _y = 45; _p = -80; _r = 0; get3DENCamera setVectorDirAndUp [ [ sin _y * cos _p,cos _y * cos _p,sin _p], [ [ sin _r,-sin _p,cos _r * cos _p],-_y] call BIS_fnc_rotateVector2D ];", "local": false}, "windStr": {"syntax": "windStr", "server": false, "broadcasted": false, "description": "Returns the current wind strength.", "example": "10 setWindStr (0.5 * windStr);", "local": false}, "setPilotCameraTarget": {"syntax": "bool = object setPilotCameraTarget target", "server": false, "broadcasted": false, "description": "Sets an area or target to be tracked by the object airplane or helicopter pilotCamera. To track an object the vehicle has to have appropriate sensors (scanners) that can detect the given target type. Using objNull will unlock the camera", "example": "_pilotCamTrack = vehicle player setPilotCameraTarget [2100,4200,4.2];", "local": true}, "setCuratorCameraAreaCeiling": {"syntax": "curatorObj setCuratorCameraAreaCeiling height", "server": false, "broadcasted": false, "description": "Sets maximal height to which curator camera can move.", "example": "myCurator setCuratorCameraAreaCeiling 50;", "local": false}, "set3DENLogicType": {"syntax": "objects set3DENLogicType classname", "server": false, "broadcasted": false, "description": "Sets the new type of Logic object(s). For other objects use set3DENObjectType", "example": "[get3DENSelected \"logic\" select 0] set3DENLogicType \"MiscOR_F\";", "local": false}, "ppEffectEnabled": {"syntax": "ppEffectEnabled effect", "server": false, "broadcasted": false, "description": "Checks whether given post process effect is enabled", "example": "_enabled = ppEffectEnabled _hndl;", "local": false}, "BIS_fnc_toUpperDisplayTexts": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: * Converts text of selected classes in one display to upper-case. * Searches inside Controls class of the display. Looks inside RscControlsGroup as well. * Doesn't toUpper class with name \"PlayersName\" (TODO - Maybe make it parameter as well). Parameter(s): 0: STRING - Class name of the display (e. g. \"RscDisplayOptionsAudio\"). 1: ARRAY OF STRINGS - Class names of parents of controls you want to toUpper (e. g. [\"RscText\", \"RscTitle\"]). 2 (Optional): ARRAY OF STRINGS - Class names of controls you don't want toUpper (e. g. [\"CA_VehicleAuthor\"] - suitable for toUppering all RscTexts except CA_VehicleAuthor). Returns: NOTHING */"}, "terrainIntersectAtASL": {"syntax": "terrainIntersectAtASL [pos1, pos2]", "server": false, "broadcasted": false, "description": "Checks for intersection of terrain between two ASL positions. Same as terrainIntersectASL, only returns intersect position instead of Boolean", "example": "_posASL = terrainIntersectAtASL [eyePos player, getPosASL chopper];", "local": false}, "BIS_fnc_moduleAnimals": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "enableVehicleCargo": {"syntax": "vehicle enableVehicleCargo enable", "server": false, "broadcasted": false, "description": "Enable/disable option to transport other vehicles (if configured) or be transported.", "example": "vehicle enableVehicleCargo true;", "local": false}, "assignCurator": {"syntax": "player assignCurator curatorObj", "server": false, "broadcasted": false, "description": "Assign player as curator. Two players cannot act as one curator.", "example": "player assignCurator myCurator;", "local": false}, "BIS_fnc_tasksUnit": {"syntax": "target call BIS_fnc_tasksUnit", "server": false, "broadcasted": false, "description": "Grab all tasks currently created for a given unit.", "example": "player call BIS_fnc_tasksUnit;", "local": false}, "param": {"syntax": "param [index, defaultValue, expectedDataTypes, expectedArrayCount]", "server": false, "broadcasted": false, "description": "Extracts a single value with given index from input argument, similar to BIS_fnc_param. When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument. If input argument is not an array, it will be converted to 1 element array.", "example": "[1, 2, 3] call { private _one = param [0, 1]; private _two = param [1, 2]; private _three = param [2, 3]; // ..... };", "local": false}, "BIS_fnc_moduleSound": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_removeFromPairs": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Removes an item from pair array. */"}, "BIS_fnc_isInZoom": {"syntax": "[_min,_max] call BIS_fnc_isInZoom;", "server": false, "broadcasted": false, "description": "Checks if map zoom level is in between given interval (min,max)", "example": "if ([0.001,0.02] call BIS_fnc_isInZoom) then { hint \"Zoom level is in between 0.001 and 0.02\"; };", "local": false}, "uniformMagazines": {"syntax": "uniformMagazines unit", "server": false, "broadcasted": false, "description": "Get array with all magazines from uniform of the given unit.", "example": "uniformMagazines player;", "local": false}, "BIS_fnc_execVM": {"syntax": "filename call BIS_fnc_execVM", "server": false, "broadcasted": false, "description": "execVM desired script with desired argument(s). This function is only really useful when combined with BIS_fnc_MP to execute a script remotely.", "example": "\"Bonus\\initializeExtras.sqf\" call BIS_fnc_execVM;", "local": false}, "turretOwner": {"syntax": "vehicle turretOwner turretPath", "server": true, "broadcasted": false, "description": "Returns id of the owner of the turret. Server only. Returns 0 on non-server and SP.", "example": "_ownerId = vehicle player turretOwner [0];", "local": false}, "BIS_fnc_weaponComponents": {"syntax": "[classname] call BIS_fnc_weaponComponents", "server": false, "broadcasted": false, "description": "Returns array with classname of the parent weapon (without attachments), followed by classnames of all its attachments.", "example": "\"arifle_mx_aco_pointer_f\" call BIS_fnc_weaponComponents; //[\"arifle_mx_f\",\"optic_aco\",\"acc_pointer_ir\"]", "local": false}, "BIS_fnc_exportCfgHints": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "enableMimics": {"syntax": "unit enableMimics enabled", "server": false, "broadcasted": false, "description": "Enables/disables mimics on a given unit.", "example": "cursorTarget enableMimics false;", "local": false}, "shownScoretable": {"syntax": "shownScoretable", "server": false, "broadcasted": false, "description": "Returns the state of the score table set with showScoretable command.", "example": "_state = shownScoretable;", "local": false}, "BIS_fnc_taskSetAlwaysVisible": {"example": "[_taskId:string,_alwaysVisible:bool] call BIS_fnc_taskSetAlwaysVisible;", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Flags task to be or not to be always visible. Parameters: 0: STRING - task id 1: BOOL - always visible flag Returns: STRING - task id */"}, "disableNVGEquipment": {"syntax": "vehicle disableNVGEquipment state", "server": true, "broadcasted": true, "description": "Enables or disables transport NV (Night Vision). To disable TI (Thermal Imaging) use disableTIEquipment.", "example": "myTank disableNVGEquipment true;", "local": false}, "BIS_fnc_objectType": {"syntax": "anObject call BIS_fnc_objectType", "server": false, "broadcasted": false, "description": "Return object category and type.", "example": "_myType = player call BIS_fnc_objectType;", "local": false}, "binocular": {"syntax": "binocular unit", "server": false, "broadcasted": false, "description": "Returns class name of currently used binocular weapon.", "example": "_binocs = binocular player; //Rangefinder", "local": false}, "waypointLoiterType": {"syntax": "waypointLoiterType waypoint", "server": false, "broadcasted": false, "description": "Gets the waypoint loiter type. Waypoint uses format Waypoint.", "example": "_type = waypointLoiterType [groupOne, 1]", "local": false}, "doArtilleryFire": {"syntax": "unit doArtilleryFire [position, type, rounds]", "server": false, "broadcasted": false, "description": "Orders a unit to reload defined magazine commence fire burst on the given position (silently).", "example": "mortar1 doArtilleryFire [[3000, 120, 1000], \"8Rnd_82mm_Mo_shells\", 3];", "local": false}, "showUAVFeed": {"syntax": "showUAVFeed show", "server": false, "broadcasted": false, "description": "Shows/hides video feed transmitted from UAV. When enabled, the video is streamed to following texture", "example": "showUAVFeed true;", "local": false}, "getOxygenRemaining": {"syntax": "getOxygenRemaining unit", "server": false, "broadcasted": false, "description": "Returns amount of remaining oxygen.", "example": "_oxygen = getOxygenRemaining player;", "local": false}, "BIS_fnc_objectFromNetId": {"syntax": "netId call BIS_fnc_objectFromNetId;", "server": false, "broadcasted": false, "description": "Extends MP-only objectFromNetId functionality to SP", "example": "_obj = \"0:2\" call BIS_fnc_objectFromNetId;", "local": false}, "cbSetChecked": {"syntax": "control cbSetChecked state", "server": false, "broadcasted": false, "description": "Sets the current state of a checkbox (CT_CHECKBOX type 77 of Dialog Control). Use \"CheckedChanged\" control event handler with it.", "example": "_myCheckBox cbSetChecked true;", "local": false}, "isSimpleObject": {"syntax": "isSimpleObject object", "server": false, "broadcasted": false, "description": "Returns true if given object is simple object", "example": "_isSimple = isSimpleObject _obj1;", "local": false}, "setSpeaker": {"syntax": "person setSpeaker speaker", "server": true, "broadcasted": false, "description": "Sets the speaker of a person. In order to setSpeaker dynamically in MP, the command needs to run on every computer with exactly the same params otherwise the speaking unit could appear silent on other PCs. Run this on server:", "example": "unit1 setSpeaker \"Male02GRE\";", "local": false}, "nameSound": {"syntax": "nameSound person", "server": false, "broadcasted": false, "description": "Returns the nameSound of a person.", "example": "nameSound player", "local": false}, "debriefingText": {"syntax": "debriefingText end", "server": false, "broadcasted": false, "description": "Returns debriefing text.", "example": "_deathText = debriefingText \"endDeath\";", "local": false}, "BIS_fnc_tridentSetRelationship": {"syntax": "[side_1,side_2,value,absolute] call BIS_fnc_tridentSetRelationship", "server": false, "broadcasted": false, "description": "Set relationship of competing Trident sides. When the value reaches threshold, side relationship will change. The value slowly decreases towards 0.", "example": "[ west, east, 0.5, true ] call BIS_fnc_tridentSetRelationship;", "local": false}, "inAreaArray": {"syntax": "positions inAreaArray trigger", "server": false, "broadcasted": false, "description": "Filters given list of Objects and/or Positions in relation to the given area, defined by a trigger, marker, location or array. Returns array of Objects and/or Positions from the list that are inside the area", "example": "vehicles inAreaArray trigger_1;", "local": false}, "forceAddUniform": {"syntax": "unit forceAddUniform type", "server": true, "broadcasted": true, "description": "Create a new uniform and hard link it into slot (without any restrictions).", "example": "_unit forceAddUniform \"U_B_CombatUniform_mcam\";", "local": false}, "vectorModelToWorldVisual": {"syntax": "object vectorModelToWorldVisual modelDir", "server": false, "broadcasted": false, "description": "Converts vector from model to world space in render time scope.", "example": "Convert model space vector [0,-10,4] to world space; vector gets rotated according to _airplane: _airplane vectorModelToWorldVisual [0,-10,4];", "local": false}, "removeAllItemsWithMagazines": {"syntax": "removeAllItemsWithMagazines unit", "server": false, "broadcasted": false, "description": "Removes all itemsWithMagazines from the uniform, vest and backpack.", "example": "removeAllItemsWithMagazines player;", "local": false}, "gusts": {"syntax": "gusts", "server": false, "broadcasted": false, "description": "Return the current gusts value. Scale is 0 to 1.", "example": "_gustsval = gusts;", "local": false}, "setSuppression": {"syntax": "unit setSuppression value", "server": false, "broadcasted": false, "description": "Sets the person's suppression, from 0 to 1.", "example": "AI_unit_1 setSuppression 1;", "local": false}, "forceWeaponFire": {"syntax": "unit forceWeaponFire [muzzle, firemode]", "server": false, "broadcasted": true, "description": "The unit will be forced to fire weapon from the given muzzle. The weapon will not fire if firemode passed as parameter is not supported by the given muzzle. The muzzle could belong to a vehicle weapon and unit in this case will be the unit operating this weapon. Doesnt't seem to work for units in FFV positions. Works on player. See also: BIS_fnc_fire", "example": "_unit forceWeaponFire [\"arifle_MX_F\", \"Single\"]; _unit forceWeaponFire [\"hgun_ACPC2_F\", \"hgun_ACPC2_F\"]; _unit forceWeaponFire [\"HandGrenadeMuzzle\",\"HandGrenadeMuzzle\"]; _unit forceWeaponFire [\"MiniGrenadeMuzzle\",\"MiniGrenadeMuzzle\"]; _unit forceWeaponFire [\"HandGrenade_Stone\",\"HandGrenade_Stone\"]; _unit forceWeaponFire [\"SmokeShellMuzzle\",\"SmokeShellMuzzle\"]; _unit forceWeaponFire [\"ChemlightGreenMuzzle\",\"ChemlightGreenMuzzle\"]; _unit forceWeaponFire [\"IRGrenade\",\"IRGrenade\"]; _unit forceWeaponFire [\"Laserdesignator\",\"Laserdesignator\"];", "local": true}, "enableCopilot": {"syntax": "vehicle enableCopilot enable", "server": false, "broadcasted": true, "description": "Enables copilot actions.", "example": "if (!isCopilotEnabled myHeli) then { myHeli enableCopilot true; };", "local": true}, "BIS_fnc_holdKey": {"syntax": "[display, key, time, code, control] call BIS_fnc_holdKey", "server": false, "broadcasted": false, "description": "Function that executes a user-defined code when a key has been held down for a long enough time.", "example": "[findDisplay 46,36,5, {hint \"Key 'J' pressed for 5 seconds\"}] call BIS_fnc_holdKey; // Action is added to the mission display", "local": false}, "briefingName": {"syntax": "briefingName", "server": false, "broadcasted": false, "description": "Returns the name of the current briefing/scenario name.", "example": "_name = briefingName;", "local": false}, "BIS_fnc_fixDate": {"syntax": "date call BIS_fnc_fixDate", "server": false, "broadcasted": false, "description": "Checks the array with date data and makes sure, the values are within the boundries.", "example": "_fixedDate = [2033,-2,89,25,75] call BIS_fnc_fixDate;", "local": false}, "BIS_fnc_inString": {"syntax": "[searchTerm, searchText(, caseSensitive)] call BIS_fnc_inString;", "server": false, "broadcasted": false, "description": "Find a string within a string.", "example": "[\"rabbit\", \"I ate a rabbit today\"] call BIS_fnc_inString // will return true", "local": false}, "assignedItems": {"syntax": "assignedItems unit", "server": false, "broadcasted": false, "description": "Get array with all assigned items.", "example": "hint str assignedItems player;", "local": false}, "BIS_fnc_phoneticalWord": {"syntax": "[integer,short] call BIS_fnc_phoneticalWord;", "server": false, "broadcasted": false, "description": "Convert integer to NATO phonetical alphabet word (e.g. 2 becomes \"Bravo\") or letter of alphabet.", "example": "[ 1 ] call BIS_fnc_phoneticalWord; //Returns \"Alpha\"", "local": false}, "loadBackpack": {"syntax": "loadBackpack unit", "server": false, "broadcasted": false, "description": "Returns current sum of mass from items stored in a backpack.", "example": "myVariable = loadBackpack myUnit;", "local": false}, "getAnimAimPrecision": {"syntax": "getAnimAimPrecision unit", "server": false, "broadcasted": false, "description": "Returns aim precision for current animation", "example": "getAnimAimPrecision player;", "local": false}, "lbSetPictureColorDisabled": {"syntax": "lbSetPictureColorDisabled [idc, index, color]", "server": false, "broadcasted": false, "description": "Sets the disabled color of item's picture (left) with the given index of the listbox with id idc of the topmost user dialog to the given color. Color is in format Color. Color which consists from only zeros means disable this override.", "example": "lbSetPictureColorDisabled [101, 0, [1, 1, 1, 0.25]];", "local": false}, "getShotParents": {"syntax": "getShotParents projectile", "server": false, "broadcasted": false, "description": "Returns shot information Array for the given projectile in format [vehicle, instigator], where vehicle is the vehicle the shot was fired from, and the instigator is the person who pulled the trigger. If shot was fired by a soldier on foot or in FFV position in vehicle, the soldier is returned for the vehicle.", "example": "_shotParents = getShotParents myProjectile;", "local": false}, "BIS_fnc_VRCourseCommandingActions2": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "ctrlAnimateModel": {"syntax": "control ctrlAnimateModel [source, phase]", "server": false, "broadcasted": false, "description": "Process an animation of 3D Dialog Control. Command uses name defined by source property and works similar like animateSource command.", "example": "_control3D ctrlAnimateModel [\"Close\",1];", "local": false}, "logEntities": {"syntax": "logEntities", "server": false, "broadcasted": false, "description": "Creates a log file containing the list of all game entities in scene.", "example": "logEntities;", "local": false}, "removeCuratorEditableObjects": {"syntax": "curatorObj removeCuratorEditableObjects [[objects],removeCrew]", "server": false, "broadcasted": false, "description": "Unregister objects which can be edited by a curator.", "example": "curatorModule removeCuratorEditableObjects [[cursorTarget],true]", "local": false}, "BIS_fnc_ORBATAnimate": {"syntax": "[target, zoom, duration] spawn BIS_fnc_ORBATAnimate", "server": false, "broadcasted": false, "description": "Animates an ORBAT viewer.", "example": "[ configFile >> \"CfgORBAT\" >> \"BIS\" >> \"B_1_A_1\", 0.5, 3 ] spawn BIS_fnc_ORBATAnimate;", "local": false}, "BIS_fnc_colorRGBAtoTexture": {"syntax": "color call BIS_fnc_colorRGBAtoTexture", "server": false, "broadcasted": false, "description": "Converts RGB color format to procedural texture, e.g [0,0,0,1] becomes \"#(argb,8,8,3)color(0,0,0,1)\".", "example": "_texture = [0,0,0,1] call BIS_fnc_colorRGBAtoTexture;", "local": false}, "BIS_fnc_carAlarm": {"syntax": "[mode, car] call BIS_fnc_carAlarm", "server": false, "broadcasted": false, "description": "Play car alarm effect.", "example": "[\"init\", myCar] call BIS_fnc_carAlarm;", "local": false}, "enableFatigue": {"syntax": "unit enableFatigue enable", "server": false, "broadcasted": true, "description": "Enables/Disables the person's fatigue.", "example": "player enableFatigue false;", "local": true}, "getBleedingRemaining": {"syntax": "getBleedingRemaining unit", "server": false, "broadcasted": false, "description": "Returns how many seconds injured unit will continue leaving blood trail. If unit damage is < 0.1, the return value is 0 and unit doesn't leave any blood trail. Use setBleedingRemaining to set different remaining time.", "example": "_bleedingRemaining = getBleedingRemaining _unit;", "local": false}, "BIS_fnc_curatorAutomatic": {"syntax": "[curator,sides,cheatCoef,infantyProb,groundProb,airProb,marineProb] call BIS_fnc_curatorAutomatic", "server": false, "broadcasted": false, "description": "Spawn units based on curator settings. Used when curator role is not taken.", "example": "[curator_module,[ west, independent ,0.1,40,30,20,10] call BIS_fnc_curatorAutomatic;", "local": false}, "getForcedFlagTexture": {"syntax": "getForcedFlagTexture object", "server": false, "broadcasted": false, "description": "A getter for forceFlagTexture. Forced texture is different from your normal flag texture, which can be retrieved with flagTexture", "example": "getForcedFlagTexture player;", "local": false}, "create3DENComposition": {"syntax": "create3DENComposition [configPath, position]", "server": false, "broadcasted": false, "description": "Create new Composition. To create individual entities, use create3DENEntity.", "example": "myComposition = create3DENComposition [ configFile >> \"CfgGroups\" >> \"West\" >> \"BLU_F\" >> \"Infantry\" >> \"BUS_InfSquad\", screenToWorld [0.5,0.5] ];", "local": false}, "BIS_fnc_moduleBleedTickets": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "setParticleClass": {"syntax": "source setParticleClass className", "server": true, "broadcasted": false, "description": "Sets particle source parameters using existing particle config from CfgCloudlets class. Use setParticleParams subsequently if you need to overwrite some values.", "example": "_source01 = \"#particlesource\" createVehicleLocal _pos01; _source01 setParticleClass \"ObjectDestructionFire1Smallx\"; _source01 attachTo [_object,[0,0,0]];", "local": false}, "setAnimSpeedCoef": {"syntax": "unit setAnimSpeedCoef coef", "server": false, "broadcasted": false, "description": "Sets a coefficient for animation speed (0.5 will play animations half the speed, 2 twice the speed).", "example": "player setAnimSpeedCoef 0.75;", "local": false}, "flagAnimationPhase": {"syntax": "flagAnimationPhase flag", "server": true, "broadcasted": false, "description": "Returns flag position on the flag pole in range of 0..1, where 0 is bottom of the flag pole, 1 is the top of the flag pole. The result is local to the PC on which command is executed", "example": "flagAnimationPhase _flag1; //0.5", "local": false}, "BIS_fnc_moduleRespawnTickets": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_endMission": {"syntax": "[endName,isVictory,fadeType,playMusic,completeTasks] spawn BIS_fnc_endMission;", "server": false, "broadcasted": false, "description": "Ends mission with a fade effect. See Debriefing for more information.", "example": "\"end1\" call BIS_fnc_endMission;", "local": false}, "BIS_fnc_wpDemine": {"syntax": "[group, position, target, clearUnknownMines] call BIS_fnc_wpDemine", "server": false, "broadcasted": false, "description": "Scripted \"CLEAR MINES\" Advanced Waypoint. The script needs a unit with the abiility to demine (engineer or explosive specialist trait and a toolkit).", "example": "[group player, getMarkerPos \"mineField\", objNull, false] call BIS_fnc_wpDemine;", "local": false}, "BIS_fnc_buildingPositions": {"syntax": "param call BIS_fnc_buildingPositions;", "server": false, "broadcasted": false, "description": "Get all available positions within a building or structure.", "example": "[_building] call BIS_fnc_buildingPositions;", "local": false}, "BIS_fnc_taskSetCurrent": {"syntax": "taskName call BIS_fnc_taskSetCurrent", "server": false, "broadcasted": false, "description": "Set a task to current. Identical to assigning a task.", "example": "\"BIS_task_01\" call BIS_fnc_taskSetCurrent;", "local": false}, "isTouchingGround": {"syntax": "isTouchingGround object", "server": true, "broadcasted": false, "description": "Returns true if object is touching the ground.", "example": "if (isTouchingGround player) then {hint \"Terraferma!\";};", "local": false}, "activatedAddons": {"syntax": "activatedAddons", "server": false, "broadcasted": false, "description": "Returns a list of all activated addons.", "example": "_addons = activatedAddons;", "local": false}, "toFixed": {"syntax": "number toFixed decimals", "server": false, "broadcasted": false, "description": "Converts a number into a string, keeping the specified number of decimals. If the desired number of decimals is higher than the actual number, nulls are added to create the desired decimal length. This command is almost identical in behaviour to JavaScript toFixed()", "example": "123 toFixed 2; //\"123.00\"", "local": false}, "BIS_fnc_didJIP": {"syntax": "[] call BIS_fnc_didJIP", "server": false, "broadcasted": false, "description": "Return whether or not the local player joined the game while it was already in progress.", "example": "if ([] call BIS_fnc_didJIP) then { forceRespawn player };", "local": false}, "getSoundControllerResult": {"syntax": "obj getSoundControllerResult configEntry", "server": false, "broadcasted": false, "description": "Returns the calculated value of simple expression in config.", "example": "_result = (vehicle player) getSoundControllerResult (configFile >> \"cfgVehicles\" >> typeOf (vehicle player) >> \"sounds\" >> \"idle_ext\" >> \"volume\");", "local": false}, "BIS_fnc_moduleTracers": {"syntax": "[logic, activated] call BIS_fnc_moduleTracers", "server": false, "broadcasted": false, "description": "Function used by the Tracers module.", "example": "[myLogic, true] call BIS_fnc_moduleTracers;", "local": false}, "playableSlotsNumber": {"syntax": "playableSlotsNumber side", "server": false, "broadcasted": false, "description": "Returns the number of available slots in mission per side (both empty and taken).", "example": "_maxBluforPlayers = playableSlotsNumber blufor;", "local": false}, "vectorAdd": {"syntax": "vector1 vectorAdd vector2", "server": false, "broadcasted": false, "description": "Adds two 3D vectors. Replaces BIS_fnc_vectorAdd.", "example": "hint str (velocity unit1 vectorAdd velocity unit2);", "local": false}, "unitAimPosition": {"syntax": "unitAimPosition unit", "server": true, "broadcasted": false, "description": "Returns the position on the unit other units can aim at. Same as aimPos only returns position in PositionAGL format and has render scope alternative unitAimPositionVisual.", "example": "unitAimPosition player;", "local": false}, "BIS_fnc_showCuratorAttributes": {"syntax": "[target] call BIS_fnc_showCuratorAttributes", "server": false, "broadcasted": false, "description": "Show attributes window of an entity. When no attributes are available, no window is opened.", "example": "[BIS_vehicle] call BIS_fnc_showCuratorAttributes;", "local": false}, "BIS_fnc_curatorAutomaticPositions": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "configSourceModList": {"syntax": "configSourceModList config", "server": false, "broadcasted": false, "description": "Returns an array of mods (CfgMods) in which the given config class is defined.", "example": "_mods = configSourceModList (configFile >> \"CfgVehicles\" >> \"Man\"); hint str _mods; // [\"A3\",\"curator\",\"heli\"]", "local": false}, "setCuratorCoef": {"syntax": "curatorObj setCuratorCoef [action,coef]", "server": false, "broadcasted": false, "description": "Sets coef for some action (coef have to be bigger than -1 000 000, anything lower is considered as disabled action).", "example": "curatorModule setCuratorCoef [\"Place\", 1]", "local": false}, "enableDiagLegend": {"syntax": "enableDiagLegend Bool", "server": false, "broadcasted": false, "description": "Enable or disable the legend for diagnostics. Internal dev only", "example": "enableDiagLegend false", "local": false}, "setNameSound": {"syntax": "person setNameSound name", "server": true, "broadcasted": false, "description": "Sets the nameSound of a person. By default, when giving orders, the units are addressed by their number. When nameSound is set, it will be used instead to address the unit. For example: \"Two, hold fire!\", one can have: \"Miller, hold fire!\"", "example": "unit1 setNameSound \"dixon\";", "local": false}, "enableStamina": {"syntax": "unit enableStamina enabled", "server": false, "broadcasted": true, "description": "Enable/disable stamina system", "example": "player enableStamina true;", "local": true}, "BIS_fnc_findInPairs": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Searches the associative array for the 1st occurance of the key string and returns it's index. Syntax: _index:number = [_associativeArray:array,_key:string] call BIS_fnc_findInPairs; Example: 0 = [[[\"apple\",3],[\"pear\",2]],\"apple\"] call BIS_fnc_findInPairs; Returns: * if found: index (starting from 0) * if not found: -1 */"}, "getAllHitPointsDamage": {"syntax": "getAllHitPointsDamage entity", "server": true, "broadcasted": false, "description": "Returns 3 arrays for easy cross reference: 1st - array of hit point names, 2nd - array of hit selection names, 3rd - array of damage values. All values in all arrays are ordered accordingly to hit part index for convenience and for use in setHitIndex and getHitIndex. Levels of damage are:", "example": "getAllHitPointsDamage player; //[ // [\"HitFace\",\"HitNeck\",\"HitHead\",\"HitPelvis\",\"HitAbdomen\",\"HitDiaphragm\",\"HitChest\",\"HitBody\",\"HitArms\",\"HitHands\",\"HitLegs\"], // [\"\",\"neck\",\"head\",\"pelvis\",\"spine1\",\"spine2\",\"spine3\",\"body\",\"\",\"hands\",\"legs\"], // [0,0.0939002,0.0319932,0.0858595,0.174491,1,1,0.168495,1,0.5,0.195907] //]", "local": false}, "BIS_fnc_moduleSaveGame": {"syntax": "[nil,nil,activated] call BIS_fnc_moduleSaveGame", "server": false, "broadcasted": false, "description": "Saves the game. Saving has to be enabled.", "example": "call BIS_fnc_moduleSaveGame;", "local": false}, "setUserActionText": {"syntax": "object setUserActionText [actionIndex, textMenu, textWindowBackground, textWindowForeground]", "server": true, "broadcasted": false, "description": "Changes user added action (see addAction) menu item text.", "example": "_id = player addAction [\"Hello\", \"\"]; player setUserActionText [_id, \"Good Bye\"];", "local": false}, "removeAllMusicEventHandlers": {"syntax": "removeAllMusicEventHandlers type", "server": false, "broadcasted": false, "description": "Removes all music track event handlers of given type.", "example": "removeAllMusicEventHandlers \"MusicStart\"", "local": false}, "BIS_fnc_setObjectShotParents": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "missionDifficulty": {"syntax": "missionDifficulty", "server": false, "broadcasted": false, "description": "Return difficulty that has been forced for this mission, returns -1 if difficulty is not forced and it's used one from player's options.", "example": "_number = missionDifficulty;", "local": false}, "BIS_fnc_typeText": {"syntax": "[stringLines, posX, posY, rootFormat] call BIS_fnc_typeText", "server": false, "broadcasted": false, "description": "Types a structured text on the screen, letter by letter, cursor blinking.", "example": "[ [ [\"CAMP ROGAIN,\",\"<t align = 'center' shadow = '1' size = '0.7' font='PuristaBold'>%1</t>\"], [\"RESUPPLY POINT\",\"<t align = 'center' shadow = '1' size = '0.7'>%1</t><br/>\"], [\"10 MINUTES LATER ...\",\"<t align = 'center' shadow = '1' size = '1.0'>%1</t>\"] ] ] spawn BIS_fnc_typeText;", "local": false}, "swimInDepth": {"syntax": "unit swimInDepth value", "server": false, "broadcasted": false, "description": "Sets the target depth level for swimming soldier. Depth should be a negative number.", "example": "soldier swimInDepth -20;", "local": false}, "BIS_fnc_moduleArsenal": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "ctSetRowTemplate": {"syntax": "Control ctSetRowTemplate Config", "server": false, "broadcasted": false, "description": "Takes config path to the new row template. Clears the whole RscControlsTable and sets the new row template (Deleting all rows and headers is easier to implement than replacing the rows and filling them with new data. IDCs could overflow etc.).", "example": "_control ctSetRowTemplate _configPath;", "local": true}, "lineIntersectsObjs": {"syntax": "lineIntersectsObjs [begPos, endPos, withObj, ignoreObj, sortByDistance, flags]", "server": true, "broadcasted": false, "description": "Returns list of objects intersected by given line from begPos to endPos.", "example": "Sto = []; Fn = { { Sto set [_foreachindex,lineIntersectsObjs [(eyePos player),(ATLtoASL screenToWorld [0.5,0.5]),objNull,objNull,false,_x]]; } forEach [1,2,4,8,16,32]; hintSilent format [\" ONLY_WATER:\u00a0%1, NEAREST_CONTACT:\u00a0%2, ONLY_STATIC:\u00a0%3, ONLY_DYNAMIC:\u00a0%4, FIRST_CONTACT:\u00a0%5, ALL_OBJECTS:\u00a0%6\", Sto select 0,Sto select 1,Sto select 2,Sto select 3,Sto select 4,Sto select 5]; }; [\"sample_id\",\"onEachFrame\",\"Fn\"] call BIS_fnc_addStackedEventHandler; //Example display objects' array in the middle of the screen sorted by 6 flags", "local": false}, "BIS_fnc_moveAction": {"syntax": "[unit, returnConfig] call BIS_fnc_moveAction", "server": false, "broadcasted": false, "description": "Return current move action (used in playAction, playActionNow and switchAction)", "example": "_actionName = [player, false] call BIS_fnc_moveAction; _actionConfig = [player, true] call BIS_fnc_moveAction;", "local": false}, "BIS_fnc_VRTimer": {"syntax": "colour call BIS_fnc_VRTimer", "server": false, "broadcasted": false, "description": "Timer for VR and time trials. The following variables can be used:", "example": "call BIS_fnc_VRTimer;", "local": false}, "setVehicleCargo": {"syntax": "vehicle setVehicleCargo cargo", "server": false, "broadcasted": false, "description": "Load cargo vehicle inside vehicle if possible, returns bool based on whether the vehicle was able to be loaded. Can also be used to unload a specific loaded vehicle or all loaded vehicles.", "example": "Blackfish with no vehicle cargo loaded _success = blackfish setVehicleCargo offroad; //true", "local": false}, "BIS_fnc_isCurator": {"example": "player call BIS_fnc_isCurator;", "server": false, "broadcasted": false, "local": false, "description": "Return if given object is curator logic."}, "set3DENAttributes": {"syntax": "set3DENAttributes [[<entities1>,<class1>,<value1>], ..., [<entitiesN>,<classN>,<valueN>]]", "server": false, "broadcasted": false, "description": "Set entity attributes.", "example": "set3DENAttributes [[get3DENSelected \"Object\",\"ControlMP\",true ]]; Set all selected objects as playable", "local": false}, "BIS_fnc_sortAlphabetically": {"syntax": "arrayOfStrings call BIS_fnc_sortAlphabetically", "server": false, "broadcasted": false, "description": "Alphabetically sort an array of strings without modifying the original. See also sort.", "example": "_sortedNames = [\"John\", \"Jane\", \"Julia\", \"Geronimo\"] call BIS_fnc_sortAlphabetically; // will return [\"Geronimo\", \"Jane\", \"John\", \"Julia\"]", "local": false}, "rainbow": {"syntax": "rainbow", "server": false, "broadcasted": false, "description": "Returns the current rainbow intensity.", "example": "_intensity = rainbow;", "local": false}, "addSecondaryWeaponItem": {"syntax": "unit addSecondaryWeaponItem item", "server": false, "broadcasted": true, "description": "Adds weapon item to the weapon cargo space. This is used for infantry weapons.", "example": "player addSecondaryWeaponItem \"muzzle_snds_L\";", "local": true}, "taskAlwaysVisible": {"syntax": "taskAlwaysVisible task", "server": false, "broadcasted": false, "description": "Returns true if the task is flagged to be always visible or false if not.", "example": "_isAlwaysVisible = taskAlwaysVisible (currentTask player);", "local": false}, "set3DENAttribute": {"syntax": "entity set3DENAttribute [class, value]", "server": false, "broadcasted": false, "description": "Set one of entity attributes.", "example": "player set3DENAttribute [\"allowDamage\",false ]; Mark player as invincible", "local": false}, "itemCargo": {"syntax": "itemCargo box", "server": true, "broadcasted": false, "description": "Get array with items from ammo box (or any general weapon holder container).", "example": "hint str itemCargo vestContainer player;", "local": false}, "animatePylon": {"syntax": "vehicle animatePylon [pylon name/index, anim phase]", "server": false, "broadcasted": false, "description": "Force animation of pylon to given state, -1 for reset to engine handling, can cause weapon inoperative, because weapon is released when pylon state =1.", "example": "(vehicle player) animatePylon [1, 0.5];", "local": false}, "BIS_fnc_showCuratorFeedbackMessage": {"syntax": "[curator, messageInfo] call BIS_fnc_showCuratorFeedbackMessage;", "server": false, "broadcasted": false, "description": "Show feedback message when illegal operation is attempted in curator interface.", "example": "[objNull, 404] call BIS_fnc_showCuratorFeedbackMessage;", "local": false}, "independent": {"syntax": "independent", "server": false, "broadcasted": false, "description": "Pre-defined variable for the independent side.", "example": "SQF:if ((side _unit) == independent) then { hint \"This is a independent unit!\"; };", "local": false}, "edit3DENMissionAttributes": {"syntax": "edit3DENMissionAttributes section", "server": false, "broadcasted": false, "description": "Open a window with scenario attribute in given section.", "example": "edit3DENMissionAttributes \"Multiplayer\";", "local": false}, "enableAudioFeature": {"syntax": "enableAudioFeature [feature, enable]", "server": false, "broadcasted": false, "description": "Enable/disable an audio feature, features are: \"lowpass\", \"building_interior\". Return previous state", "example": "prevState = enableAudioFeature [\"lowpass\", true];", "local": false}, "BIS_fnc_endLoadingScreen": {"syntax": "screenId call BIS_fnc_endLoadingScreen", "server": false, "broadcasted": false, "description": "Unregister a loading screen. When none other remains, end the loading.", "example": "[\"myLoadingScreen\", \"Loading\u2026 wait for my splendid\u2122 mission!\"] call BIS_fnc_startLoadingScreen; uiSleep 3; \"myLoadingScreen\" call BIS_fnc_endLoadingScreen;", "local": false}, "enableSatNormalOnDetail": {"syntax": "enableSatNormalOnDetail state", "server": false, "broadcasted": false, "description": "Enables/Disables satellite normal map od detail maps.", "example": "enableSatNormalOnDetail true;", "local": false}, "fogParams": {"syntax": "fogParams", "server": false, "broadcasted": false, "description": "A getter for setFog (Alt Syntax). Returns extended params for the fog", "example": "_fog = fogParams", "local": false}, "isDLCAvailable": {"syntax": "isDLCAvailable appid", "server": false, "broadcasted": false, "description": "Returns true if the DLC is marked as available. (Steam)", "example": "_Karts = 288520; isDLCAvailable _Karts;//Returns true", "local": false}, "BIS_fnc_moduleZoneRestriction": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_isInsideArea": {"syntax": "[center, size, position ] call BIS_fnc_isInsideArea", "server": false, "broadcasted": false, "description": "Detects whether a position is within a square area of given size about center.", "example": "_center = getPos player; _size = [ 5, 5 ]; _checkPos = getPos player; //Check an area, centered on the player that is 10m wide and 10m tall _inArea = [ _center, _size, _checkPos ] call BIS_fnc_isInsideArea;", "local": false}, "BIS_fnc_addVirtualItemCargo": {"syntax": "[object,itemClasses,addItemsGlobal,arsenal] call BIS_fnc_addVirtualItemCargo", "server": false, "broadcasted": false, "description": "Add virtual items to an object (e.g., ammo box). Virtual items can be selected in the Arsenal.", "example": "[ BIS_ammoBox, [\"class_1\",\"class_2\"], false, true ] call BIS_fnc_addVirtualItemCargo;", "local": false}, "current3DENOperation": {"syntax": "current3DENOperation", "server": false, "broadcasted": false, "description": "Returns the currently performed editing operation in Eden Editor.", "example": "if (current3DENOperation == \"Move\") then {hint \"Moving\";};", "local": false}, "ctrlSetPixelPrecision": {"syntax": "controlName ctrlSetPixelPrecision mode", "server": false, "broadcasted": false, "description": "Enable or disable pixel precision (rounding) in a given control interface.", "example": "_control ctrlSetPixelPrecision 2; // Enables pixel precision of the given control", "local": false}, "removeHandgunItem": {"syntax": "unit removeHandgunItem item", "server": false, "broadcasted": true, "description": "Removes given weapon item from the handgun weapon cargo space.", "example": "player removeHandgunItem \"muzzle_snds_L\";", "local": true}, "BIS_fnc_getCloudletParams": {"syntax": "[cfgCloudletClass] call BIS_fnc_getCloudletParams", "server": false, "broadcasted": false, "description": "Return particle params of CfgCloudlets class.", "example": "[\"AmmoLightSmokeParticles\"] call BIS_fnc_getCloudletParams;", "local": false}, "isAutotest": {"syntax": "isAutotest", "server": false, "broadcasted": false, "description": "Returns true if game was started with autotest parameter", "example": "_bool = isAutotest", "local": false}, "BIS_fnc_VRFadeOut": {"syntax": "call BIS_fnc_VRFadeOut", "server": false, "broadcasted": false, "description": "Fade Out effect for VR.", "example": "call BIS_fnc_VRFadeOut;", "local": false}, "BIS_fnc_moduleMissionName": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_effectFiredSmokeLauncher_boat": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/*ArmA 2 smokscreen, by Maddmatt Uses code from VBS2 Smoke launcher by Philipp Pilhofer (raedor) & Andrew Barron */"}, "BIS_fnc_diagHit": {"syntax": "call BIS_fnc_diagHit", "server": false, "broadcasted": false, "description": "Tracks received wounds. (getNumber (missionConfigFile >> \"diagHit\") > 0) has to be true.", "example": "call BIS_fnc_diagHit;", "local": false}, "setFeatureType": {"syntax": "object setFeatureType type", "server": true, "broadcasted": false, "description": "Enable/disable object as a feature/landmark. Possible feature types:", "example": "Set a building to be always rendered: building setFeatureType 2;", "local": false}, "BIS_fnc_progressLoadingScreen": {"syntax": "[progress] call BIS_fnc_progressLoadingScreen", "server": false, "broadcasted": false, "description": "Progress scripted loading screen. The value will be preserved even when a new screen is opened.", "example": "_IDD = _prog = [0.75] call BIS_fnc_progressLoadingScreen;", "local": false}, "flagTexture": {"syntax": "flagTexture flagCarrier", "server": true, "broadcasted": false, "description": "Returns texture of the local instance of the flag. A getter for setFlagTexture. It will not return flag textures applied using forceFlagTexture, use getForcedFlagTexture for that.", "example": "_flagTexture = flagTexture _flag1;", "local": false}, "move3DENCamera": {"syntax": "move3DENCamera [position,useOffset]", "server": false, "broadcasted": false, "description": "Moves Eden Editor camera to given position, with or without offset.", "example": "move3DENCamera [ getPos player,true];", "local": false}, "BIS_fnc_moduleObjectiveMove": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "groupFromNetId": {"syntax": "groupFromNetId id", "server": false, "broadcasted": false, "description": "Get group with given unique ID. For objects use objectFromNetId. As this command is MP only, you can use BIS_fnc_groupFromNetId, which extends the use to SP as well.", "example": "_group = groupFromNetId \"4:45\";", "local": false}, "magazinesDetailVest": {"syntax": "magazinesDetailVest unit", "server": false, "broadcasted": false, "description": "Returns an array with the type names of all the unit's vest magazines.", "example": "magazinesDetailVest player", "local": false}, "difficultyOption": {"syntax": "difficultyOption optionName", "server": false, "broadcasted": false, "description": "Checks specific difficulty settings of the current user. Difficulty flag names can be found in the CfgDifficultyPresets config class or in ArmA profile file under class DifficultyPresets/xxx/Options (xxx being Recruit, Regular or Veteran).", "example": "hint str (difficultyOption \"friendlyTags\");", "local": false}, "addWeaponItem": {"syntax": "unit addWeaponItem [weaponName, itemName]", "server": false, "broadcasted": true, "description": "Adds a weapon item to the specified weapon. The item can be weapon magazine, in which case the amount of ammo and target muzzle could also be specified.", "example": "player addWeaponItem [\"arifle_MX_GL_ACO_F\", \"1Rnd_HE_Grenade_shell\"];", "local": true}, "params": {"syntax": "params [element1, element2,...elementN]", "server": false, "broadcasted": false, "description": "Parses input argument into array of private variables. When used without argument, as shown in main syntax, internal variable _this, which is usually available inside functions and event handlers, is used as argument.", "example": "[1, 2, 3] call { private [\"_one\", \"_two\", \"_three\"]; _one = _this select 0; _two = _this select 1; _three = _this select 2; // ..... }; // Same as above, only using params [1, 2, 3] call { params [\"_one\", \"_two\", \"_three\"]; // ..... };", "local": false}, "setHitIndex": {"syntax": "vehicle setHitIndex [hitPartIndex, damage, useEffects]", "server": false, "broadcasted": true, "description": "Set the current level of damage for a specific Hit Point (specified by its hit part index). All hit points can be obtained with getAllHitPointsDamage command.", "example": "vehicle player setHitIndex [1, 1];", "local": true}, "tvExpand": {"syntax": "tvExpand [idc, path]", "server": false, "broadcasted": false, "description": "Expands tree item pointed to by the path. IDC means id of parent Tree View.", "example": "tvExpand [101, [0]];", "local": true}, "BIS_fnc_effectFiredFlares": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/*ArmA 2 flares, by Maddmatt */"}, "ctRowCount": {"syntax": "Number = ctRowCount Control", "server": false, "broadcasted": false, "description": "Returns number of rows (headers not included) in the RscControlsTable.", "example": "ctRowCount _control;", "local": true}, "getConnectedUAV": {"syntax": "getConnectedUAV unit", "server": false, "broadcasted": false, "description": "Returns UAV if unit has connection to some UAV.", "example": "getConnectedUAV player;", "local": false}, "BIS_fnc_moduleSector": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Initialize a sector module. Can be also used to get sector parameters. --- Get all sectors --- Parameter(s): 0: BOOL Returns: ARRAY of OBJECTs --- Get number of sectors held by a side --- Parameter(s): 0: SIDE Returns: NUMBER - number of sectors owned by the side --- Set sector owner --- Parameter(s): 0: OBJECT - sector module 1: SIDE Returns: BOOL --- Initialize --- Parameter(s): 0: OBJECT - sector module Returns: NOTHING */"}, "BIS_fnc_wpRelax": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "BIS_fnc_enableSaving": {"syntax": "id call BIS_fnc_enableSaving", "server": false, "broadcasted": false, "description": "Controls the enabling of saving. Will only enable saving if there are no remaining requests for disabled saving.", "example": "\"savingID\" call BIS_fnc_enableSaving;", "local": false}, "vest": {"syntax": "vest unit", "server": true, "broadcasted": false, "description": "Returns name of vest.", "example": "_myVest = vest player;", "local": false}, "nearestTerrainObjects": {"syntax": "nearestTerrainObjects [position, types, radius, sort, 2Dmode]", "server": false, "broadcasted": false, "description": "Returns a list of nearest terrain objects of the given types to the given position or object, within the specified distance. If more than one object is found they will be ordered according to 3D distance to the object (i.e. the closest one will be first in the array). In contrast to nearestObjects this command returns terrain placed objects like trees, rocks and buildings which don't necessarily need an associated config class.", "example": "nearestTerrainObjects [player, [\"Tree\",\"Bush\"], 200];", "local": false}, "pixelGridNoUIScale": {"syntax": "pixelGridNoUIScale", "server": false, "broadcasted": false, "description": "Returns grid size based on screen resolution and configs: uiScaleFactor, uiScaleMaxGrids As mentioned in the name of this command, the user interface scale is ignored.", "example": "_gridHeightNoUIScale = pixelH * pixelGridNoUIScale;", "local": false}, "tvSetPictureRight": {"syntax": "tvSetPictureRight [idc, path, name]", "server": false, "broadcasted": false, "description": "Sets right picture on the tree view item defined by path", "example": "tvSetPictureRight [101, [0], \"picture\"];", "local": false}, "pixelGrid": {"syntax": "pixelGrid", "server": false, "broadcasted": false, "description": "Returns grid size based on screen resolution, UI size and configs: uiScaleFactor, uiScaleMaxGrids.", "example": "_gridHeight = pixelH * pixelGrid;", "local": false}, "BIS_fnc_functionMeta": {"syntax": "fncName call BIS_fnc_functionMeta", "server": false, "broadcasted": false, "description": "Returns function's meta data.", "example": "\"BIS_fnc_functionMeta\" call BIS_fnc_functionMeta;", "local": false}, "pitch": {"syntax": "pitch person", "server": false, "broadcasted": false, "description": "Returns the pitch of a persons voice.", "example": "pitch player", "local": false}, "BIS_fnc_taskChildren": {"syntax": "taskID call BIS_fnc_taskChildren", "server": false, "broadcasted": false, "description": "Return a task's sub-tasks.", "example": "\"task_1\" call BIS_fnc_taskChildren;", "local": false}, "removeCuratorAddons": {"syntax": "curatorObj removeCuratorAddons addons", "server": false, "broadcasted": false, "description": "Restrict curator use of given addons.", "example": "curatorModule removeCuratorAddons [addon1,addon2]", "local": false}, "forcedMap": {"syntax": "forcedMap", "server": false, "broadcasted": false, "description": "Returns if map was forced by using forceMap command or openMap command with force option", "example": "_forceMapForced = forcedMap select 0; _openMapForced = forcedMap select 1;", "local": false}, "BIS_fnc_getRespawnPositions": {"syntax": "input call BIS_fnc_getRespawnPositions", "server": false, "broadcasted": false, "description": "Return scripted respawn positions available for the given unit.", "example": "_respawnPositions = missionNamespace call BIS_fnc_getRespawnPositions;", "local": false}, "curatorCameraAreaCeiling": {"syntax": "curatorCameraAreaCeiling curatorObj", "server": false, "broadcasted": false, "description": "Returns ceiling height for curator camera.", "example": "curatorCameraAreCeiling BIS_curatorUnit;", "local": false}, "setCenterOfMass": {"syntax": "myObject setCenterOfMass [com, time]", "server": false, "broadcasted": true, "description": "Changes the center of mass of an object smoothly during the given time (in seconds). A time of zero (or using the alternative syntax) means an immediate change.", "example": "myObject setCenterOfMass [[0,-1,0],0.5];", "local": true}, "BIS_fnc_VRCourseCommandingMovement1": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "logNetworkTerminate": {"syntax": "logNetworkTerminate handle", "server": false, "broadcasted": false, "description": "Terminates a network log file started with logNetwork with the given handle", "example": "logNetworkTerminate _someHandle;", "local": false}, "displayParent": {"syntax": "displayParent display", "server": false, "broadcasted": false, "description": "Returns parent display of the given display.", "example": "_display = displayParent findDisplay 49; // Display #46", "local": false}, "getArtilleryComputerSettings": {"syntax": "getArtilleryComputerSettings", "server": false, "broadcasted": false, "description": "Returns settings from artillery computer currently opened by player.", "example": "hint str getArtilleryComputerSettings; //[\"Semi (medium)\",\"HE Mortar Shells\",0]", "local": false}, "BIS_fnc_loadClass": {"syntax": "[input, defaultValue] call BIS_fnc_loadClass", "server": false, "broadcasted": false, "description": "Searches for class in mission, campaign and then in global config file.", "example": "[ [\"bin\\config.bin\"], configFile >> \"Cfg3DEN\" >> \"Camera\"] call BIS_fnc_loadClass", "local": false}, "freeLook": {"syntax": "freeLook", "server": false, "broadcasted": false, "description": "Returns true if freelook is active.", "example": "systemChat (if freeLook then {\"Quit looking around player!\"} else {\"\"});", "local": false}, "canVehicleCargo": {"syntax": "vehicle canVehicleCargo cargo", "server": false, "broadcasted": false, "description": "Returns bool array if it is possible to load cargo inside vehicle and if possible to load cargo into empty vehicle", "example": "Blackfish with no vehicle cargo loaded _result = blackfish canVehicleCargo offroad; //[true, true]", "local": false}, "currentMagazineTurret": {"syntax": "vehicle currentMagazineTurret [turret path]", "server": false, "broadcasted": false, "description": "Returns the name of the type of the currently using magazine on specified turret. Use turret path [-1] for driver's turret. Note that a turret is not loaded until unit enters it, so this command will return \"\".", "example": "_magazine = MBT_Kuma currentMagazineTurret [0];", "local": false}, "itemsWithMagazines": {"syntax": "itemsWithMagazines unit", "server": true, "broadcasted": false, "description": "Returns combined array including all unit's items and all unit's magazines. Loaded magazines such as currentMagazine, primaryWeaponMagazine, secondaryWeaponMagazine, handgunMagazine as well as assignedItems are excluded.", "example": "itemsWithMagazines player //is essentially the same as items player + magazines player [ \"FirstAidKit\", //item \"30Rnd_65x39_caseless_mag\", //magazine \"16Rnd_9x21_Mag\", //magazine \"Chemlight_green\", //magazine \"HandGrenade\", //magazine \"ToolKit\", //item \"MineDetector\" //item ]", "local": false}, "ropeAttachTo": {"syntax": "[veh, toPoint, ropeEndDownDir] ropeAttachTo rope", "server": false, "broadcasted": false, "description": "Attach vehicle to rope with optional offset", "example": "[veh1,[0,0,0],[0,0,-1]] ropeAttachTo (ropes heli1 select 0);", "local": false}, "BIS_fnc_respawnMenuPosition": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "setDriveOnPath": {"syntax": "vehicleName setDriveOnPath points", "server": false, "broadcasted": false, "description": "Sets the path to follow for AI driver. Note that unitReady will return true even if AI is still driving through the points.", "example": "myVehicle setDriveOnPath [getMarkerPos \"wp1\", getMarkerPos \"wp2\"];", "local": false}, "ropeAttachEnabled": {"syntax": "ropeAttachEnabled vehicle", "server": false, "broadcasted": false, "description": "Returns true if vehicle can be attached to ropes", "example": "ropeAttachEnabled veh1;", "local": false}, "BIS_fnc_execFSM": {"syntax": "filename call BIS_fnc_execFSM;", "server": false, "broadcasted": false, "description": "Execute the scripted FSM. Shell for execFSM command", "example": "_handle = [[_param1, _param2, etc..], \"test.fsm\"] call BIS_fnc_execFSM;", "local": false}, "setDynamicSimulationDistanceCoef": {"syntax": "class setDynamicSimulationDistanceCoef multiplier", "server": false, "broadcasted": false, "description": "Sets activation distance multiplier of Arma_3_Dynamic_Simulation for the given class", "example": "\"IsMoving\" setDynamicSimulationDistanceCoef 3;", "local": false}, "inPolygon": {"syntax": "position inPolygon polygon", "server": false, "broadcasted": false, "description": "Checks whether position is inside given polygon", "example": "_isInside = [100,100,0] inPolygon [[0,0,0],[1000,1000,0],[1000,0,0]];", "local": false}, "addItemToBackpack": {"syntax": "unit addItemToBackpack item", "server": true, "broadcasted": true, "description": "Create new item and store it to soldier's backpack. The item can also be a weapon or a magazine.", "example": "player addItemToBackpack \"arifle_MXM_Hamr_pointer_F\";", "local": false}, "isBleeding": {"syntax": "isBleeding unit", "server": false, "broadcasted": false, "description": "Returns whether the unit is bleeding.", "example": "if (isBleeding player) then { player groupChat \"I'm bleeding!!\"; }", "local": false}, "BIS_fnc_locWeaponInfo": {"syntax": "call BIS_fnc_locWeaponInfo", "server": false, "broadcasted": false, "description": "Shows a utility tool checking length of weapon info texts.", "example": "call BIS_fnc_locWeaponInfo;", "local": false}, "selectRandomWeighted": {"syntax": "selectRandomWeighted valuesAndWeights", "server": false, "broadcasted": false, "description": "Returns a random element from the given array according to assigned weights. Engine solution to BIS_fnc_selectRandomWeighted. A few notes:", "example": "_randomWeightedElement = selectRandomWeighted [1,0.1,2,0.2,3,1.3,4,2.4,5,7.5];", "local": false}, "setShotParents": {"syntax": "projectile setShotParents [vehicle, instigator]", "server": true, "broadcasted": true, "description": "Sets vehicle and instigator pair for the given projectile.", "example": "myProjectile setShotParents [vehicle bob, bob];", "local": false}, "BIS_fnc_moduleCuratorAddEditingArea": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "skillFinal": {"syntax": "unit skillFinal skillName", "server": false, "broadcasted": false, "description": "Returns final, recalculated sub skill value of given unit. (with regard to AI Level coefficient (Difficulty settings)).", "example": "_unitTrueCourage = unit1 skillFinal \"courage\";", "local": false}, "isTurnedOut": {"syntax": "isTurnedOut unit", "server": false, "broadcasted": false, "description": "Returns true if given unit is turned out, otherwise false. The output changes to true after unit finished turning out, however will change to false almost immediately after unit is ordered to turn in.", "example": "_commanderOut = isTurnedOut (tank turretUnit [0,0]);", "local": false}, "objectFromNetId": {"syntax": "objectFromNetId id", "server": false, "broadcasted": false, "description": "Get object with given unique ID. If object is a group use groupFromNetId. As this command is MP only, you can use BIS_fnc_objectFromNetId, which extends the use to SP as well.", "example": "objectFromNetId \"2:3\"", "local": false}, "getClientStateNumber": {"syntax": "getClientStateNumber", "server": false, "broadcasted": false, "description": "Returns client state in network game. Works on both, client and dedicated server. The following states are possible:", "example": "_state = getClientStateNumber;", "local": false}, "BIS_fnc_cinemaBorder": {"syntax": "[mode, duration, sound, view] call BIS_fnc_cinemaBorder", "server": false, "broadcasted": false, "description": "Creates cinematic borders. Player cannot move during cutscene.", "example": "[1, 2, true, true ] call BIS_fnc_cinemaBorder;", "local": false}, "uniform": {"syntax": "uniform unit", "server": true, "broadcasted": false, "description": "Returns name of uniform.", "example": "_uniform = uniform _unit", "local": false}, "getRemoteSensorsDisabled": {"syntax": "getRemoteSensorsDisabled", "server": false, "broadcasted": false, "description": "Get status of disabled raycasts for remote entities. See disableRemoteSensors for detailed description.", "example": "_status = getRemoteSensorsDisabled;", "local": false}, "BIS_fnc_bleedTickets": {"syntax": "[[WEST,EAST,RESISTANCE,CIVILIAN], 0.5, 3, 5] call BIS_fnc_bleedTickets;", "server": false, "broadcasted": false, "description": "Function that handles bleeding ticket system. Tickets are set beforehand using BIS_fnc_respawnTickets.", "example": "[] call BIS_fnc_bleedTickets; // Uses all default values to start the system.", "local": false}, "BIS_fnc_moduleWeather": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Set overcast and fog Parameter(s): 0: STRING - mode, can be one of following \"enableDelay\" - enable delayed activation (i.e., weather changes are not applied manually and have to be confirmed by mission) 1: BOOL - true to enbale, false to disable Returns: Nothing \"isDelayEnabled\" Returns: true if delayed activation is enabled, otherwise false \"commit\" - apply weather changes Returns: Nothing */"}, "tvSetData": {"syntax": "tvSetData [idc, [path], data]", "server": false, "broadcasted": false, "description": "Sets string data to item on given path. IDC means id of parent Tree View.", "example": "tvSetData [101, [0], \"Test data\"];", "local": true}, "BIS_fnc_tridentHandleDamage": {"syntax": "object call BIS_fnc_tridentHandleDamage", "server": false, "broadcasted": false, "description": "Register a unit as Trident unit. When competing sides are still friendly and the unit is killed by the competing side, the killer won't be punsihed by negative score. Instead, Trident relationship will decrease.", "example": "BIS_tridentObject call BIS_fnc_tridentHandleDamage;", "local": false}, "waypointForceBehaviour": {"syntax": "waypointForceBehaviour waypoint;", "server": false, "broadcasted": false, "description": "Returns true if the waypoint behavior is forced.", "example": "_isForced = waypointForceBehaviour [groupOne, 1];", "local": false}, "vectorCrossProduct": {"syntax": "vector1 vectorCrossProduct vector2", "server": false, "broadcasted": false, "description": "Cross product of two 3D vectors.", "example": "_vector = [1,1,1] vectorCrossProduct [2,2,2];", "local": false}, "didJIPOwner": {"syntax": "didJIPOwner object", "server": false, "broadcasted": false, "description": "Checks if the current owner of supplied Object Joined In Progress. Server execution only. On clients returns false.", "example": "ownerDidJip = didJIPOwner tank;", "local": false}, "setPosASLW": {"syntax": "obj setPosASLW pos", "server": true, "broadcasted": true, "description": "Sets the object position above sea surface. The pos array uses the PositionASLW format.", "example": "_diver setPosASLW [(position _diver) select 0, (position _diver) select 1, -10];", "local": false}, "BIS_fnc_moduleHandle": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "ctSetData": {"syntax": "ctrl ctSetData [index, data]", "server": false, "broadcasted": false, "description": "Associates metadata (string) with the row determined by the index. Returns Nothing.", "example": "_control ctSetData [0, \"Test\"];", "local": true}, "BIS_fnc_updatePlayerArray": {"syntax": "[input] call BIS_fnc_updatePlayerArray", "server": false, "broadcasted": false, "description": "Updates dead player objects to their current respawned objects.", "example": "_newPlayerObjects = _oldPlayerObjects call BIS_fnc_updatePlayerArray;", "local": false}, "addTorque": {"syntax": "object addTorque torque", "server": true, "broadcasted": true, "description": "Applies torque (rotation momentum) to the center of mass of the given object. Torque force is defined as vector [x, y, z] applied in world space. If you need to define torque in model space, convert the torque vector first by vectorModelToWorld or vectorModelToWorldVisual command. The torque applied as impulse. Diagram below explain which way the object would rotate. For more information see NVIDIA docs", "example": "Apply torque [1000,0,0] to object not factoring object positioning: _wheel addTorque [1000,0,0];", "local": false}, "BIS_fnc_moduleRemoteControl": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "BIS_fnc_VRDrawBorder": {"syntax": "[center, radius] call BIS_fnc_VRDrawBorder", "server": false, "broadcasted": false, "description": "Visualizes area border (used primarily for VR missions).", "example": "[ [0,0,0], 200 ] call BIS_fnc_VRDrawBorder;", "local": false}, "BIS_fnc_radialRedOut": {"syntax": "call BIS_fnc_radialRedOut", "server": false, "broadcasted": false, "description": "Removes red radial postprocess (fire damage) created by BIS_fnc_radialRed.", "example": "call BIS_fnc_radialRedOut;", "local": false}, "set3DENMissionAttributes": {"syntax": "set3DENMissionAttributes [[<section>,<class1>,<value1>], ..., [<section >,<classN>,<valueN>]]", "server": false, "broadcasted": false, "description": "Set scenario attributes.", "example": "set3DENMissionAttributes [[\"Multiplayer\",\"respawn\",3],[\"Multiplayer\",\"respawnDelay\",10]]; Set respawn type to 3 and respawn delay to 10 seconds", "local": false}, "BIS_fnc_saveInventory": {"syntax": "[unit,input,params,delete] call BIS_fnc_saveInventory", "server": false, "broadcasted": false, "description": "Save unit's loadout.", "example": "[ player, [ missionNamespace, \"BIS_inv\"], [], true ] call BIS_fnc_saveInventory;", "local": false}, "removeItemFromVest": {"syntax": "unit removeItemFromVest item", "server": true, "broadcasted": true, "description": "Removes item from soldier's vest.", "example": "Example needed", "local": false}, "BIS_fnc_moduleTTCPIn": {"syntax": "-", "server": false, "broadcasted": false, "description": "\u26a0", "example": "-", "local": false}, "currentNamespace": {"syntax": "currentNamespace", "server": false, "broadcasted": false, "description": "Returns current global namespace the script runs in.", "example": "if (currentNamespace isEqualTo uiNamespace) then {hint \"This is uiNamespace\"};", "local": false}, "weaponLowered": {"syntax": "weaponLowered unit", "server": false, "broadcasted": false, "description": "True if given soldier's weapon is lowered.", "example": "isWeaponLowered = weaponLowered player;", "local": false}, "enableVehicleSensor": {"syntax": "vehicle enableVehicleSensor [componentName, state]", "server": false, "broadcasted": false, "description": "Enable/disable given sensor", "example": "vehicle player enableVehicleSensor [\"PassiveRadarSensorComponent\",false]; // disables passive radar", "local": false}, "BIS_fnc_ORBATSetGroupParams": {"syntax": "[IDType, size, type, side, name, shortName, texture, textSizeCoef, insignia, textColour, commName, commRank, description, assets] call BIS_fnc_ORBATSetGroupParams", "server": false, "broadcasted": false, "description": "Overrides group params from CfgORBAT. See ORBAT Viewer for a detailed explaination.", "example": "[ 1, \"Platoon\", \"Infantry\", \"West\", \"Name:\u00a0%1\u00a0%2\u00a0%3\", \"Short Name:\u00a0%1\u00a0%2\u00a0%3\", \"b_air\", 3, \"\\A3\\Air_F_EPB\\Heli_Light_03\\data\\UI\\Heli_Light_03_CA.paa\", [0,0,0,1], \"Commander Name\", \"General\", \"Description\", [ [\"B_MRAP_01_F\",5] ] ] call BIS_fnc_ORBATAddGroupOverlay;", "local": false}, "admin": {"syntax": "admin ownerID", "server": false, "broadcasted": false, "description": "This is dedicated server command, which queries the admin state of any client on the network by their client (owner) id. Possible results are:", "example": "_isLoggedInAdmin = admin 3 == 2;", "local": false}, "BIS_fnc_initCuratorAttribute": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "setUnloadInCombat": {"syntax": "vehicle setUnloadInCombat [allowCargo, allowTurrets]", "server": false, "broadcasted": true, "description": "If cargo or turret units should get out of vehicle when in combat. If true, vehicle will stop and units will dismount. Vehicle must be local.", "example": "_veh setUnloadInCombat [true, false];", "local": true}, "BIS_fnc_showAANArticle": {"syntax": "[arrayOfArrays, display, fade] call BIS_fnc_showAANArticle", "server": false, "broadcasted": false, "description": "Show AAN article", "example": "[ [ [\"title\",\"My Title\"], [\"meta\",[\"Katherine Bishop\",[2035,2,24,11,38],\"CET\"]], [\"textbold\",\"This is a bold text\"], [\"image\",[\"\\a3\\Missions_F_Orange\\Data\\Img\\orange_overview_ca.paa\",\"Some image description\"]], [\"box\",[\"\\a3\\Missions_F_Orange\\Data\\Img\\Faction_IDAP_overview_CA.paa\",\"You won't believe how playing Showcase Laws of War can change your life!\"]], [\"text\",\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi tincidunt pretium ultricies. Etiam ac ornare est, quis posuere nisl. Mauris facilisis lectus eu turpis maximus consequat. Donec ut metus nec risus tristique mattis. Ut posuere rutrum tellus, ut molestie orci mattis id. Cras ultrices euismod diam, in venenatis nunc commodo eget. Interdum et malesuada fames ac ante ipsum primis in faucibus. Morbi congue dolor rutrum lectus euismod, ac faucibus magna molestie. Aliquam in libero sit amet eros sagittis tristique. Nam pellentesque dignissim aliquam.\"], [\"textlocked\",[\"Sed non est risus. Nulla condimentum at leo sed bibendum. Phasellus laoreet sit amet leo tincidunt consequat. Curabitur nec hendrerit purus. Nam massa nisi, mattis in aliquet consectetur, ornare eget nibh. Nunc dignissim, nibh sit amet ultrices tincidunt, mi nulla fermentum quam, non condimentum dolor eros vulputate massa.\",\"SUBSCRIBE PLZ\"]], [\"author\",[\"\\a3\\Missions_F_Orange\\Data\\Img\\avatar_journalist_ca.paa\",\"Katherine Bishop is a journalist\"]] ] ] call bis_fnc_showAANArticle;", "local": false}, "allAirports": {"syntax": "allAirports", "server": false, "broadcasted": false, "description": "Returns all map airports, both static and dynamic", "example": "_allAirports = allAirports;", "local": false}, "BIS_fnc_moduleMPTypeGameMaster": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "setUserMFDText": {"syntax": "vehicle setUserMFDText [index, value]", "server": false, "broadcasted": false, "description": "Stored user text value in MFD, limit is 50, user0...user49", "example": "_vehicle setUserMFDText [0, 123];", "local": false}, "hideSelection": {"syntax": "object hideSelection [selection, hidden];", "server": false, "broadcasted": true, "description": "Hides or enables the given selection for the object", "example": "BIS_vehicle hideSelection [ \"someSelection\", true ];", "local": true}, "enableDynamicSimulationSystem": {"syntax": "enableDynamicSimulationSystem enable", "server": false, "broadcasted": false, "description": "Enables or disables the whole Arma_3_Dynamic_Simulation system", "example": "enableDynamicSimulationSystem true;", "local": false}, "BIS_fnc_tridentExecute": {"syntax": "[side_1,side_2,codeFriendly,codeEnemy] call BIS_fnc_tridentExecute", "server": false, "broadcasted": false, "description": "Execute a code based on Trident relationship.", "example": "[ west, east, {params [\"_higherScore\",\"_lowerScore\",\"_areAllied\"]}] call BIS_fnc_tridentExecute;", "local": false}, "isStreamFriendlyUIEnabled": {"syntax": "isStreamFriendlyUIEnabled", "server": false, "broadcasted": false, "description": "Returns the status of STREAM FRIENDLY UI setting in UI (OPTIONS >> GAME >> GENERAL >> STREAM FRIENDLY UI).", "example": "hint str isStreamFriendlyUIEnabled;", "local": false}, "vectorWorldToModelVisual": {"syntax": "object vectorWorldToModelVisual worldDir", "server": false, "broadcasted": false, "description": "Converts vector direction from world to model space in render time scope.", "example": "Convert world space vector [0,-10,4] to model space of object _airplane: _airplane vectorWorldToModelVisual [0,-10,4];", "local": false}, "vectorNormalized": {"syntax": "vectorNormalized vector", "server": false, "broadcasted": false, "description": "Returns normalized vector (unit vector, vectorMagnitude = 1) of given vector. If given vector is 0 result is a 0 vector as well.", "example": "vectorNormalized [12345,7890,38383]; //[0.300481,0.192045,0.934254] vectorMagnitude [0.300481,0.192045,0.934254]; //1", "local": false}, "BIS_fnc_countdown": {"syntax": "[timeInSeconds,global] call BIS_fnc_countdown", "server": false, "broadcasted": false, "description": "Triggers a countdown. Countdown can be accessed via missionNamespace variable bis_fnc_countdown_time", "example": "_countDown = [50,false] call BIS_fnc_countDown;", "local": false}, "BIS_fnc_moduleSimulationManager": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "N/A"}, "visibleCompass": {"syntax": "visibleCompass", "server": false, "broadcasted": false, "description": "Checks if the player has compass opened and visible", "example": "if (visibleCompass) then {hint \"Compass is visible\"};", "local": false}, "loadVest": {"syntax": "loadVest unit", "server": false, "broadcasted": false, "description": "Returns current sum of mass from items stored in a vest.", "example": "_weight = loadVest player", "local": false}, "underwater": {"syntax": "underwater object", "server": false, "broadcasted": false, "description": "Return whether object is fully underwater. From Arma 3 v1.66, this also works for units.", "example": "_isUnderwater = underwater player;", "local": false}, "getMissionDLCs": {"syntax": "getMissionDLCs", "server": false, "broadcasted": false, "description": "Returns list of DLCs that are used in the mission. List is created only from units listed in mission.sqm and doesn't detect units created by scripts!", "example": "_list = getMissionDLCs", "local": false}, "tvSetPicture": {"syntax": "tvSetPicture [idc, path, name]", "server": false, "broadcasted": false, "description": "Sets picture to item selected by path. IDC means id of parent Tree View. Name is picture name. The picture is searched in the mission directory.", "example": "tvSetPicture [101, [0], \"picture\"];", "local": false}, "getDescription": {"syntax": "getDescription unit", "server": false, "broadcasted": false, "description": "Returns the string representation of unit as an four slots array.", "example": "Example needed", "local": false}, "didJIP": {"syntax": "didJIP", "server": false, "broadcasted": false, "description": "Checks if the current client Joined In Progress.", "example": "clientDidJIP = didJIP;", "local": false}, "getTerrainGrid": {"syntax": "getTerrainGrid", "server": false, "broadcasted": false, "description": "Returns the current terrain grid", "example": "_terrainGrid = getTerrainGrid;", "local": false}, "BIS_fnc_respawnNone": {"syntax": "[killed,killer]] spawn BIS_fnc_respawnNone", "server": false, "broadcasted": false, "description": "Creates a death screen.", "example": "[ player, someUnit ] spawn BIS_fnc_respawnNone;", "local": false}, "BIS_fnc_selectDiarySubject": {"syntax": "[diaryName] call BIS_fnc_selectDiarySubject", "server": false, "broadcasted": false, "description": "Select diary subject. Temporary replacement for selectDiarySubject scripting command which is currently broken.", "example": "[\"someSubject\"] call BIS_fnc_selectDiarySubject;", "local": false}, "BIS_fnc_exportCfgGroups": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Export group or object composition for use in CfgGroups. The result will be copied to clipboard. Parameter(s): 0: position (for supported types see BIS_fnc_position). Screen center is used by default 1: objects to be saved. Currently selected objects in curator are used by default ARRAY of OBJECTs - specific objects to be saved array in format used by nearEntities, which automatically get nearby objects 0: STRING or ARRAY of STRINGS - object types 1: NUMBER - radius in metres Returns: STRING */"}, "BIS_fnc_diagMacrosNameSound": {"syntax": "call BIS_fnc_diagMacrosNameSound", "server": false, "broadcasted": false, "description": "Detects vehicle types and prints their radio protocol definitions to clipboard.", "example": "call BIS_fnc_diagMacrosNameSound;", "local": false}, "is3DEN": {"syntax": "is3DEN", "server": false, "broadcasted": false, "description": "Returns true if the Eden Editor is currently being used. true when inside editor environment, false during preview. (see also is3DENMultiplayer)", "example": "if is3DEN then {systemChat \"Welcome to Eden Editor!\"};", "local": false}}, "TOH": {"BIS_fnc_dbConfigPath": {"example": "Example needed", "description": "N/A"}, "ropeSetCargoMass": {"syntax": "ropeSetCargoMass [rope, cargo, mass];", "example": "ropeSetCargoMass [myRope, myCargo, 1138];", "description": "Set the simulated mass of an object attached to a rope."}, "setTrafficDensity": {"syntax": "setTrafficDensity [density, xMin, xMax, zMin, zMax]", "example": "setTrafficDensity [40, 31000, 32000, 30000, 32000];", "description": "Set the density of ambient cars in a rectangle (in cars per kilometer)."}, "BIS_fnc_shutdown": {"syntax": "call BIS_fnc_shutdown", "example": "call BIS_fnc_shutdown", "description": "Shut downs the game."}, "BIS_fnc_displayColorSet": {"syntax": "[displayClass,display,commitTime,code] call BIS_fnc_displayColorSet;", "example": "[configFile >> (GUI_classes select _foreachindex),_x] call bis_fnc_displayColorSet;", "description": "Applies custom color settings to given Display. Display must be already using color macros, function will just refresh the values according to current color settings."}, "setBrakesRTD": {"syntax": "helicopterRTD setBrakesRTD [value, wheelIndex]", "example": "myHelicopterRTD setBrakesRTD [1, 3];", "description": "Enable landing gear wheel brakes for a helicopter."}, "BIS_fnc_displayName": {"syntax": "[config] call BIS_fnc_displayName", "example": "_myDisplayName = [configFile >> \"CfgVehicles\" >> typeOf vehicle player] call BIS_fnc_displayName;", "description": "Return given class displayName value. Return base class name if displayName not defined."}, "BIS_fnc_ambientPostprocess": {"syntax": "[terrain, activation] call BIS_fnc_ambientPostprocess", "example": "[] call BIS_fnc_ambientPostprocess;", "description": "Initialize terrain-related postprocess effects."}, "BIS_fnc_paramIn": {"syntax": "See BIS_fnc_param", "example": "_array = [_this,0,[],[[]]] call BIS_fnc_param; _item = [_array,0,true,[true]] call BIS_fnc_paramIn;", "description": "See BIS_fnc_param. Overloading default values is disabled in this variant. It's intended to be used where _this is not used as an input param."}, "BIS_fnc_kbTopicConfig": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_halt": {"syntax": "[param1,param2,...,param10] call bis_fnc_halt;", "example": "[\"You are now supposed to be\u00a0%1\",rank player] call bis_fnc_halt;", "description": "Halts current function and all it's parents and logs an error message."}, "BIS_fnc_kbIsSpeaking": {"syntax": "unit call BIS_fnc_kbIsSpeaking", "example": "player call BIS_fnc_kbIsSpeaking;", "description": "Check if speaker is locked for different conversation."}, "BIS_fnc_spawnVehicle": {"syntax": "[position,direction,type,side or group] call BIS_fnc_spawnVehicle", "example": "[getPos mySpawnPos, 180, \"BMP3\", EAST] call bis_fnc_spawnvehicle", "description": "Function to spawn a certain vehicle type with all crew (including turrets). The vehicle can either become part of an existing group or create a new group."}, "BIS_fnc_credits": {"syntax": "[] spawn BIS_fnc_credits;", "example": "0 = [] spawn BIS_fnc_credits;", "description": "Opens credits, identical to those found in main menu (Arma 3). Present in Arma 3."}, "BIS_fnc_overviewTimeTrial": {"syntax": "class call BIS_fnc_overviewTimeTrial", "example": "\"BIS_someTimeTrail\" call BIS_fnc_overviewTimeTrial;", "description": "Returns the dynamically composed overview text for Time Trial scenarios."}, "BIS_fnc_helicopterSeat": {"syntax": "unit call BIS_fnc_helicopterSeat", "example": "player call BIS_fnc_helicopterSeat;", "description": "Check if unit sits on right or left seat."}, "radioChannelSetLabel": {"syntax": "index radioChannelSetLabel label", "example": "5 radioChannelSetLabel \"Q-dance Radio\";", "description": "Set the custom radio channel's label."}, "BIS_fnc_dbClassList": {"example": "Example needed", "description": "// /* Description: Returns all classes withing class. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: ARRAY - List of classnames */"}, "BIS_fnc_kbPriority": {"example": "Example needed", "description": "/* Description: Set conversation priority. Conversations with priority not in the list won't be played Parameter(s): _this: ARRAY - List of priorities. Empty array will just return current value. NUMBER >0 - add priority to already existing list <0 - remove priority from already existing list Priority 0 cannot be tempered with Returns: ARRAY - List of priorities */"}, "BIS_fnc_dbisClass": {"example": "Example needed", "description": "// /* Description: Checks if string is class definition. Parameter(s): _this select 0: STRING Returns: BOOLEAN */"}, "BIS_fnc_helicopterCanFly": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_kbCreateDummy": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_numberText": {"syntax": "[number, modulo] call BIS_fnc_numberText", "example": "[999999999999] call BIS_fnc_numberText;//Returns \"909 999 995 904\"", "description": "Convert a number into string (avoiding scientific notation). It's very imprecise with larger numbers. See example 1."}, "BIS_fnc_kbSentence": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_kbMenu": {"example": "Example needed", "description": "/* Description: Opens conversation menu. Script terminates itself when menu selection is finished. Parameter(s): _this select 0: ARRAY or STRING - List of responses (of type ARRAY) or Menu name Responses are in format: _response select 0: STRING or ANY - Display name when STRING, otherwise used as default option when menu is closed without selecting anything. _response select 1: STRING - expression ARRAY - BIS_fnc_kbTell params Returns: NUMBER - ID of select option */"}, "BIS_fnc_noFlyZonesCreate": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_KMLimport": {"syntax": "filePath call BIS_fnc_KMLimport", "example": "_data = \"subDir\\myFile.kml\" call BIS_fnc_KMLimport;", "description": "Read positions from a KML file."}, "BIS_fnc_dbClassRemove": {"example": "Example needed", "description": "/* Description: Remove class from Scripted Database. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: BOOLEAN - True if class was removed */"}, "BIS_fnc_GUIgridToProfile": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_dbClassId": {"example": "Example needed", "description": "// /* Description: Converts string to class definition. Parameter(s): _this: STRING (converts to) or _this select 0: STRING (converts from) Returns: STRING */"}, "setBatteryRTD": {"syntax": "helicopterRTD setBatteryRTD enable", "example": "(vehicle player) setBatteryRTD false;", "description": "Toggle a helicopter's electrical systems on and off."}, "BIS_fnc_overviewTerrain": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_displayColorGet": {"syntax": "[tag,variable] call BIS_fnc_displayColorGet;", "example": "[\"GUI\",\"BCG_RGB\"] call BIS_fnc_displayColorGet; Returns menu color", "description": "Loads custom color settings from CfgUIDefault. If variables are not stored in profileNamespace yet, function will declare them."}, "BIS_fnc_wpTransport": {"syntax": "arguments: none", "example": "[player,dude,100] spawn BIS_fnc_wpTransport;", "description": "TRANSPORT custom waypoint. Player must pick up group of units in their location. Get in AI pathfinding is supressed (to avoid unwanted behaviour on building roofs), units are teleported into player's vehicle instead."}, "BIS_fnc_kbTellLocal": {"syntax": "[mode, parameters] call BIS_fnc_kbTellLocal", "example": "[\"sentence\", [player, [BIS_HQ, \"myTopic\", \"playerSentence1\"]]] call BIS_fnc_kbTellLocal;", "description": "Play given sentence, disable radio and/or lower sounds. Will use BIS_fnc_showSubtitle for better effects if channel is DIRECT or VEHICLE."}, "BIS_fnc_dbSymbolClass": {"example": "Example needed", "description": "N/A"}, "ropeCreate": {"syntax": "ropeCreate [fromObject, fromPoint, toObject, toPoint, segments, length]", "example": "myRope = ropeCreate [vehicle player, \"slingload0\", myCargo, [0, 0, 0], 10]; //A3 example", "description": "Create a rope (PhysX rope in Arma 3)."}, "setWantedRPMRTD": {"syntax": "helicopterRTD setWantedRPMRTD [value, time, engineIndex]", "example": "(vehicle player) setWantedRPMRTD [2500, 30, 0];", "description": "Tell the helicopter engine RPMs to reach the given value within a period of time. The simulation will try to reach the RPMs, but it does not guarantee it will reach the precise value!"}, "BIS_fnc_wpSlingLoadAttach": {"syntax": "arguments: [posLimit,failCode,weight]", "example": "[player, dude, 50, 10, {hintC \"You lost the cargo!\"}, 1000] spawn BIS_fnc_wpSlingLoadAttach;", "description": "ATTACH SLINGLOAD custom waypoint. Load an object to rope."}, "BIS_fnc_wpAngle": {"syntax": "arguments: [circleLimit, circleBorder, circleDir, customCond, hint]", "example": "[ player, position dude, 250, 60 1, 45 {alive dude}, \"Spotted:\u00a0%1%2\" ] spawn BIS_fnc_wpAngle;", "description": "CIRCLE custom waypoint. Keep helicopter rotated in given vector toward target."}, "radioChannelRemove": {"syntax": "index radioChannelRemove units", "example": "3 radioChannelRemove [blufor_unit_1, blufor_unit_2];", "description": "Remove the units from the custom radio channel."}, "batteryChargeRTD": {"syntax": "batteryChargeRTD helicopterRTD", "example": "_charge = batteryChargeRTD (vehcle player);", "description": "Returns the current charge of a helicopter's batteries."}, "BIS_fnc_getIDD": {"syntax": "[config] call BIS_fnc_getIDD", "example": "_IDD = [ configFile >> \"display3DENPublishMissionSelectImage\" ] call BIS_fnc_getIDD;", "description": "Returns IDD of given display."}, "BIS_fnc_randomPos": {"syntax": "[whitelist, blacklist, code] call BIS_fnc_randomPos", "example": "_randomPosMapNoWater = [] call BIS_fnc_randomPos;", "description": "Selects random position according to given params within given area"}, "BIS_fnc_displayMission": {"syntax": "call BIS_fnc_displayMission", "example": "_mainDisplay = call BIS_fnc_displayMission;", "description": "Returns main display of current mission/intro/outro. A cleaner alternative to findDisplay 46."}, "BIS_fnc_overviewDifficulty": {"example": "Example needed", "description": "N/A"}, "getHitPointDamage": {"syntax": "vehicle getHitPointDamage hitPointName", "example": "(vehicle player) getHitPointDamage \"hitEngine\";", "description": "Return current level of damage for a specific Hit Point (specified by its config class). If you need to get damage of a selection instead of hit point, use getHit."}, "radioChannelCreate": {"syntax": "radioChannelCreate [color, label, callSign, units, sentenceType]", "example": "_index = radioChannelCreate [[0.96, 0.34, 0.13, 0.8], \"Q-dance Radio\", \"%UNIT_NAME\", [player1, player2]];", "description": "Create a custom radio channel with the given color, label, call sign and registered characters. The index returned can be used to manipulate the created channel later. There are 10 slots for custom radio channels which would correspond to channels 6-15 (see getPlayerChannel). The command will find an unused index in this range and create it when found. Server only."}, "BIS_fnc_randomPosTrigger": {"syntax": "param call BIS_fnc_randomPosTrigger", "example": "marker1 call BIS_fnc_randomPosTrigger;", "description": "Selects random position within trigger, marker, location area or area defined by array"}, "BIS_fnc_onLoad": {"syntax": "parameter call BIS_fnc_onLoad", "example": "_codeIndex = { hint \"Welcome back!\"; } call BIS_fnc_onLoad;", "description": "Register code to be executed after a mission load (from a save, for example)."}, "BIS_fnc_MP (Take On Helicopters)": {"syntax": "[params, functionName, target, isSpawn, isPersistent] call BIS_fnc_MP;", "example": "[\"Imma spamming your log!\",\"BIS_fnc_log\"] call BIS_fnc_MP; Logs a message for every player who's currently joined.", "description": "Send function for remote execution (and executes locally if conditions are met) ."}, "isPiPEnabled": {"syntax": "isPiPEnabled", "example": "_PiPState = isPiPEnabled;", "description": "Returns whether Picture-In-Picture video option is enabled or not."}, "BIS_fnc_displayResize": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_radioSetChannel": {"example": "Example needed", "description": "/* Description: Set a specific or random music channel. Parameter(s): _this select 0: channel (String) _this select 1: next (Bool) _this select 2: override (Bool) Returns: Bool */"}, "setHitPointDamage": {"syntax": "vehicle setHitPointDamage [hitPointName, damage, useEffects]", "example": "vehicle player setHitPointDamage [\"hitEngine2\", 1.0];", "description": "Set the current level of damage for a specific Hit Point (specified by its config class)."}, "BIS_fnc_posDegToUTM": {"syntax": "[longitude, latitude, zone] call BIS_fnc_posDegToUTM", "example": "_utmZone = [47.63959,-122.127249] call BIS_fnc_posDegToUTM;", "description": "Generate a UTM Zone, Easting and Northing from lat and long fields. It uses NAD83 constants."}, "BIS_fnc_ambientHelicopters": {"example": "Example needed", "description": "N/A"}, "enableTraffic": {"syntax": "enableTraffic enable", "example": "enableTraffic true;", "description": "Enable ambient traffic."}, "throttleRTD": {"syntax": "throttleRTD helicopterRTD", "example": "_throttleValues = throttleRTD (vehicle player);", "description": "Return the current throttle level for all engines of a helicopter."}, "wingsForcesRTD": {"syntax": "wingsForcesRTD RTD_helicopter", "example": "_wingForce = wingsForcesRTD _rtdHelo", "description": "Returns force produced by wings."}, "BIS_fnc_GUInewsfeed": {"syntax": "[display] call BIS_fnc_GUInewsfeed", "example": "[_display] call BIS_fnc_GUInewsfeed;", "description": "Load newsfeed."}, "BIS_fnc_singleMissionKeys": {"syntax": "call BIS_fnc_singleMissionKeys", "example": "_activatedKeys = call BIS_fnc_singleMissionKeys;", "description": "Activate mission related keys."}, "setThrottleRTD": {"syntax": "helicopterRTD setThrottleRTD [value, engineIndex]", "example": "(vehicle player) setThrottleRTD [0.5, 1];", "description": "Set the throttle for the given engine(s) of a helicopter."}, "assignAsCargoIndex": {"syntax": "character assignAsCargoIndex [vehicle, index]", "example": "player assignAsCargoIndex [myHelicopter, 1];", "description": "Assigns the character to a specific cargo / passenger index of the given vehicle."}, "BIS_fnc_secondsToString": {"syntax": "[totalSeconds, format, returnArray] call BIS_fnc_secondsToString", "example": "hint format [\"Hi, it is currently\u00a0%1.\", [time, \"HH:MM\"] call BIS_fnc_secondsToString];", "description": "Convert seconds to formatted string."}, "setStarterRTD": {"syntax": "helicopterRTD setStarterRTD [enable, engineIndex]", "example": "(vehicle player) setStarterRTD [true, -1];", "description": "Toggle the starter for the given helicopter engine(s) on or off."}, "BIS_fnc_moveIn": {"syntax": "[vehicle, unit, role] call BIS_fnc_moveIn", "example": "[myCar, player, \"cargo\"] [call]] BIS_fnc_moveIn;", "description": "Moves a unit into vehicle. Compatible with assignedVehicleRole output."}, "BIS_fnc_ambientBoats": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_wpLand": {"syntax": "[group, position, target]] spawn BIS_fnc_wpLand", "example": "[ group player ], [0,0,0], BIS_vehicle ] spawn BIS_fnc_wpLand;", "description": "Let group members land at the waypoint position."}, "BIS_fnc_genericSentence": {"syntax": "[class,(speaker,delay,canRepeat)] call BIS_fnc_genericSentence;", "example": "[\"FeedbackFlightNegativeHeightTooHigh\"] call bis_fnc_genericSentence;", "description": "Play generic sentence with probablity set by bis_genericSentenceMode variable (0.5 = 50%, 1 = 100%)"}, "BIS_fnc_wpTimed": {"syntax": "arguments: [failCode,timeLimit,showHint]", "example": "[player,position dude,100,{hintC \"You failed!\"},42,true] spawn BIS_fnc_wpTimed;", "description": "COUNTDOWN custom waypoint. Player has to reach waypoint area before time runs out."}, "BIS_fnc_kbSkip": {"example": "Example needed", "description": "/* Description: Skip conversation. Currently played sentence will be finished Parameter(s): _this select 0: STRING - Topic name _this select 1 (Optional): STRING - container name (default: current mission ID) Returns: NUMBER */"}, "BIS_fnc_worldArea": {"syntax": "call BIS_fnc_worldArea", "example": "_bigTrigger = call BIS_fnc_worldArea;", "description": "Creates (or returns if it already exists) trigger with size of map."}, "BIS_fnc_dbValueRemove": {"example": "Example needed", "description": "// /* Description: Remove value from Scripted Database. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: BOOLEAN - True if value was removed */"}, "BIS_fnc_wpRestricted": {"syntax": "arguments: [limits, maxTime, failCode, visualize, warnCode]", "example": "[player, objNull, 0, [250, -1, 150, -1], 30, {HSim_RestrictedFlight = false}, true] BIS_fnc_wpFormation;", "description": "RESTRICTED custom waypoint. Player must fly in given limits."}, "BIS_fnc_wpFastRope": {"syntax": "arguments: [limitHeight,limitSpeed,fastropeID]", "example": "[player, position dude, 50, 5, 15, 1] spawn BIS_fnc_wpFastRope;", "description": "FAST-ROPE custom waypoint. Let everybody in vehicles' cargo space rappel down on a rope."}, "BIS_fnc_dbImportXML": {"syntax": "xmlFile call BIS_fnc_dbImportXML", "example": "_xmlDB = \"myFile.xml\" call BIS_fnc_dbImportXML;", "description": "Import XML file into Scripted Database."}, "BIS_fnc_ambientPlanes": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_playerName": {"syntax": "call BIS_fnc_playerName", "example": "_myPlayerName = call BIS_fnc_playerName;", "description": "Return current profile's name. Deprecated since Arma 3, use profileName instead."}, "setActualCollectiveRTD": {"syntax": "helicopterRTD setActualCollectiveRTD value", "example": "myHelicopterRTD setActualCollectiveRTD 0.7;", "description": "Sets the collective pitch control to a specific position, regardless of input devices (until those are changed)."}, "numberOfEnginesRTD": {"syntax": "numberOfEnginesRTD helicopterRTD", "example": "_engineCount = numberOfEnginesRTD (vehicle player);", "description": "Returns the number of engines a helicopter has."}, "setRotorBrakeRTD": {"syntax": "helicopterRTD setRotorBrakeRTD enable", "example": "myHelicopterRTD setRotorBrakeRTD 1;", "description": "Toggle a helicopter's rotor brake on or off."}, "radioChannelSetCallSign": {"syntax": "index radioChannelSetCallSign callSign", "example": "4 radioChannelSetCallSign \"%UNIT_NAME\";", "description": "Set the custom radio channel's call sign. Available special parameters:"}, "BIS_fnc_GUIgrid": {"example": "Example needed", "description": "/* Author: Karel Moricky Description: Returns grid params and stores it into uiNameSpace Parameter(s): _this select 0: STRING - category name _this select 1: STRING - grid name Returns: ARRAY - format [[x,y,w,h],gridW,gridH] */"}, "BIS_fnc_shakeGauges": {"example": "Example needed", "description": "/* Description: Shake analogue gauges Parameter(s): _this select 0 (Optional): NUMBER - shake limit (max distance gauges can move on screen from original position) _this select 1 (Optional): NUMBER - number of repeats _this select 2 (Optional): NUMBER - delay between every position change _this select 3 (Optional): ARRAY - list of IDCs Returns: NOTHING */"}, "BIS_fnc_PIP": {"syntax": "[renderTarget, cameraParams, (vehicle, replace)] call bis_fnc_PIP;", "example": "[\"rendertarget0\",[[heli1,heli1 selectionposition \"slingload0\"],cargo1],heli1,false] call BIS_fnc_PIP;", "description": "Displays Picture in Picture."}, "BIS_fnc_dbisValue": {"example": "Example needed", "description": "// /* Description: Checks if string is value definition. Parameter(s): _this select 0: STRING Returns: BOOLEAN */"}, "BIS_fnc_markerPath": {"syntax": "[start, end, spacing, params] call BIS_fnc_markerPath", "example": "[\"markerStart\", \"markerEnd\"] call BIS_fnc_markerPath;", "description": "Creater marker(s) between two points."}, "BIS_fnc_wpHover": {"syntax": "arguments: [minTime, reset, altDiff, visualize]", "example": "[player, position dude, 10, 10, false, -1, true] spawn BIS_fnc_wpLand;", "description": "HOVER custom waypoint. Hover on specific spot."}, "enableCoPilot": {"syntax": "helicopter enableCoPilot enable", "example": "myHelicopter enableCoPilot true;", "description": "Toggles availability of the actions related to copilots (taking over controls, suspending controls, etc.)."}, "BIS_fnc_dbValueIndex": {"example": "Example needed", "description": "// /* Description: Returns indexes leading to given value. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: ARRAY - List of index values */"}, "BIS_fnc_helicopterType": {"syntax": "[object] call BIS_fnc_helicopterType", "example": "Example needed", "description": "Returns helicopter type."}, "BIS_fnc_titleText": {"syntax": "message call BIS_fnc_titleText", "example": "\"Stratis, 2035-07-14 0130<br />A dark night ahead\u2026\" call BIS_fnc_titleText;", "description": "Display TitleText with structured text"}, "BIS_fnc_spawnGroup": {"syntax": "[position, side, character details, relative positions, list of ranks, skill range, ammo count range, randomization controls, azimuth] call BIS_fnc_spawnGroup", "example": "Spawn five random EAST units at aPos: [ getPos aPos, EAST, 5] call BIS_fnc_spawnGroup", "description": "Function which handles the spawning of a dynamic group of characters. The composition of the group can be passed to the function. Alternatively a number can be passed and the function will spawn that amount of characters with a random type. A side's Center must have been created before a group may be spawned. Either by using createCenter or an editor placed (0% Probability of Presence is fine) unit of the appropriate side."}, "setPiPEffect": {"syntax": "name setPiPEffect [effect, optionalParam1, ..., optionalParamN]", "example": "\"rendersurface\" setPiPEffect [0];", "description": "Sets Render Target's visual effect (Picture-in-Picture)."}, "BIS_fnc_displayControls": {"example": "Example needed", "description": "/* Description: Return all controls of given display class Parameter(s): _this select 0: CONFIG - display config _this select 1: NUMBER or CONFIG or STRING - type of returned values (control configs, their names or IDCs; default: configfile)) _this select 2: BOOL - true to search content of controls group (default: true) Returns: ARRAY */"}, "BIS_fnc_counter": {"example": "Example needed", "description": "/* Description: Modify the given counter (create it if doesn't exist) Parameter(s): _this select 0: STRING - variable name of counter ARRAY in format [variableName,nameSpace], where nameSpace can be object, group or missionNameSpace/uiNameSpace _this select 1 (Optional): NUMBER - added value _this select 2 (Optional): NUMBER - modulo value Returns: NUMBER - counter's value */"}, "ropeDetach": {"syntax": "vehicle ropeDetach rope;", "example": "vehicle player ropeDetach myRope;", "description": "Detach a rope from an object."}, "BIS_fnc_dbValueId": {"example": "Example needed", "description": "// /* Description: Converts string to value definition. Parameter(s): _this: STRING (converts to) or _this select 0: STRING (converts from) Returns: STRING */"}, "setTrafficGap": {"syntax": "setTrafficGap [gap, xMin, xMax, zMin, zMax]", "example": "setTrafficGap [50, 31000, 32500, 28000, 32000];", "description": "Set the average gap between ambient cars in a rectangle (in meters)."}, "BIS_fnc_HUDLimits": {"syntax": "[speedLimit, altLimit, dirLimit] call BIS_fnc_HUDLimits", "example": "[[0,0,0], [1, 0, 50], [0,0,0]] call BIS_fnc_HUDLimits; // limits altitude on HUD to 50m max", "description": "Set helicopter advanced flight model HUD limits and prevents overwriting existing values. See also setHUDMovementLevels."}, "BIS_fnc_dbClassSet": {"example": "Example needed", "description": "// /* Description: Add class to Scripted Database. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: BOOLEAN - True if class was added */"}, "BIS_fnc_assignPlayerRole": {"syntax": "[vehicle, role, path] call BIS_fnc_assignPlayerRole", "example": "[myVehicle, \"turret\", [0, 1]] call BIS_fnc_assignPlayerRole;", "description": "Ensures the player can only get in the specific vehicle role."}, "BIS_fnc_kbTell": {"syntax": "[topic, container, section, radioMode, code, speakers, soundVolume, radioProtocol] spawn BIS_fnc_kbTell", "example": "[\"01_Wave\", \"A_in\", nil, \"SIDE\", nil, nil, 1, false] spawn BIS_fnc_kbTell;", "description": "Play given sentence/conversation. Script terminates itself when conversation is finished."}, "setTrafficSpeed": {"syntax": "setTrafficSpeed [speed, xMin, xMax, zMin, zMax]", "example": "setTrafficSpeed [50, _xMin, _xMax, _zMin, _zMax];", "description": "Set ambient traffic speed in a rectangle (in kilometers per hour)."}, "BIS_fnc_overviewMission": {"example": "Example needed", "description": "#define CONTROL_SHOW(CONTROL) \\ CONTROL ctrlshow true; \\ CONTROL ctrlsetfade 0; \\ CONTROL ctrlcommit 0; #define CONTROL_HIDE(CONTROL) \\ CONTROL ctrlshow false; \\ CONTROL ctrlsetfade 1; \\ CONTROL ctrlcommit 0;"}, "BIS_fnc_wpCheckpoint": {"syntax": "arguments: [posLimit]", "example": "[player,position dude,10,2] spawn BIS_fnc_wpCheckpoint;", "description": "CHECKPOINT custom waypoint. Player has to reach waypoint position with certain precisoon (as opposed to normal Move waypoint, which became completed in around 500m)."}, "BIS_fnc_camFollow": {"syntax": "[camera, target, refreshTime] call BIS_fnc_camFollow", "example": "_camera = \"camera\" camCreate ((getPos player) vectorAdd [0,0,3]); [_camera, player, -2] call BIS_fnc_camFollow;", "description": "Refresh a camera Field of View according to its distance with the target."}, "BIS_fnc_onEnd": {"syntax": "argument call BIS_fnc_onEnd", "example": "_onEndIndex = { player addRating 10000; } call BIS_fnc_onEnd;", "description": "Register code to be executed after mission end."}, "BIS_fnc_dbValueCheck": {"example": "Example needed", "description": "// /* Description: Check if value exists Scripted Database. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: BOOLEAN - True if value exists */"}, "BIS_fnc_genericSentenceInit": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_dbValueList": {"example": "Example needed", "description": "// /* Description: Returns all values withing class. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: ARRAY - List of value names */"}, "BIS_fnc_dbValueReturn": {"example": "Example needed", "description": "// /* Description: Returns content of given value. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: ARRAY - Value content */"}, "BIS_fnc_markerParams": {"syntax": "varName call BIS_fnc_markerParams", "example": "_params = \"marker_1\" call BIS_fnc_markerParams;", "description": "Returns marker params in format compatible with BIS_fnc_markerCreate."}, "BIS_fnc_GUIhint": {"example": "Example needed", "description": "/* Description: Creates advanced hintC dialog Parameter(s): _this select 0: ARRAY in format [text,picture] * text: STRING - hint text * picture: STRING - picture [item1,item2...] - Listbox item ARRAYs in format [itemText,itemDescription,picture,icon] * itemText: STRING - Text displayed in listbox * itemDescription (Optional): STRING - text displayed after clicking on item * picture (Optional): STRING - picture displayed after clicking on item * icon (Optional): STRING - icon displayed in listbox left from text _this select 1 (Optional): STRING - hint header _this select 2 (Optional): ARRAY - [STRING,CODE,NUMBER] - text on left button (when \"\", button is hidden), code executed upon clicking and fade out delay. If only text is present, button is disabled. _this select 3 (Optional): ARRAY - [STRING,CODE,NUMBER] - STRING - text on right button and code executed upon clicking _this select 4 (Optional): ARRAY - [STRING,CODE,NUMBER] - STRING - text on middle button and code executed upon clicking _this select 5 (Optional): NUMBER or ARRAY - width or [width,height] of picture (in grid coordinates). Width > 17 means only picture is used. Returns: ARRAY - [endState(,lbId)] * endState: NUMBER - 1 when clicked on right button, -1 when clicked on left button, 0 when escaped * lbId: NUMBER - selected listbox item (when listbox was used) */ #define DISPLAY_CLASS 'Hsim_RscDisplayCommonHint_guiHint' #define DISPLAY_CONFIG (configfile >> \"RscDisplayCommonHint\") #define DISPLAY (uinamespace getvariable DISPLAY_CLASS) #define CONTROL (DISPLAY displayctrl _idc) #define CONTROL_FADEINTIME 0.3 #define CONTROL_FADEIN \\ CONTROL ctrlsetfade 1; \\ CONTROL ctrlcommit 0; \\ CONTROL ctrlsetfade 0; \\ CONTROL ctrlcommit CONTROL_FADEINTIME;"}, "setTrafficDistance": {"syntax": "setTrafficDistance distance", "example": "setTrafficDistance 1000;", "description": "Set maximum ambient traffic draw distance (in 2D)."}, "BIS_fnc_roundDir": {"syntax": "[rawDirection, rounding] call BIS_fnc_roundDir", "example": "player setDir ([getDir player, 45] call BIS_fnc_roundDir);", "description": "Round direction to nearest set rounding; used for determining cardinal direction."}, "BIS_fnc_singleMissionName": {"syntax": "call BIS_fnc_singleMissionName", "example": "_missionName = call BIS_fnc_singleMissionName;", "description": "Returns name of currently selected single mission."}, "BIS_fnc_GCinit": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_ambientBlacklist": {"example": "Example needed", "description": "/* Description: Check if area is blacklisted. Blacklist triggers are to be named 'bis_ambientBlacklist_#', where # is number from 0 to 99. Parameter(s): _this select 0: BIS_fnc_position compatible position - check if position is blacklisted NUMBER - initialize blacklisted areas Returns: BOOL - true when in blacklisted area */"}, "saveProfileNamespace": {"syntax": "saveProfileNamespace", "example": "saveProfileNamespace;", "description": "Saves the variables stored in profileNamespace to the persistent active user profile."}, "BIS_fnc_displayClouds": {"example": "Example needed", "description": "#define DISPLAY (uinamespace getvariable 'hsim_RscClouds') #define CONTROL (DISPLAY displayctrl _idc) #define RSC_LAYER 759"}, "BIS_fnc_helicopterDamage": {"syntax": "[helicopter, selection, damage] call BIS_fnc_helicopterDamage", "example": "myHelicopter addEventHandler [\"Dammaged\", { _this call BIS_fnc_helicopterDamage; }];", "description": "Handling EH-based helicopter damage, event handler in question being Dammagedsic."}, "BIS_fnc_noFlyZonesExport": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_dbSymbolValue": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_markerCreate": {"example": "Example needed", "description": "/* Description: Creates marker with given params. Reads config to recognize settings - use for quick debugging only. Parameter(s): _this: ARRAY of values: STRING - one of type, color, brush or shape. If no corresponding class is found, value is used as marker text ARRAY [STRING(,ANY,ANY,...)] - marker name with optional arguments [NUMBER] - marker size [a,a] [NUMBER,NUMBER] - marker size [x,y] [NUMBER,NUMBER,NUMBER] - marker position [x,y,z] OBJECT - object's position NUMBER - marker dir BOOL - marker locality (true if global) Returns: STRING - created marker */"}, "BIS_fnc_posUTMToDeg": {"syntax": "[easting, northing, zone, hemisphere] call BIS_fnc_posUTMToDeg", "example": "[5273702, 560561, 10] call BIS_fnc_posUTMToDeg;", "description": "Generate Lat and Long fields from UTM Zone, Easting and Northing. It uses NAD83 constants."}, "HUDMovementLevels": {"syntax": "HUDMovementLevels", "example": "HUDMovementLevels;//[0,0,0,0,0,0,[0,0,0]]", "description": "Returns movement borders for HUD [min speed, max speed, min alt, max alt, min dir, max dir, position[x,y,z] or target]"}, "BIS_fnc_wpFormation": {"syntax": "arguments: [failCode, maxTime, relPos, diffAlt, visualize]", "example": "[player, dude, 80, {HSim_keptFormation = false}, -60, [80,160], 20, true] BIS_fnc_wpFormation;", "description": "FORMATION custom waypoint. Player must stay within certain radius and angle towards followed vehicle."}, "collectiveRTD": {"syntax": "collectiveRTD helicopterRTD", "example": "_collective = collectiveRTD (vehicle player);", "description": "Returns the current position of a helicopter's collective pitch control."}, "setBatteryChargeRTD": {"syntax": "helicopterRTD setBatteryChargeRTD charge", "example": "(vehicle player) setBatteryChargeRTD 0.5;", "description": "Set the actual battery charge of a helicopter."}, "BIS_fnc_keypointsExport": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_convertUnits": {"syntax": "[value, from, to, mode, precision] call BIS_fnc_convertUnits", "example": "_distString = [500, 0, 5, 1, -1] call BIS_fnc_convertUnits;", "description": "Converts values to a target system of units."}, "BIS_fnc_radioSetTrack": {"example": "Example needed", "description": "/* Description: Set a specific or random music track. Parameter(s): _this select 0: track (String) _this select 1: override (Bool) _this select 2: Bool (first track? -> start randomly within the track) Returns: Array (duration (s): Scalar, start time (s): Scalar) */"}, "BIS_fnc_getIDC": {"syntax": "[config,ctrlName] call BIS_fnc_getIDC", "example": "_IDC = [ [configFile]] >> \"Display3DENPlace\",\"ButtonCancel\"] call BIS_fnc_getIDC;", "description": "Returns IDD of given display."}, "BIS_fnc_displayLoading": {"syntax": "[onLoad,id] call BIS_fnc_displayLoading;", "example": "([_this,##ID##] call (uinamespace getvariable 'bis_fnc_displayLoading')", "description": "Loading Screens init."}, "BIS_fnc_saveGame": {"syntax": "[objects] call BIS_fnc_saveGame", "example": "[ [unit_1,unit_2] ] call BIS_fnc_saveGame;", "description": "Evaluates the current battlefield situation and saves the game when appropriate."}, "BIS_fnc_posDegToWorld": {"syntax": "[longitude, latitude, world] call BIS_fnc_posDegToWorld", "example": "[47.63959,-122.127249] call BIS_fnc_posDegToWorld;", "description": "Convert latitude/longtitude coordinates into game world position."}, "BIS_fnc_help": {"syntax": "[] call BIS_fnc_help", "example": "[] call bis_fnc_help", "description": "Shows Function Library viewer, which contains list of all available functions, both official and unofficial."}, "BIS_fnc_dbImportConfig": {"example": "Example needed", "description": "// /* Description: Copy config classes and adds them to Scripted Database. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path _this select 2: CONFIG - Config path Returns: BOOLEAN - True if copied */"}, "BIS_fnc_guiMessage": {"syntax": "[message, (header, position, isCancel, parent, pause)] call BIS_fnc_guiMessage;", "example": "[\"Hello World\"] spawn BIS_fnc_guiMessage;", "description": "Shows customized native message box to user"}, "BIS_fnc_functionPath": {"syntax": "functionName call BIS_fnc_functionPath;", "example": "_path = \"BIS_fnc_wpLand\" call BIS_fnc_functionPath;", "description": "Returns path to function file."}, "BIS_fnc_radioSetPlaylist": {"syntax": "call BIS_fnc_radioSetPlaylist", "example": "call BIS_fnc_radioSetPlaylist;", "description": "Set a random music playlist for the current set channel (default \"Rock\"). Musics with \"genre\" set in CfgMusic are selected and shuffled."}, "enableAutoTrimRTD": {"syntax": "helicopterRTD enableAutoTrimRTD enable", "example": "myHelicopterRTD enableAutoTrimRTD true;", "description": "Toggle auto-trim for RTD helicopters."}, "enableAutoStartUpRTD": {"syntax": "helicopterRTD enableAutoStartUpRTD enable", "example": "myHelicopterRTD enableAutoStartUpRTD true;", "description": "Toggle availability of the automated helicopter start-up and shutdown sequences."}, "BIS_fnc_nearestHelipad": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_numberDigits": {"syntax": "number call BIS_fnc_numberDigits", "example": "12345678 call BIS_fnc_numberDigits; // returns [1,2,3,4,5,6,7,8]", "description": "Break number into array of digits."}, "BIS_fnc_helicopterSeatMove": {"syntax": "[unit, gesture] call BIS_fnc_helicopterSeatMove", "example": "[instructor, \"thumbUp\"] call BIS_fnc_helicopterSeatMove;", "description": "Plays cockpit animation. Take On Helicopters only."}, "BIS_fnc_isLocalized": {"syntax": "[localizationString] call BIS_fnc_isLocalized;", "example": "[\"STR_someLocalizedString\"] call BIS_fnc_isLocalized;", "description": "Checks if string is localized. Obsolete variant before isLocalized command was introduced."}, "BIS_fnc_animType": {"syntax": "param call BIS_fnc_animType;", "example": "animType = [\"AmovPsitMstpSrasWrflDnon\"] call BIS_fnc_animType;", "description": "Function that returns a categorized array using a single string with the animation name."}, "BIS_fnc_dbClassReturn": {"example": "Example needed", "description": "// /* Description: Returns content of given class. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: ARRAY - Class content */"}, "systemOfUnits": {"syntax": "systemOfUnits", "example": "_system = systemOfUnits;", "description": "Returns the currently selected system of units."}, "BIS_fnc_noFlyZone": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_wpSlingLoadDetach": {"syntax": "arguments: [posLimit,limitDir]", "example": "[player, position dude, 50, 10, [42, 52]] spawn BIS_fnc_wpSlingLoadDetach;", "description": "DETACH SLINGLOAD custom waypoint. Unload an object which was previously loaded using BIS_fnc_wpSlingLoadAttach"}, "BIS_fnc_wpWinchLoad": {"syntax": "arguments: [limitHeight,winchID,crewman,failCode,loadCode]", "example": "[player, dude, 50, 5, 1, rescuer, {hintC \"Rescuer died!\"}, {hintC \"Dude saved\"}] spawn BIS_fnc_wpWinchLoad;", "description": "WINCH LOAD custom waypoint. Load a group into helicopter cargo using winch."}, "BIS_fnc_GUIeditor": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_diaryHints": {"example": "Example needed", "description": "#define DIARY_CATEGORY \"BIS_fnc_diaryHints\""}, "BIS_fnc_errorMsg": {"syntax": "[message, otherParameters] call BIS_fnc_errorMsg", "example": "[\"This is an error message\"] call BIS_fnc_errorMsg;", "description": "Display error window."}, "BIS_fnc_dbClassCheck": {"example": "Example needed", "description": "// /* Description: Check if class exists Scripted Database. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: BOOLEAN - True if class exists */"}, "profileNamespace": {"syntax": "profileNamespace", "example": "_namespace = profileNamespace;", "description": "Returns the global namespace attached to the active user profile. Use setVariable and getVariable to save and load data to and from this Namespace. A variable can be deleted by setting its value to nil. By default the variables set in this namespace will exist while the game is running. In order to make variables save permanently, use saveProfileNamespace before the game is over. The variables are stored next to the user profile in a file named myUsername.vars.GAMENAME (e.g. in the My Documents\\Take On Helicopters folder)."}, "BIS_fnc_singleMissionConfig": {"syntax": "call BIS_fnc_singleMissionConfig", "example": "_config = call BIS_fnc_singleMissionConfig;", "description": "Returns config of current single mission."}, "BIS_fnc_setHeight": {"syntax": "[target, height, position, mode] call BIS_fnc_setHeight", "example": "// will place player's vehicle on \"myHeightMarker\", 50m above terrain [vehicle player, 50, getMarkerPos \"myHeightMarker\", \"ATL\"]]] call BIS_fnc_setHeight;", "description": "Set an object height."}, "BIS_fnc_wpSteady": {"syntax": "arguments: [limitArray,failLimit,failCode,warningCode,positiveCode]", "example": "[ player, position dude, nil, [15,1.3,30], 10, {hintC \"You failed\";}, {hint \"Watch out!\";}, {hint \"Good\";} ] spawn BIS_fnc_wpSteady;", "description": "FLY STEADY custom waypoint. Keep helicopter's pitch, bank, relative velocity a relative vector in given limits"}, "BIS_fnc_GC": {"syntax": "entity spawn GC;", "example": "[dude1] spawn BIS_fnc_GC;", "description": "Sends an entity to the garbage collection queue. Replaces Arma 2 Garbage Collector."}, "setCustomWeightRTD": {"syntax": "helicopterRTD setCustomWeightRTD weight", "example": "myHelicopterRTD setCustomWeightRTD 120;", "description": "Add virtual custom weight to a helicopter's center of gravity. This can be used to simulate added internal payload for specific scenarios, and affects the flight model."}, "BIS_fnc_ambientBlacklistAdd": {"example": "Example needed", "description": "/* Description: Add a new ambient blacklist trigger Parameter(s): _this select 0: OBJECT - trigger Returns: BOOL - true when added correctly */"}, "BIS_fnc_functionsDebug": {"example": "Example needed", "description": "N/A"}, "BIS_fnc_kbCanSpeak": {"syntax": "unit call BIS_fnc_kbCanSpeak", "example": "_canPlayerTalk = player call BIS_fnc_kbCanSpeak;", "description": "Check if person is not locked by some conversation."}, "BIS_fnc_dbClassIndex": {"example": "Example needed", "description": "// /* Description: Returns indexes leading to given class. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path Returns: ARRAY - List of index values */"}, "BIS_fnc_dbValueSet": {"example": "Example needed", "description": "// /* Description: Add value to Scripted Database. Parameter(s): _this select 0: ARRAY - Database array _this select 1: ARRAY - Path _this select 2: ARRAY - Value Returns: BOOLEAN - True if value was added */"}, "BIS_fnc_posDegtoUTM": {"syntax": "[longitude, latitude, zone] call BIS_fnc_posDegToUTM", "example": "_utmZone = [47.63959,-122.127249] call BIS_fnc_posDegToUTM;", "description": "Generate a UTM Zone, Easting and Northing from lat and long fields. It uses NAD83 constants."}, "BIS_fnc_overviewAuthor": {"syntax": "[config, control] call BIS_fnc_overviewAuthor", "example": "hint format [\"%1,\u00a0%2\", briefingName, call BIS_fnc_overviewAuthor];", "description": "Returns the mission author's name preceded by , e.g \"by Username\". See Description.ext/author."}, "setEngineRPMRTD": {"syntax": "helicopterRTD setEngineRPMRTD [value, engineIndex]", "example": "(vehicle player) setEngineRPMRTD [6500, -1];", "description": "Instantly set a helicopter's engine RPMs to the given value."}, "ropeDestroy": {"syntax": "ropeDestroy rope", "example": "ropeDestroy myRope;", "description": "Destroy a rope."}, "BIS_fnc_wpSlingLoadDrop": {"syntax": "arguments: none", "example": "[player, position dude, 50] spawn BIS_fnc_wpSlingLoadDrop;", "description": "DROP SLINGLOAD custom waypoint. Drop an object which was previously loaded using BIS_fnc_wpSlingLoadAttach"}, "setAPURTD": {"syntax": "helicopterRTD setAPURTD [value, time]", "example": "(vehicle player) setAPURTD [1, 15];", "description": "Let the Auxiliary Power Unit (APU) reach a desired state over the given period of time."}, "BIS_fnc_ctrlTextHeight": {"syntax": "[control] call BIS_fnc_ctrlTextHeight", "example": "[_ctrl] call BIS_fnc_ctrlTextHeight;", "description": "Resize control according to it's text."}, "radioChannelAdd": {"syntax": "index radioChannelAdd units", "example": "2 radioChannelAdd [player, unit1];", "description": "Add the units to the custom radio channel."}, "BIS_fnc_helicopterGetHitpoints": {"syntax": "object call BIS_fnc_helicopterGetHitpoints", "example": "[BIS_helicopter] call BIS_fnc_helicopterGetHitpoints;", "description": "Return all hitpoints for a helicopter."}, "BIS_fnc_keypointsExportFromKML": {"example": "Example needed", "description": "/* Description: Imports and marks positions from KLM file. Parameter(s): _this: STRING - path to .kml file Returns: STRING - config output (also copied to clipboard) */"}, "BIS_fnc_GUIbackground": {"syntax": "[position] call BIS_fnc_GUIbackground", "example": "[1,1,1,1] call BIS_fnc_GUIbackground;", "description": "Creates GUI background."}, "BIS_fnc_diaryMaps": {"example": "Example needed", "description": "#define DIARY_CATEGORY \"BIS_fnc_diaryMaps\""}, "BIS_fnc_selectRandom": {"syntax": "var1 call BIS_fnc_selectRandom", "example": "_bestShooter = [_rento, _ben, _trit] call BIS_fnc_selectRandom; //returns one of the variables _bestSeries = [[\"halo1\",\"halo2\"],[\"ofp\",\"arma2\"]] call BIS_fnc_selectRandom; //returns one of the arrays", "description": "Selects one of the arguments at random. There is now a dedicated script command selectRandom, use that instead."}, "BIS_fnc_dbPrint": {"example": "Example needed", "description": "// /* Description: Copy Scripted Database content into clipboard for evaluation. Text will be formatted as config. Parameter(s): _this select 0: ARRAY - Database array _this select 1: NUMBER (optional) - Number of tabs Returns: STRING - printed text */"}, "BIS_fnc_MPexec": {"syntax": "[packet, value] call BIS_fnc_MPexec", "example": "Example needed", "description": "Execute received remote execution."}, "BIS_fnc_position": {"syntax": "argument call BIS_fnc_position", "example": "_pos = player call BIS_fnc_position;", "description": "Returns PositionAGL, unless passed argument is Array, then the same array is returned. When position is Object and alternative position is stored in \"BIS_fnc_position_forced\" variable on this object, the stored position is used rather than actual object position."}}, "review": [["BIS_fnc_ambientBlacklist", " SYTX"], ["BIS_fnc_ambientBlacklistAdd", " SYTX"], ["BIS_fnc_ambientBoats", " SYTX"], ["BIS_fnc_ambientHelicopters", " SYTX"], ["BIS_fnc_ambientPlanes", " SYTX"], ["BIS_fnc_counter", " SYTX"], ["BIS_fnc_dbClassCheck", " SYTX"], ["BIS_fnc_dbClassId", " SYTX"], ["BIS_fnc_dbClassIndex", " SYTX"], ["BIS_fnc_dbClassList", " SYTX"], ["BIS_fnc_dbClassRemove", " SYTX"], ["BIS_fnc_dbClassReturn", " SYTX"], ["BIS_fnc_dbClassSet", " SYTX"], ["BIS_fnc_dbConfigPath", " SYTX"], ["BIS_fnc_dbImportConfig", " SYTX"], ["BIS_fnc_dbisClass", " SYTX"], ["BIS_fnc_dbisValue", " SYTX"], ["BIS_fnc_dbPrint", " SYTX"], ["BIS_fnc_dbSymbolClass", " SYTX"], ["BIS_fnc_dbSymbolValue", " SYTX"], ["BIS_fnc_dbValueCheck", " SYTX"], ["BIS_fnc_dbValueId", " SYTX"], ["BIS_fnc_dbValueIndex", " SYTX"], ["BIS_fnc_dbValueList", " SYTX"], ["BIS_fnc_dbValueRemove", " SYTX"], ["BIS_fnc_dbValueReturn", " SYTX"], ["BIS_fnc_dbValueSet", " SYTX"], ["BIS_fnc_diaryHints", " SYTX"], ["BIS_fnc_diaryMaps", " SYTX"], ["BIS_fnc_displayClouds", " SYTX"], ["BIS_fnc_displayControls", " SYTX"], ["BIS_fnc_displayResize", " SYTX"], ["BIS_fnc_functionsDebug", " SYTX"], ["BIS_fnc_GCinit", " SYTX"], ["BIS_fnc_genericSentenceInit", " SYTX"], ["BIS_fnc_GUIeditor", " SYTX"], ["BIS_fnc_GUIgrid", " SYTX"], ["BIS_fnc_GUIgridToProfile", " SYTX"], ["BIS_fnc_GUIhint", " SYTX"], ["BIS_fnc_helicopterCanFly", " SYTX"], ["BIS_fnc_kbCreateDummy", " SYTX"], ["BIS_fnc_kbMenu", " SYTX"], ["BIS_fnc_kbPriority", " SYTX"], ["BIS_fnc_kbSentence", " SYTX"], ["BIS_fnc_kbSkip", " SYTX"], ["BIS_fnc_kbTopicConfig", " SYTX"], ["BIS_fnc_keypointsExport", " SYTX"], ["BIS_fnc_keypointsExportFromKML", " SYTX"], ["BIS_fnc_markerCreate", " SYTX"], ["BIS_fnc_nearestHelipad", " SYTX"], ["BIS_fnc_noFlyZone", " SYTX"], ["BIS_fnc_noFlyZonesCreate", " SYTX"], ["BIS_fnc_noFlyZonesExport", " SYTX"], ["BIS_fnc_overviewDifficulty", " SYTX"], ["BIS_fnc_overviewMission", " SYTX"], ["BIS_fnc_overviewTerrain", " SYTX"], ["BIS_fnc_radioSetChannel", " SYTX"], ["BIS_fnc_radioSetTrack", " SYTX"], ["BIS_fnc_shakeGauges", " SYTX"], ["plus", " DESC EXMP SYTX"], ["BIS_fnc_addEvidence", " SYTX"], ["BIS_fnc_commsMenuToggleAvailability", " SYTX"], ["BIS_fnc_commsMenuToggleVisibility", " SYTX"], ["BIS_fnc_createmenu", " SYTX"], ["BIS_fnc_help", " DOUBLE"], ["BIS_fnc_PosToGrid", " SYTX"], ["BIS_fnc_returnGroupComposition", " SYTX"], ["BIS_fnc_sceneCheckWeapons", " SYTX"], ["BIS_fnc_sceneCreateSceneTrigger", " SYTX"], ["BIS_fnc_sceneCreateSoundEntities", " SYTX"], ["BIS_fnc_sceneGetPositionByAngle", " SYTX"], ["BIS_fnc_sceneIntruderDetector", " SYTX"], ["BIS_fnc_sceneMiscStuff", " SYTX"], ["BIS_fnc_sceneRotate", " SYTX"], ["BIS_fnc_selectRandom", " DOUBLE"], ["BIS_fnc_spawnGroup", " DOUBLE"], ["BIS_fnc_spawnVehicle", " DOUBLE"], ["BIS_fnc_supplydropService", " SYTX"], ["BIS_fnc_taskHandler", " SYTX"], ["BIS_fnc_transportService", " SYTX"], ["BIS_fnc_unitVector", " SYTX"], ["BIS_fnc_zzRotate", " SYTX"], ["BIS_fnc_boundingBoxCorner", " SYTX"], ["addMagazine", " DOUBLE"], ["Arma_3_Revive", " DESC EXMP SYTX"], ["BIS_fnc_addCuratorChallenge", " SYTX"], ["BIS_fnc_addToPairs", " SYTX"], ["BIS_fnc_basicTask", " SYTX"], ["BIS_fnc_changeSupportRadioChannel", " SYTX"], ["BIS_fnc_credits_movie", " SYTX"], ["BIS_fnc_credits_movieConfig", " SYTX"], ["BIS_fnc_credits_movieSupport", " SYTX"], ["BIS_fnc_curatorAttributes", " SYTX"], ["BIS_fnc_curatorAutomaticPositions", " SYTX"], ["BIS_fnc_curatorChallengeDestroyVehicle", " SYTX"], ["BIS_fnc_curatorChallengeFindIntel", " SYTX"], ["BIS_fnc_curatorChallengeFireWeapon", " SYTX"], ["BIS_fnc_curatorChallengeGetInVehicle", " SYTX"], ["BIS_fnc_curatorChallengeIlluminate", " SYTX"], ["BIS_fnc_curatorChallengeSpawnLightning", " SYTX"], ["BIS_fnc_diagConfig", " SYTX"], ["BIS_fnc_diagKeyLayout", " SYTX"], ["BIS_fnc_diagKnownAsTarget", " SYTX"], ["BIS_fnc_diagMacros", " SYTX"], ["BIS_fnc_diagMacrosAuthor", " SYTX"], ["BIS_fnc_diagMacrosMapSize", " SYTX"], ["BIS_fnc_diagMacrosVerify", " SYTX"], ["BIS_fnc_drawCuratorLocations", " SYTX"], ["BIS_fnc_drawCuratorRespawnMarkers", " SYTX"], ["BIS_fnc_dynamicGroups", " SYTX"], ["BIS_fnc_effectFired", " SYTX"], ["BIS_fnc_effectFiredArtillery", " SYTX"], ["BIS_fnc_effectFiredFlares", " SYTX"], ["BIS_fnc_effectFiredHeliRocket", " SYTX"], ["BIS_fnc_effectFiredLongSmoke", " SYTX"], ["BIS_fnc_effectFiredRifle", " SYTX"], ["BIS_fnc_effectFiredRocket", " SYTX"], ["BIS_fnc_effectFiredSmokeLauncher", " SYTX"], ["BIS_fnc_effectFiredSmokeLauncher_boat", " SYTX"], ["BIS_fnc_effectKilled", " SYTX"], ["BIS_fnc_effectKilledAirDestruction", " SYTX"], ["BIS_fnc_effectKilledAirDestructionStage2", " SYTX"], ["BIS_fnc_effectKilledSecondaries", " SYTX"], ["BIS_fnc_execRemote", " SYTX"], ["BIS_fnc_exportCfgGroups", " SYTX"], ["BIS_fnc_exportCfgHints", " SYTX"], ["BIS_fnc_exportCfgMagazines", " SYTX"], ["BIS_fnc_exportCuratorCostTable", " SYTX"], ["BIS_fnc_exportGroupFormations", " SYTX"], ["BIS_fnc_findInPairs", " SYTX"], ["BIS_fnc_firedBombDemine", " SYTX"], ["BIS_fnc_forceEnd", " SYTX"], ["BIS_fnc_getCfgDataObject", " SYTX"], ["BIS_fnc_getCfgDataPool", " SYTX"], ["BIS_fnc_getCfgSubClasses", " SYTX"], ["BIS_fnc_getFromPairs", " SYTX"], ["BIS_fnc_getRespawnInventories", " SYTX"], ["BIS_fnc_initCuratorAttribute", " SYTX"], ["BIS_fnc_initPlayable", " SYTX"], ["BIS_fnc_initRespawn", " SYTX"], ["BIS_fnc_InstructorFigure", " SYTX"], ["BIS_fnc_interpolateWeather", " SYTX"], ["BIS_fnc_isCurator", " SYTX"], ["BIS_fnc_liveFeedModuleEffects", " SYTX"], ["BIS_fnc_liveFeedModuleInit", " SYTX"], ["BIS_fnc_liveFeedModuleSetSource", " SYTX"], ["BIS_fnc_liveFeedModuleSetTarget", " SYTX"], ["BIS_fnc_markWaypoints", " SYTX"], ["BIS_fnc_missileLaunchPositionFix", " SYTX"], ["BIS_fnc_missionConversations", " SYTX"], ["BIS_fnc_missionConversationsLocal", " SYTX"], ["BIS_fnc_missionFlow", " SYTX"], ["BIS_fnc_missionHandlers", " SYTX"], ["BIS_fnc_missionTasks", " SYTX"], ["BIS_fnc_missionTasksLocal", " SYTX"], ["BIS_fnc_moduleAI", " SYTX"], ["BIS_fnc_moduleAmmo", " SYTX"], ["BIS_fnc_moduleAnimals", " SYTX"], ["BIS_fnc_moduleArsenal", " SYTX"], ["BIS_fnc_moduleBleedTickets", " SYTX"], ["BIS_fnc_moduleBootcampStage", " SYTX"], ["BIS_fnc_moduleCAS", " SYTX"], ["BIS_fnc_moduleCombatGetIn", " SYTX"], ["BIS_fnc_moduleCountdown", " SYTX"], ["BIS_fnc_moduleCoverMap", " SYTX"], ["BIS_fnc_moduleCreateDiaryRecord", " SYTX"], ["BIS_fnc_moduleCreateProjectile", " SYTX"], ["BIS_fnc_moduleCurator", " SYTX"], ["BIS_fnc_moduleCuratorAddAddons", " SYTX"], ["BIS_fnc_moduleCuratorAddCameraArea", " SYTX"], ["BIS_fnc_moduleCuratorAddEditableObjects", " SYTX"], ["BIS_fnc_moduleCuratorAddEditingArea", " SYTX"], ["BIS_fnc_moduleCuratorAddEditingAreaPlayers", " SYTX"], ["BIS_fnc_moduleCuratorAddIcon", " SYTX"], ["BIS_fnc_moduleCuratorAddPoints", " SYTX"], ["BIS_fnc_moduleCuratorSetAttributes", " SYTX"], ["BIS_fnc_moduleCuratorSetCamera", " SYTX"], ["BIS_fnc_moduleCuratorSetCoefs", " SYTX"], ["BIS_fnc_moduleCuratorSetCostsDefault", " SYTX"], ["BIS_fnc_moduleCuratorSetCostsSide", " SYTX"], ["BIS_fnc_moduleCuratorSetCostsVehicleClass", " SYTX"], ["BIS_fnc_moduleCuratorSetEditingAreaType", " SYTX"], ["BIS_fnc_moduleCuratorSetObjectCost", " SYTX"], ["BIS_fnc_moduleDate", " SYTX"], ["BIS_fnc_moduleDiary", " SYTX"], ["BIS_fnc_moduleDoorOpen", " SYTX"], ["BIS_fnc_moduleEffectsEmitterCreator", " SYTX"], ["BIS_fnc_moduleEndMission", " SYTX"], ["BIS_fnc_moduleExecute", " SYTX"], ["BIS_fnc_moduleFDCPClear", " SYTX"], ["BIS_fnc_moduleFDCPIn", " SYTX"], ["BIS_fnc_moduleFDCPOut", " SYTX"], ["BIS_fnc_moduleFDSkeetDestruction", " SYTX"], ["BIS_fnc_moduleFDStatsClear", " SYTX"], ["BIS_fnc_moduleFiringDrill", " SYTX"], ["BIS_fnc_moduleFriendlyFire", " SYTX"], ["BIS_fnc_moduleGenericRadio", " SYTX"], ["BIS_fnc_moduleGroupID", " SYTX"], ["BIS_fnc_moduleHandle", " SYTX"], ["BIS_fnc_moduleHealth", " SYTX"], ["BIS_fnc_moduleHint", " SYTX"], ["BIS_fnc_moduleHQ", " SYTX"], ["BIS_fnc_moduleInit", " SYTX"], ["BIS_fnc_moduleLightning", " SYTX"], ["BIS_fnc_moduleMine", " SYTX"], ["BIS_fnc_moduleMissionName", " SYTX"], ["BIS_fnc_moduleMode", " SYTX"], ["BIS_fnc_moduleModules", " SYTX"], ["BIS_fnc_moduleMPTypeDefense", " SYTX"], ["BIS_fnc_moduleMPTypeGameMaster", " SYTX"], ["BIS_fnc_moduleMPTypeSectorControl", " SYTX"], ["BIS_fnc_moduleMPTypeSeize", " SYTX"], ["BIS_fnc_moduleObjective", " SYTX"], ["BIS_fnc_moduleObjectiveFind", " SYTX"], ["BIS_fnc_moduleObjectiveGetIn", " SYTX"], ["BIS_fnc_moduleObjectiveMove", " SYTX"], ["BIS_fnc_moduleObjectiveRaceCP", " SYTX"], ["BIS_fnc_moduleObjectiveRaceFinish", " SYTX"], ["BIS_fnc_moduleObjectiveRaceStart", " SYTX"], ["BIS_fnc_moduleObjectiveSector", " SYTX"], ["BIS_fnc_moduleObjectiveTarget", " SYTX"], ["BIS_fnc_modulePositioning", " SYTX"], ["BIS_fnc_modulePoster", " SYTX"], ["BIS_fnc_modulePostprocess", " SYTX"], ["BIS_fnc_moduleProjectile", " SYTX"], ["BIS_fnc_modulePunishment", " SYTX"], ["BIS_fnc_moduleRadioChannelCreate", " SYTX"], ["BIS_fnc_moduleRank", " SYTX"], ["BIS_fnc_moduleRemoteControl", " SYTX"], ["BIS_fnc_moduleRespawnInventory", " SYTX"], ["BIS_fnc_moduleRespawnPosition", " SYTX"], ["BIS_fnc_moduleRespawnTickets", " SYTX"], ["BIS_fnc_moduleRespawnVehicle", " SYTX"], ["BIS_fnc_moduleSector", " SYTX"], ["BIS_fnc_moduleSFX", " SYTX"], ["BIS_fnc_moduleShowHide", " SYTX"], ["BIS_fnc_moduleSimulationManager", " SYTX"], ["BIS_fnc_moduleSkill", " SYTX"], ["BIS_fnc_moduleSkiptime", " SYTX"], ["BIS_fnc_moduleSound", " SYTX"], ["BIS_fnc_moduleStrategicMapImage", " SYTX"], ["BIS_fnc_moduleStrategicMapInit", " SYTX"], ["BIS_fnc_moduleStrategicMapMission", " SYTX"], ["BIS_fnc_moduleStrategicMapOpen", " SYTX"], ["BIS_fnc_moduleStrategicMapORBAT", " SYTX"], ["BIS_fnc_moduleTaskCreate", " SYTX"], ["BIS_fnc_moduleTaskSetDescription", " SYTX"], ["BIS_fnc_moduleTaskSetDestination", " SYTX"], ["BIS_fnc_moduleTaskSetState", " SYTX"], ["BIS_fnc_moduleTrident", " SYTX"], ["BIS_fnc_moduleTriggers", " SYTX"], ["BIS_fnc_moduleTTCPTrigger", " SYTX"], ["BIS_fnc_moduleTTCPTriggerBehind", " SYTX"], ["BIS_fnc_moduleTTStatsClear", " SYTX"], ["BIS_fnc_moduleUnits", " SYTX"], ["BIS_fnc_moduleUnlockArea", " SYTX"], ["BIS_fnc_moduleUnlockObject", " SYTX"], ["BIS_fnc_moduleVolume", " SYTX"], ["BIS_fnc_moduleWeather", " SYTX"], ["BIS_fnc_moduleZoneProtection", " SYTX"], ["BIS_fnc_moduleZoneRestriction", " SYTX"], ["BIS_fnc_onDiaryChanged", " SYTX"], ["BIS_fnc_playSound", " SYTX"], ["BIS_fnc_quotations", " SYTX"], ["BIS_fnc_randomPos", " DOUBLE"], ["BIS_fnc_removeFromPairs", " SYTX"], ["BIS_fnc_respawnBase", " SYTX"], ["BIS_fnc_respawnConfirm", " SYTX"], ["BIS_fnc_respawnGroup", " SYTX"], ["BIS_fnc_respawnInstant", " SYTX"], ["BIS_fnc_respawnMenuInventory", " SYTX"], ["BIS_fnc_respawnMenuPosition", " SYTX"], ["BIS_fnc_respawnMenuSpectator", " SYTX"], ["BIS_fnc_respawnRounds", " SYTX"], ["BIS_fnc_respawnSeagull", " SYTX"], ["BIS_fnc_respawnSide", " SYTX"], ["BIS_fnc_respawnSpectator", " SYTX"], ["BIS_fnc_respawnTimePenalty", " SYTX"], ["BIS_fnc_respawnWave", " SYTX"], ["BIS_fnc_setCuratorAttributes", " SYTX"], ["BIS_fnc_setObjectShotParents", " SYTX"], ["BIS_fnc_setRespawnDelay", " SYTX"], ["BIS_fnc_setTaskLocal", " SYTX"], ["BIS_fnc_setToPairs", " SYTX"], ["BIS_fnc_showRespawnMenu", " SYTX"], ["BIS_fnc_skirmishTrigger", " SYTX"], ["BIS_fnc_StrategicMapMouseButtonClick", " SYTX"], ["BIS_fnc_subClasses", " SYTX"], ["BIS_fnc_target", " SYTX"], ["BIS_fnc_taskSetAlwaysVisible", " SYTX"], ["BIS_fnc_taskSetType", " SYTX"], ["BIS_fnc_taskType", " SYTX"], ["BIS_fnc_terrainGradAngle", " SYTX"], ["BIS_fnc_toUpperDisplayTexts", " SYTX"], ["BIS_fnc_trackMissionTime", " SYTX"], ["BIS_fnc_tridentClient", " SYTX"], ["BIS_fnc_uniqueClasses", " SYTX"], ["CfgRemoteExec", " DESC EXMP SYTX"], ["diag_drawMode", " DOUBLE"], ["diag_list", " DOUBLE"], ["diag_mergeConfigFile", " DOUBLE"], ["diag_recordTurretLimits", " DOUBLE"], ["Dynamic_Groups", " DESC EXMP SYTX"], ["MP_End_Game", " DESC EXMP SYTX"], ["Pixel_Grid_System", " DESC EXMP SYTX"], ["ReportRemoteTarget", " DESC EXMP SYTX"], ["Revive", " DESC EXMP SYTX"], ["ropeCreate", " DOUBLE"], ["ropeDestroy", " DOUBLE"], ["ropeDetach", " DOUBLE"], ["setCustomWeightRTD", " DOUBLE"], ["wingsForcesRTD", " DOUBLE"]], "ARMA2": {"BIS_fnc_conditionalSelect": {"syntax": "[items, condition] call BIS_fnc_conditionalSelect", "server": false, "broadcasted": false, "description": "This returns a sub-array of elements that satisfy a specific condition in the order they have been passed.", "example": "[[10,0,8,2,6,4], { _x > 5 }] call BIS_fnc_conditionalSelect; // will return [10,8,6]", "local": false}, "ctrlSetAutoScrollSpeed": {"syntax": "control ctrlSetAutoScrollSpeed speed", "server": false, "broadcasted": false, "description": "Sets number of second required to scroll to next line. If speed < 0, auto-scroll is disabled. Setter for ctrlAutoScrollSpeed.", "example": "_ctrlGroup ctrlSetAutoScrollSpeed 0.1;", "local": false}, "hcRemoveGroup": {"syntax": "unit hcRemoveGroup group", "server": false, "broadcasted": false, "description": "Removes group from unit's high command bar.", "example": "player hcRemoveGroup BIS_group;", "local": false}, "addMagazine": {"syntax": "unitName addMagazine magazineName", "server": true, "broadcasted": true, "description": "Adds a magazine to a person. Infantry units can only carry a specific number of magazines, once the magazine slots are filled (or uniform/vest/bagpack are full in Arma3), any further addMagazine commands are ignored. If class of magazine does not exist, error message is printed in .rpt: player addMagazine \"dasdsa\"; // .rpt: Given magazine[dasdsa] not found)", "example": "player addMagazine \"30Rnd_556x45_STANAG\";", "local": true}, "startLoadingScreen": {"syntax": "startLoadingScreen [text, resource]", "server": false, "broadcasted": false, "description": "Shows loading screen with the given text, using the given resource. While loading screen is shown, simulation and scene drawing is disabled, user control is disabled, mouse cursor is hidden, scripts run at full speed (50ms per frame instead of 3ms per frame for Scheduled Scripts). The loading screen does not end by itself and needs endLoadingScreen command, so make sure there is one at the end of loading operation.", "example": "startLoadingScreen [\"Loading My Mission, please wait...\"];", "local": false}, "playAction": {"syntax": "soldier playAction action", "server": false, "broadcasted": true, "description": "When used on a person, a smooth transition to the given action will be initiated.", "example": "soldierOne playAction \"SitDown\"", "local": true}, "taskHint": {"syntax": "taskHint [hintText, [r, g, b, a], icon]", "server": false, "broadcasted": false, "description": "Shows info about new, changed or failed task. The text can contain several lines. \\n is used to indicate the end of a line.", "example": "taskhint [\"Task failed!\\nBad job!\", [1, 0, 0, 1], \"taskFailed\"]", "local": false}, "taskDestination": {"syntax": "taskDestination task", "server": false, "broadcasted": false, "description": "Returns the position of the task (as specified by destination parameter in config).", "example": "if (!isNull currentTask player) then {taskDestination currentTaskplayer}; //return Position (Array)", "local": false}, "ctrlMapCursor": {"syntax": "control ctrlMapCursor [defaultCursor, newCursor]", "server": false, "broadcasted": false, "description": "Changes the default cursor that appears when interacting with a map control to a custom one. Use an empty string to restore the default cursor. If the specified cursor does not exist, the default is used and no error is produced. ( NOT in case of ArmA 3. Using an empty string will result in an error: \"No entry 'bin\\config.bin/CfgWrapperUI/Cursors.' ). The cursor is the name of a config entry from CfgWrapperUI / Cursors. This command has the following specifics:", "example": "_map ctrlMapCursor [\"Track\", \"Arrow\"];", "local": false}, "BIS_fnc_returnConfigEntry": {"syntax": "[config,attribute,defaultValue] call BIS_fnc_returnConfigEntry", "server": false, "broadcasted": false, "description": "Explores parent classes in the run-time config for the value of a config entry.", "example": "[configfile >> \"Cfg3DEN\" >> \"Attributes\" >> \"ActivationType\",\"idc\"] call BIS_fnc_returnConfigEntry;", "local": false}, "currentZeroing": {"syntax": "currentZeroing gunner", "server": false, "broadcasted": false, "description": "Returns zeroing of unit's weapon.", "example": "_zeroing = currentZeroing player;", "local": false}, "owner": {"syntax": "owner object", "server": true, "broadcasted": false, "description": "On server machine, returns the ID of the client where the object is local. Otherwise returns 0. For use on clients clientOwner command is available. To find out the owner of a Group, use groupOwner.", "example": "_clientID = owner _someobject;", "local": false}, "removeSimpleTask": {"syntax": "person removeSimpleTask task", "server": false, "broadcasted": false, "description": "Remove a simple task from the list of simple tasks.", "example": "player removeSimpleTask _tskKillSpongebob", "local": false}, "viewDistance": {"syntax": "viewDistance", "server": false, "broadcasted": false, "description": "Returns the rendering distance.", "example": "hint (\"my view distance is \" + str viewDistance + \" meters\");", "local": false}, "BIS_fnc_returnVehicleTurrets": {"syntax": "[configEntry] call BIS_fnc_returnVehicleTurrets", "server": false, "broadcasted": false, "description": "Return the path to all turrets and sub-turrets in a vehicle.", "example": "[configFile >> \"CfgVehicles\" >> \"B_MBT_01_TUSK_F\"] call BIS_fnc_returnVehicleTurrets;", "local": false}, "BIS_fnc_removeIndex": {"syntax": "[array,startIndex,endIndex] call BIS_fnc_removeIndex", "server": false, "broadcasted": false, "description": "Takes an array, and returns a new array with the specified index(es) removed. This takes the array passed in the first parameter, and returns an array that has the index number in the second parameter removed. If a third parameter is passed, then a range of indexes will be removed. Alternatively, you can pass an array of indexes to remove in the second parameter.", "example": "_array = [0,1,2,3,4]; [array,0] call BIS_fnc_removeIndex;//Returns [1,2,3,4]", "local": false}, "BIS_fnc_boundingBoxCorner": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* Description: Returns position of all four bounding box corners OR Returns position of the nearest corner to the given position Parameter(s): _this: OBJECT - object with bounding box OR _this: ARRAY in format: 0: OBJECT - object with bounding box 1: ARRAY or OBJECT - position for which the nearest corner is returned Returns: ARRAY in format [pos1, pos2, pos3, pos4] - 4 corners of the bounding box OR ARRAY in format [x,y,z] - position of the nearest corner Example 1: _corners = car call BIS_fnc_boundingBoxCorner; Example 2: _nearestCorner = [car, player] call BIS_fnc_boundingBoxCorner; */"}, "enableSaving": {"syntax": "enableSaving enable", "server": false, "broadcasted": false, "description": "Enable / disable saving of the game.", "example": "enableSaving false; // Saving disabled and make autosave. enableSaving true; // Saving enabled without autosave. enableSaving [ false, false ]; // Saving disabled without autosave. enableSaving [ false, true ]; // Saving disabled and make autosave. enableSaving [ true, false ]; // Saving enabled without autosave. enableSaving [ true, true ]; // Saving enabled and make autosave.", "local": false}, "allowFileOperations": {"syntax": "map allowFileOperations bool", "server": false, "broadcasted": false, "description": "Allow/dissallow file ops (load/save etc).", "example": "Example needed", "local": false}, "entities": {"syntax": "entities type", "server": false, "broadcasted": false, "description": "Returns a list of all alive and dead entities of the given type or deriving from the given type. Units in vehicles are ignored. When empty string \"\" is passed for the type, all entity types are returned.", "example": "_allcars = entities \"Car\";", "local": false}, "BIS_fnc_colorRGBtoHTML": {"syntax": "colorArray call BIS_fnc_colorRGBtoHTML", "server": false, "broadcasted": false, "description": "Converts RGB color format to HTML color format.", "example": "_htmlColor = [0,0,0,1] call BIS_fnc_colorRGBtoHTML; // will return #000000", "local": false}, "lnbSetPicture": {"syntax": "lnbSetPicture [IDC, [Row, Column], PicturePathOrPictureName]", "server": false, "broadcasted": false, "description": "Sets the picture in the item with the given position of the 2D listbox.", "example": "lnbSetPicture [1, [0, 0], \"Picture\"];", "local": true}, "roadsConnectedTo": {"syntax": "roadsConnectedTo roadSegment", "server": false, "broadcasted": false, "description": "Find the road segments connected to the given road segment.", "example": "_road = (player nearRoads 50) select 0; _connectedRoads = roadsConnectedTo _road;", "local": false}, "currentWeaponMode": {"syntax": "currentWeaponMode gunner", "server": false, "broadcasted": false, "description": "Returns current weapon mode of unit's weapon. Result can be: \"Single\", \"Burst\", \"FullAuto\", \"manual\", \"player\"", "example": "_weaponMode = currentWeaponMode player;", "local": false}, "createDiarySubject": {"syntax": "person createDiarySubject [subject, displayName, picture]", "server": false, "broadcasted": false, "description": "Create a new subject page in a log.", "example": "_index =player createDiarySubject [\"myPage\",\"My page\"];", "local": false}, "sendTaskResult": {"syntax": "task sendTaskResult [state,result,sentence]", "server": false, "broadcasted": false, "description": "Send a result of the task to the task sender.", "example": "Example needed", "local": false}, "hcRemoveAllGroups": {"syntax": "hcRemoveAllGroups unit", "server": false, "broadcasted": false, "description": "Remove all groups from unit's high command bar.", "example": "hcRemoveAllGroups player;", "local": false}, "BIS_fnc_findNestedElement": {"syntax": "[array, query] call BIS_fnc_findNestedElement", "server": false, "broadcasted": false, "description": "Function to find item in nested arrays and return a path to the first match.", "example": "_array = [[1, 2], [3, 4]]; _path = [_array, 3] call BIS_fnc_findNestedElement; // expected result: [1, 0] // ((_array select 1) select 0) == 3", "local": false}, "waypointCombatMode": {"syntax": "waypointCombatMode waypoint", "server": false, "broadcasted": false, "description": "Gets the waypoint combat mode.", "example": "waypointCombatMode [groupOne,1]", "local": false}, "playableUnits": {"syntax": "playableUnits", "server": false, "broadcasted": false, "description": "Returns a list of playable units in a multiplayer game (occupied by both AI or players), created on the following sides east, west, resistance/independent and civilian only. Does not contain units of sideLogic. This does not include dead players awaiting for respawn.", "example": "{_x groupChat \"I'm a playable unit.\";} forEach playableUnits;", "local": false}, "BIS_fnc_arrayFindDeep": {"syntax": "[array,value] call BIS_fnc_arrayFindDeep", "server": false, "broadcasted": false, "description": "Searches an array for a specific value and returns its index.", "example": "[ [1,2,3,4,5], 3 ] call BIS_fnc_arrayFindDeep;//Returns [2]", "local": false}, "setGroupIconsVisible": {"syntax": "setGroupIconsVisible [showOnMap, showOnHUD]", "server": false, "broadcasted": false, "description": "Sets if group icons are visible.", "example": "setGroupIconsVisible [true, true]; // Show markers on map and on player HUD setGroupIconsVisible [true, false]; // Show only 2D setGroupIconsVisible [false, false]; // Don't show", "local": false}, "markerShape": {"syntax": "markerShape name", "server": true, "broadcasted": false, "description": "Gets the marker shape. See setMarkerShape for a list of strings that can be returned.", "example": "if (markerShape \"Marker1\" == \"RECTANGLE\") then {hint \"Marker1 is a rectangle!\"}", "local": false}, "selectBestPlaces": {"syntax": "selectBestPlaces [position, radius, expression, precision, sourcesCount]", "server": false, "broadcasted": false, "description": "Find the places with the maximum value of expression in the given area. Places can be on water. Results are sorted by value. Search pattern is randomised every command execution.", "example": "myPlaces = selectBestPlaces [position player, 50, \"meadow + 2*hills\", 1, 5];", "local": false}, "setPosASL2": {"syntax": "obj setPosASL2 pos", "server": false, "broadcasted": false, "description": "Sets the object position. The pos array uses the PositionASL format. The version of the command does not offset based on object center.", "example": "player setPosASL2 [getPosASL player select 0, (getPosASL player select 1) + 10, getPosASL player select 2]", "local": false}, "setEditorObjectScope": {"syntax": "map setEditorObjectScope [objects, editorType, condition, scope, subordinatesAlso]", "server": false, "broadcasted": false, "description": "This command defines the level of access a user has to editor objects. \"objects\" is an array of either Editor Objects (eg [\"_unit_0\"]) or actual Game Objects (eg [player]). If the array is empty then the command will automatically parse all editor objects. \"editorType\" is the editor type to effect (eg \"unit\", \"vehicle\", \"center\") or \"\" for all types. \"condition\" is an executable string that must evaluate to true or false. If true, the scope of the evaluated editor object will be modified. \"_x\" can be used in the string as reference to the ingame representation of the currently processed array member. \"scope\" is one of \"HIDE\", \"VIEW\", \"SELECT\", \"LINKTO\", \"LINKFROM\", \"ALLNODRAG\", \"ALLNOTREE\", \"ALLNOCOPY\", \"ALLNOSELECT\" or \"ALL\". \"subordinatesAlso\" is a boolean value. If true then subordinates in the editor will be assigned the same scope as the parent.", "example": "_map setEditorObjectScope [ [],\"vehicle\", \"side effectiveCommander _x\u00a0!= side player\", \"HIDE\", false]", "local": false}, "BIS_fnc_listPlayers": {"syntax": "call BIS_fnc_listPlayers", "server": false, "broadcasted": false, "description": "Returns a list of currently played units, alive or dead.", "example": "_allPlayers = call BIS_fnc_listPlayers;", "local": false}, "agents": {"syntax": "agents", "server": false, "broadcasted": false, "description": "Return a list of agents in the current mission.", "example": "{agent _x moveTo position player} forEach agents;", "local": false}, "addMenuItem": {"syntax": "map addMenuItem [menu or index,text,command,priority]", "server": false, "broadcasted": false, "description": "Creates a new menu item. Menu can be \"file\" or \"view\",index is index,as returned from addMenu command. priority is optional and determines,where in the menu the item will reside (higher priority items first).", "example": "-", "local": false}, "detach": {"syntax": "detach object", "server": true, "broadcasted": true, "description": "Detaches previously attached with attachTo object.", "example": "obj1 attachTo [player]; detach obj1;", "local": false}, "createTask": {"syntax": "teamMember createTask [[type, parentTask], priority, name1, value1...nameN, valueN]", "server": false, "broadcasted": false, "description": "Create a new AI task (subtask of parentTask). Type is name of registered task type.", "example": "Example needed", "local": false}, "commandChat": {"syntax": "unitName commandChat chatText", "server": true, "broadcasted": false, "description": "Types text to the command radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", "example": "_soldierOne commandChat \"Show this text\";", "local": false}, "aimedAtTarget": {"syntax": "vehicle aimedAtTarget [target, weapon]", "server": false, "broadcasted": false, "description": "Returns how good the weapon of the vehicle is aimed at the target.", "example": "_aimingQuality = heli aimedAtTarget [target];", "local": false}, "addLiveStats": {"syntax": "unit addLiveStats score", "server": false, "broadcasted": false, "description": "Adds score to the Xbox Live Statistics score for the given unit (or the commander unit of the given vehicle). (Also available in OFPE & VBS2)", "example": "player addLiveStats 10", "local": false}, "BIS_fnc_setNestedElement": {"syntax": "[array, path, value] call BIS_fnc_setNestedElement", "server": false, "broadcasted": false, "description": "Function to set an item in a nested array using a path. Modifies the array by reference.", "example": "_array = [[1, 2], [3, 4]]; _bool = [_array, [0, 0], 0] call BIS_fnc_setNestedElement; // _array is now [[0, 2], [3, 4]]", "local": false}, "enableAIFeature": {"syntax": "feature enableAIFeature enabled", "server": false, "broadcasted": false, "description": "Enable/disable given AI feature. Feature may be one of: \"AwareFormationSoft\", \"CombatFormationSoft\".", "example": "\"AwareFormationSoft\" enableAIFeature true", "local": false}, "ATLToASL": {"syntax": "ATLToASL pos", "server": false, "broadcasted": false, "description": "Converts a position from PositionATL to PositionASL", "example": "ATLToASL (getPosATL player) isEqualTo getPosASL player", "local": false}, "setFromEditor": {"syntax": "teamMember setFromEditor fromEditor", "server": false, "broadcasted": false, "description": "Set if given team member was inserted directly from editor.", "example": "_teamMember setFromEditor true", "local": false}, "BIS_fnc_destroyCity": {"syntax": "[position, areaSize, seed, blacklist] call BIS_fnc_destroyCity", "server": false, "broadcasted": false, "description": "Destroys building in given area based on input seed.", "example": "[\"destroyBase\", 500, 42, [ourHouseInTheMiddleOfTheStreet]] call BIS_fnc_destroyCity;", "local": false}, "BIS_fnc_respect": {"syntax": "[mode, param1, param2, param3] call BIS_fnc_respect", "server": false, "broadcasted": false, "description": "RESpect - The Effective Calculation Process.", "example": "Example needed", "local": false}, "synchronizeTrigger": {"syntax": "trigger synchronizeTrigger [waypoint1, waypoint2, ...]", "server": false, "broadcasted": false, "description": "Synchronizes the trigger with zero or more waypoints.", "example": "_trigger synchronizeTrigger []", "local": false}, "systemChat": {"syntax": "systemChat text", "server": false, "broadcasted": false, "description": "Types text to the system radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", "example": "systemChat \"Hello world!\";", "local": false}, "directSay": {"syntax": "unit directSay radioName", "server": true, "broadcasted": false, "description": "Sends given audio message to the direct channel. Command operates just like xxxxRadio commands, but the sound is played over direct channel and is independent of fadeRadio. The message is defined in CfgRadio in the description.ext file or config radio protocol or a kbAddTopic. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).", "example": "player directSay configName selectRandom (\"true\" configClasses (configFile >> \"CfgRadio\"));", "local": false}, "enableCamShake": {"syntax": "enableCamShake value", "server": false, "broadcasted": false, "description": "Allows camera shake effects via addCamShake. If set to false, then a currently active shake effect will stop immediately. By default, shake effects are enabled, but once they have been disabled by this command, they will have to be enabled first, in order to be visible.", "example": "enableCamShake false;", "local": false}, "uiNamespace": {"syntax": "uiNamespace", "server": false, "broadcasted": false, "description": "Returns the global namespace attached to user interface.", "example": "uiNamespace setVariable [\"LIB_interruptDisplay\", _display];", "local": false}, "diag_frameNo": {"syntax": "diag_frameNo", "server": false, "broadcasted": false, "description": "Returns number of frame currently displayed.", "example": "_currFrameNo = diag_frameNo;", "local": false}, "ppEffectCommitted": {"syntax": "ppEffectCommitted effect", "server": false, "broadcasted": false, "description": "Check whether given post process effect is committed", "example": "ppEffectCommitted \"colorCorrection\";", "local": false}, "lnbSetCurSelRow": {"syntax": "lnbSetCurSelRow [idc, index]", "server": false, "broadcasted": false, "description": "Selects the row with the given index of the 2D listbox.", "example": "disableSerialization; _ctrl = (findDisplay 300) displayCtrl 304; _ctrl lnbSetCurSelRow 1;", "local": false}, "allGroups": {"syntax": "allGroups", "server": false, "broadcasted": false, "description": "Return a list of all groups created on the following sides east, west, resistance/independent and civilian only. Does not contain groups of sideLogic.", "example": "{(leader _x) sideChat \"Go\u00a0! Go\u00a0! Go\u00a0!\"} forEach allGroups;", "local": false}, "enableSentences": {"syntax": "enableSentences enable", "server": false, "broadcasted": false, "description": "Enables radio transmissions to be heard and seen on screen. It does not affect KBTell conversations.", "example": "enableSentences false;", "local": false}, "WFSideText": {"syntax": "WFSideText param", "server": false, "broadcasted": false, "description": "Returns the unlocalized text value of an object's side / a group's side or a side as:", "example": "WFSideText player;", "local": false}, "allDead": {"syntax": "allDead", "server": false, "broadcasted": false, "description": "Return a list of all dead units including agents and destroyed vehicles. Dead units may be in vehicles.", "example": "{ deleteVehicle _x } forEach allDead;", "local": false}, "setWaypointVisible": {"syntax": "waypoint setWaypointVisible visible", "server": false, "broadcasted": true, "description": "Sets the visibility of the waypoint.", "example": "[grp, 2] setWaypointVisible false;", "local": false}, "safeZoneW": {"syntax": "safeZoneW", "server": false, "broadcasted": false, "description": "", "example": "_screenWidth = safeZoneW;", "local": false}, "synchronizedObjects": {"syntax": "synchronizedObjects unit", "server": false, "broadcasted": false, "description": "Return the list of objects synchronized with the given unit.", "example": "_objects = synchronizedObjects _logic;", "local": true}, "aimPos": {"syntax": "aimPos object", "server": true, "broadcasted": false, "description": "Returns the position of the object other units can aim to.", "example": "aimPos player", "local": false}, "BIS_fnc_unitVector": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/************************************************************ Unit Vector Returns the unit vector for the passed vector (vector pointing in the same direction, but with magnitude == 1) This does not modify the original array. The array can have any number of elements (2, 3, etc). ************************************************************/"}, "setObjectArguments": {"syntax": "map setObjectArguments [object,[name1,value1,...]]", "server": false, "broadcasted": false, "description": "Set object arguments in mission editor.", "example": "Example needed", "local": false}, "magazinesTurret": {"syntax": "vehicle magazinesTurret turretPath", "server": true, "broadcasted": false, "description": "Returns all magazines of given turret. Use turret path [-1] for driver's turret. Alternatively, use magazinesAllTurrets", "example": "_mags = vehicle player magazinesTurret [0, 0];", "local": false}, "processDiaryLink": {"syntax": "processDiaryLink link", "server": false, "broadcasted": false, "description": "Open the diary screen on the record specified by link.", "example": "Example needed", "local": false}, "lockedCargo": {"syntax": "vehicle lockedCargo cargoIndex", "server": false, "broadcasted": false, "description": "Check whether cargo position of the vehicle is locked.", "example": "_result = vehicleName lockedCargo 0;", "local": false}, "clearMagazineCargoGlobal": {"syntax": "clearMagazineCargoGlobal unit", "server": true, "broadcasted": true, "description": "Removes all magazines from the vehicle cargo space. MP synchronized.", "example": "clearMagazineCargoGlobal jeepOne;", "local": false}, "waypointStatements": {"syntax": "waypointStatements waypoint", "server": false, "broadcasted": false, "description": "Gets the waypoint statements.", "example": "waypointStatements [groupOne,1]", "local": false}, "getMagazineCargo": {"syntax": "result = getMagazineCargo object", "server": true, "broadcasted": false, "description": "Returns all magazines types and count from the cargo space", "example": "_content = getMagazineCargo carName;", "local": false}, "ctrlSetAutoScrollRewind": {"syntax": "control ctrlSetAutoScrollRewind set", "server": false, "broadcasted": false, "description": "Defines if scroll should rewind when auto-scroll reach end. Setter for ctrlAutoScrollRewind.", "example": "_ctrlGroup ctrlSetAutoScrollRewind true;", "local": false}, "BIS_fnc_selectRandomWeighted": {"syntax": "itemsAndWeights call BIS_fnc_selectRandomWeighted", "server": false, "broadcasted": false, "description": "Selects a random item from an array, taking into account item weight. Note:", "example": "[\"apples\",.3,\"pears\",.2,\"bananas\",.4,\"diamonds\",.1,\"unicorns\",.00001] call BIS_fnc_selectRandomWeighted;", "local": false}, "displayAddEventHandler": {"syntax": "display displayAddEventHandler [eventName, code]", "server": false, "broadcasted": false, "description": "Adds an event handler to the given display. Returns the ID of the event handler, or -1 when failed.", "example": "moduleName_keyDownEHId = (findDisplay 46) displayAddEventHandler [\"KeyDown\", \"hint str _this;\"];", "local": false}, "diag_log": {"syntax": "diag_log anything", "server": false, "broadcasted": false, "description": "Dumps the argument's value to the report file. Each call creates a new line in the file.", "example": "diag_log time;", "local": false}, "isWalking": {"syntax": "isWalking unitName", "server": true, "broadcasted": false, "description": "Returns true if walk is toggled (W+S in Arma 3).", "example": "_bool = isWalking player;", "local": false}, "BIS_fnc_getLineDist": {"syntax": "[start1, length1, start2, length2] call BIS_fnc_getLineDist", "server": false, "broadcasted": false, "description": "Return the distance between two sections of a virtual straight line.", "example": "_distance = [0,5,15,20] call BIS_fnc_getLineDist; // returns 10", "local": false}, "attachTo": {"syntax": "object1 attachTo [object2, offset, memPoint]", "server": true, "broadcasted": true, "description": "Attaches an object to another object. The offset is applied to the object center unless a memory point is provided. If no offset is specified, the offset used will be the current relative positioning of objects against each other.", "example": "player attachTo [car, [0, 0, 1] ];", "local": false}, "createMenu": {"syntax": "map createMenu index", "server": false, "broadcasted": false, "description": "Creates a previously added menu.", "example": "Example needed", "local": false}, "hcShownBar": {"syntax": "hcShownBar", "server": false, "broadcasted": false, "description": "Return true if the high command bar is shown/active.", "example": "if (hcShownBar) then {hint \"HC bar is active\";};", "local": false}, "getResolution": {"syntax": "getResolution", "server": false, "broadcasted": false, "description": "Returns an array containing all information about resolution.", "example": "_res = getResolution; //some single monitor setup [ 1360, //width 768, //height 867, //2D viewport width 653, //2D viewport height 1.77778, //aspect ratio 0.85 //UI scale ]", "local": false}, "BIS_fnc_classMagazine": {"syntax": "magazineClass call BIS_fnc_classMagazine", "server": false, "broadcasted": false, "description": "Returns class of magazine given by string.", "example": "_magazineConfig = currentMagazine player call BIS_fnc_classMagazine;", "local": false}, "missionNamespace": {"syntax": "missionNamespace", "server": false, "broadcasted": false, "description": "Returns the global namespace attached to mission.", "example": "missionNamespace setVariable [\"YourString\",3];//Same as: YourString = 3; _yourString = missionNamespace getVariable \"YourString\";", "local": false}, "safeZoneWAbs": {"syntax": "safeZoneWAbs", "server": false, "broadcasted": false, "description": "Returns SafeZone width (of all monitors, in case there's more than one)", "example": "_szW = safeZoneWAbs;", "local": false}, "onPreloadFinished": {"syntax": "onPreloadFinished command", "server": false, "broadcasted": false, "description": "Defines an action performed after the preload screen finished. Preload event occurs after briefing screen on mission start.", "example": "onPreloadFinished {TAG_ReceivingScreenDone = true};", "local": false}, "sunOrMoon": {"syntax": "sunOrMoon", "server": false, "broadcasted": false, "description": "Returns the sun to moon transition state in range 0...1", "example": "_transitionState = sunOrMoon;", "local": false}, "teamName": {"syntax": "teamName team", "server": false, "broadcasted": false, "description": "Return a name of given team.", "example": "_name = teamName _team;", "local": false}, "ctrlAutoScrollDelay": {"syntax": "ctrlAutoScrollDelay control", "server": false, "broadcasted": false, "description": "Returns number of seconds auto-scroll will wait before scroll and/or rewind. -2 if scrollbar not present.", "example": "_ctrlDelay = ctrlAutoScrollDelay _ctrlGroup;", "local": false}, "endMission": {"syntax": "endMission endType", "server": false, "broadcasted": false, "description": "Finish the mission. The end type can be:", "example": "endMission \"END1\";", "local": true}, "BIS_fnc_taskDefend": {"syntax": "[group,position] call BIS_fnc_taskDefend", "server": false, "broadcasted": false, "description": "Group will man nearby static defenses within a 100 metre radius of the defense position and guard the position. Some units will man weapons, others will patrol and the remainder will sit on the ground.", "example": "[group this, getPos this] call bis_fnc_taskDefend", "local": false}, "parsingNamespace": {"syntax": "parsingNamespace", "server": false, "broadcasted": false, "description": "Returns the global namespace attached to config parser.", "example": "parsingNamespace setVariable [\"var1\",101.23124]; _profVar1 = parsingNamespace getVariable \"var1\";", "local": false}, "enableEngineArtillery": {"syntax": "enableEngineArtillery enabled", "server": false, "broadcasted": false, "description": "Enable/disable the artillery engine. This allows the user to use the artillery computer on mortar/artillery, and for AI to use it for indirect fire.", "example": "enableEngineArtillery false;", "local": false}, "addEditorObject": {"syntax": "map addEditorObject [type,[name1,value1,...],subtype class]", "server": false, "broadcasted": false, "description": "Add an object to the editor and assign arguments. Create script is,called with _new equal to true. Returns the ID of the new EditorObject.,Subtype class is optional.", "example": "-", "local": false}, "mapGridPosition": {"syntax": "mapGridPosition param", "server": false, "broadcasted": false, "description": "Returns the map grid position of an object or position. The format is determined by the Grid format specified in the CfgWorlds for the current world. Eg: \"024577\" or \"De82\" or similar.", "example": "_gridPos = mapGridPosition player", "local": false}, "lnbSetData": {"syntax": "lnbSetData [idc, [row, column], data]", "server": false, "broadcasted": false, "description": "Sets the additional text (invisible) in the item with the given position of the 2D listbox.", "example": "_ctrl lnbSetData [ [0,0],\"#1\"];", "local": true}, "BIS_fnc_relPos": {"syntax": "[start, distance, direction] call BIS_fnc_relPos", "server": false, "broadcasted": false, "description": "Returns a position that is a specified distance and compass direction from the passed position or object.", "example": "[ [0,0,0], 1000, 50 ] call BIS_fnc_relPos;//[766.044,642.788,0]", "local": false}, "BIS_fnc_version": {"syntax": "call BIS_fnc_version", "server": false, "broadcasted": false, "description": "Detects which Arma 2 expansions and addons are available. Only works in Arma 2.", "example": "_availableExpansions = call BIS_fnc_version;", "local": false}, "getObjectChildren": {"syntax": "map getObjectChildren object", "server": false, "broadcasted": false, "description": "Return a list of all the children of the specified object.", "example": "Example needed", "local": false}, "onDoubleClick": {"syntax": "map onDoubleClick command", "server": false, "broadcasted": false, "description": "Defines an action performed when the user double clicks on the map. Command receives:,_pos array position,_units array selected units,_shift,_alt bool key state", "example": "Example needed", "local": false}, "BIS_fnc_invSlots": {"syntax": "[object] call BIS_fnc_invSlots", "server": false, "broadcasted": false, "description": "Returns config inventory slots of given unit (total numbers of available slots in array).", "example": "[ player ] call BIS_fnc_invSlots;//Returns [1,1,1,8,12,1,0,12] for \"B_T_Recon_TL_F\" class. Means: 1 x WeaponSlotPrimary, 1 x WeaponSlotHangun, ... , 12 x WeaponSlotInventory", "local": false}, "progressPosition": {"syntax": "progressPosition control", "server": false, "broadcasted": false, "description": "Returns the current position in the progress bar.", "example": "_pos = progressPosition _control;", "local": false}, "lnbColor": {"syntax": "lnbColor [idc, [row, column]]", "server": false, "broadcasted": false, "description": "Returns the text color of the item with the given position of the 2D listbox. The color is returned in format Color.", "example": "_ctrl lnbColor [0,0];", "local": false}, "lnbAddColumn": {"syntax": "_ctrl lnbAddColumn position", "server": false, "broadcasted": false, "description": "Adds an column at given position. It returns the index of the newly added column.", "example": "_ctrl lnbAddColumn 0.8;", "local": true}, "BIS_fnc_customGPS": {"syntax": "[path,deltaX,deltaY] call BIS_fnc_customGPS", "server": false, "broadcasted": false, "description": "Replaces GPS frame.", "example": "[\"ca\\missions_pmc\\data\\ui_gps_ca.paa\", -0.05, 0.16] call BIS_fnc_customGPS;", "local": false}, "laserTarget": {"syntax": "laserTarget unitName", "server": true, "broadcasted": false, "description": "Returns laser target object created by given unit (gunner in vehicle or on foot) when using \"Laserdesignator\" or another laser targeting device. Laser target object is global and can be retrieved from any PC.", "example": "_target = laserTarget gunner heli;", "local": false}, "triggerStatements": {"syntax": "triggerStatements trigger", "server": true, "broadcasted": false, "description": "Returns trigger statements in the form [cond, activ, desactiv]. Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "example": "_statements = triggerStatements someTrigger;", "local": false}, "deleteTeam": {"syntax": "deleteTeam team", "server": false, "broadcasted": false, "description": "Destroy given team.", "example": "deleteTeam _team;", "local": false}, "camTarget": {"syntax": "camTarget camera", "server": false, "broadcasted": false, "description": "Returns camera's target.", "example": "_someObject = camTarget _camera;", "local": false}, "BIS_fnc_sceneSetObjects": {"syntax": "[centre, objectsArray, applyOffset, stopped] call BIS_fnc_sceneSetObjects", "server": false, "broadcasted": false, "description": "This function sets objects positions and direction relative to the chosen object.", "example": "[player, _arrayOfObjects, false] call BIS_fnc_sceneSetObjects;", "local": false}, "surfaceNormal": {"syntax": "surfaceNormal position", "server": false, "broadcasted": false, "description": "Returns surface normal on given position.", "example": "_normal = surfaceNormal [300, 500];", "local": false}, "addMagazineCargoGlobal": {"syntax": "vehicleName addMagazineCargoGlobal [magazineName, count]", "server": true, "broadcasted": true, "description": "Add magazines to the cargo space of vehicles, which can be taken out by infantry units. MP Synchronized", "example": "_truck addMagazineCargoGlobal [\"M16\", 5];", "local": false}, "BIS_fnc_taskPatrol": {"syntax": "[group,position,distance,area blacklist] call BIS_fnc_taskPatrol", "server": false, "broadcasted": false, "description": "Create a random patrol of several waypoints around a given position.", "example": "[group this, getPos this, 1000] call bis_fnc_taskPatrol", "local": false}, "taskDescription": {"syntax": "taskDescription task", "server": false, "broadcasted": false, "description": "Returns the sub-parts of the task description. The returned Array is in format [Task description, Task title, Task waypoint description].", "example": "_taskDescArray = taskDescription _task;", "local": false}, "taskResult": {"syntax": "taskResult task", "server": false, "broadcasted": false, "description": "Send a result of the task to the task sender.", "example": "taskResult (player createSimpleTask [\"NewTask\"]);", "local": false}, "createTeam": {"syntax": "createTeam [type, name]", "server": false, "broadcasted": false, "description": "Create a team and name it.", "example": "_team = createTeam [\"USMC_Team\", \"Fire Team Red\"];", "local": false}, "triggerTimeout": {"syntax": "triggerTimeout trigger", "server": true, "broadcasted": false, "description": "Returns trigger timeout in the form [min, mid, max, interruptable]. Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "example": "_timeOut = triggerTimeout someTrigger;", "local": false}, "onShowNewObject": {"syntax": "map onShowNewObject command", "server": false, "broadcasted": false, "description": "Defines an action performed when the user right clicks on the map and,selects New Object. Set to empty for default behavior. Command receives:,_pos array position,", "example": "Example needed", "local": false}, "BIS_fnc_relativeDirTo": {"syntax": "[point1, point2] call BIS_fnc_relativeDirTo", "server": false, "broadcasted": false, "description": "Returns the relative direction from object 1 to object/position 2. Return value is always in between 0 and 360.", "example": "[ [0,0,0], player ] call BIS_fnc_relPos;", "local": false}, "triggerType": {"syntax": "triggerType trigger", "server": true, "broadcasted": false, "description": "Returns trigger type (see setTriggerType). Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "example": "_type = triggerType tr1;", "local": false}, "kbAddTopic": {"syntax": "person kbAddTopic [topicName, conversationFile, fsmFile, eventHandler]", "server": false, "broadcasted": false, "description": "Register conversation topic to given person. See Conversations for more details.", "example": "player kbAddTopic [\"myTest\", \"myTest.bikb\", \"myTest.fsm\", compile preprocessFileLineNumbers \"myTest.sqf\"];", "local": false}, "collapseObjectTree": {"syntax": "collapseObjectTree map", "server": false, "broadcasted": false, "description": "Collapse the object tree.", "example": "collapseObjectTree _map,", "local": false}, "setWaypointCompletionRadius": {"syntax": "waypoint setWaypointCompletionRadius radius", "server": false, "broadcasted": false, "description": "The completion radius allows units to call the waypoint completed once they are inside of the given circle.", "example": "[grp, 2] setWaypointCompletionRadius 30;", "local": false}, "BIS_fnc_returnParents": {"syntax": "[config, onlyClassNames] call BIS_fnc_returnParents", "server": false, "broadcasted": false, "description": "Returns list of all parent classes.", "example": "[ configFile >> \"CfgVehicles\" >> \"Land_FirePlace_F\", true ] call BIS_fnc_returnParents; //Returns [\"Land_FirePlace_F\",\"House_F\",\"House\",\"HouseBase\",\"NonStrategic\",\"Building\",\"Static\",\"All\"]", "local": false}, "unregisterTask": {"syntax": "teamMember unregisterTask name", "server": false, "broadcasted": false, "description": "Unregister a task type.", "example": "player unregisterTask taskName;", "local": false}, "waypointBehaviour": {"syntax": "waypointBehaviour waypoint", "server": false, "broadcasted": false, "description": "Gets the waypoint behavior.", "example": "waypointBehaviour [groupOne,1]", "local": false}, "setEditorMode": {"syntax": "map setEditorMode mode", "server": false, "broadcasted": false, "description": "Sets map mode to MAP,3D or PREVIEW.", "example": "Example needed", "local": false}, "getPlayerUID": {"syntax": "getPlayerUID unit", "server": true, "broadcasted": false, "description": "Return an uniqueID of the given unit as string if it's player and empty value if it's AI. The unique ID may be up to 100 characters long and may contain numbers, uppercase letters and underscores (the value can be used to construct a valid variable name by appending to another valid variable name).", "example": "_uid = getPlayerUID player;", "local": false}, "lnbValue": {"syntax": "lnbValue [idc,[row, column]]", "server": false, "broadcasted": false, "description": "Returns the additional integer value in the item with the given position of the 2D listbox.", "example": "_ctrl lnbValue [0,0];//1, default is 0 if value is String set by lnbSetValue", "local": false}, "BIS_fnc_variableSpaceAdd": {"syntax": "[object,varName,element,global,inArray] call BIS_fnc_variableSpaceAdd", "server": false, "broadcasted": false, "description": "Add element to variable from someone's variable space.", "example": "[ player,\"someVar\",1337,true,true ] call BIS_fnc_variableSpaceAdd;", "local": false}, "BIS_fnc_sceneRotate": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/********************************************************************* Version: 1.0 Name: sceneRotate DESCRIPTION: Compute new object coordinates from given center and angle from MOTION BUILDER PARAMETERS: center: [x,y,z]; angle: number; init pos [x, y, z] RETURNED VALUE: coordinates **********************************************************************/"}, "endLoadingScreen": {"syntax": "endLoadingScreen", "server": false, "broadcasted": false, "description": "Finishes loading screen started by startLoadingScreen.", "example": "startLoadingScreen [\"Loading My Mission\"]; //Batch of code //Batch of code //Batch of code progressLoadingScreen 0.5; //Batch of code //Batch of code //Batch of code endLoadingScreen;", "local": false}, "actionKeysNamesArray": {"syntax": "actionKeysNamesArray userAction", "server": false, "broadcasted": false, "description": "Returns a list of button names assigned to the given user action. You can find the action names in config class ControllerSchemes or user action names.", "example": "list = actionKeysNamesArray \"ReloadMagazine\";", "local": false}, "commitOverlay": {"syntax": "commitOverlay map", "server": false, "broadcasted": false, "description": "Commit the current overlay.", "example": "commitOverlay _map,", "local": false}, "findEmptyPosition": {"syntax": "center findEmptyPosition [minDistance, maxDistance, vehicleType]", "server": false, "broadcasted": false, "description": "Searches for an empty position around specified position. The search starts looking for an empty position at a minimum distance of [minDistance] from the [center] and looks as far away as [maxDistance]. If a [vehicleType] parameter is specified, then the search will look for an empty positions that is big enough to hold that vehicle type. If an empty position isn't found, an empty array is returned.", "example": "_position = (getPosATL player) findEmptyPosition [0,100];", "local": false}, "ctrlMapMouseOver": {"syntax": "ctrlMapMouseOver control", "server": false, "broadcasted": false, "description": "Returns description of map sign mouse cursor is over. Works with in-game map as well as 2D editor map in edit mode.", "example": "(uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_overFriendly\"]; _mouseover = if (count (ctrlMapMouseOver (uiNamespace getVariable \"_map\")) > 0) then { ctrlMapMouseOver (uiNamespace getVariable \"_map\") } else { [\"\"] }; if (_mouseover select 0 == \"task\" && str(_logic getVariable \"onTaskAssigned\")\u00a0!= str{}) then { //--- Task (uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_overMission\"]; } else { //--- Waypoint (uiNamespace getVariable \"_map\") ctrlMapCursor [\"Track\",\"HC_move\"]; };", "local": false}, "BIS_fnc_arrayPush": {"syntax": "[array, element] call BIS_fnc_arrayPush", "server": false, "broadcasted": false, "description": "This function adds an element to the end of an array and returns the array.", "example": "_newArray = [[0,1,2], 3] call BIS_fnc_arrayPush; // _newArray is [0,1,2,3]", "local": false}, "BIS_fnc_rotateVector2D": {"syntax": "[vector2D, angle] call BIS_fnc_rotateVector2D", "server": false, "broadcasted": false, "description": "This function returns a 2D vector rotated a specified number of degrees around the origin.", "example": "[ [5,3], 60 ] call BIS_fnc_rotateVector2D;//Returns[-0.0980766,5.83013]", "local": false}, "onHCGroupSelectionChanged": {"syntax": "onHCGroupSelectionChanged command", "server": false, "broadcasted": false, "description": "Defines an action performed when high command group selection has been changed.", "example": "onHCGroupSelectionChanged { if (_isSelected) then { hint format [\"Group\u00a0%1 has been selected.\", _group]; } else { hint format [\"Group\u00a0%1 has been deselected.\", _group]; }; };", "local": false}, "selectEditorObject": {"syntax": "map selectEditorObject object", "server": false, "broadcasted": false, "description": "Select an editor object. Does not un-select previously selected objects.", "example": "Example needed", "local": false}, "productVersion": {"syntax": "productVersion", "server": false, "broadcasted": false, "description": "Returns the product's friendly name, identifier and version. In Arma 3 it also returns branch identifier, whether or not the game was launched using mods, and the platform.", "example": "hint str productVersion; //would return [\"Arma 2 OA\", \"arma2oa\", 162, 95208] on Arma 2 OA 1.62.95208", "local": false}, "setSimpleTaskDestination": {"syntax": "task setSimpleTaskDestination pos", "server": false, "broadcasted": false, "description": "Attach a destination to the simple task.", "example": "_tskGoHere setSimpleTaskDestination (getMarkerPos \"obj1\");", "local": false}, "taskParent": {"syntax": "taskParent task", "server": false, "broadcasted": false, "description": "Return the parent task of the specified task.", "example": "_parent = taskParent \"someTask\";", "local": false}, "BIS_fnc_miscanim": {"syntax": "[anim, person1, vehicle, person2, isOnBoard, altitude, doMove] call BIS_fnc_miscanim", "server": false, "broadcasted": false, "description": "Setting up the animations with correct positions for object - choose correct performance. For ex. fixingTowingTractor (read the description)", "example": "[\"twoTalking1\", unit1, myCar, unit2] call BIS_fnc_miscanim;", "local": false}, "BIS_fnc_setPitchBank": {"syntax": "[object, pitch, bank] call BIS_fnc_setPitchBank", "server": false, "broadcasted": false, "description": "Rotate an object, giving it the specified pitch and bank, in degrees.", "example": "[player, 45, -45] call BIS_fnc_setPitchBank;", "local": false}, "nearEntities": {"syntax": "position nearEntities radius", "server": true, "broadcasted": false, "description": "Find entities in the sphere with given radius. If typeName(s) is (are) given, only entities of given type (or its subtype) are listed.", "example": "_list = player nearEntities 20; _list = ASLToAGL getPosASL player nearEntities 50; _list = player nearEntities [\"Man\", 1000]; _list = ASLToAGL getPosASL player nearEntities [\"LaserTarget\", 3000]; _list = player nearEntities [[\"Car\", \"Motorcycle\", \"Tank\"], 50]; _list = ASLToAGL getPosASL player nearEntities [[\"Man\", \"Air\", \"Car\", \"Motorcycle\", \"Tank\"], 200];", "local": false}, "openDSInterface": {"syntax": "openDSInterface", "server": false, "broadcasted": false, "description": "Opens MP interface.", "example": "openDSInterface", "local": false}, "BIS_fnc_sceneSetPosFormation": {"syntax": "param spawn BIS_fnc_sceneSetPosFormation;", "server": false, "broadcasted": false, "description": "Adjusts units into a pre-determined formation, using a few variables. Part of S.C.E.N.E.S function group.", "example": "0 = [units group player, bluforCommander, player, \"HALFCIRCLE\",0] spawn BIS_fnc_sceneSetPosFormation;", "local": false}, "hcShowBar": {"syntax": "hcShowBar bool", "server": false, "broadcasted": false, "description": "Shows or hides high command bar.", "example": "hcShowBar true;", "local": false}, "BIS_fnc_spawnGroup": {"syntax": "[position, side, character details, relative positions, list of ranks, skill range, ammo count range, randomization controls, azimuth] call BIS_fnc_spawnGroup", "server": false, "broadcasted": false, "description": "Function which handles the spawning of a dynamic group of characters. The composition of the group can be passed to the function. Alternatively a number can be passed and the function will spawn that amount of characters with a random type. A side's Center must have been created before a group may be spawned. Either by using createCenter or an editor placed (0% Probability of Presence is fine) unit of the appropriate side.", "example": "Spawn five random EAST units at aPos: [ getPos aPos, EAST, 5] call BIS_fnc_spawnGroup", "local": false}, "removeMagazineTurret": {"syntax": "vehicle removeMagazineTurret [magazineName, turretPath]", "server": false, "broadcasted": true, "description": "Removes the magazine from the turret. Use turret path [-1] for driver's turret. Note: you may create invalid combinations by using this function. When doing so, application behaviour is undefined.", "example": "vehicle player removeMagazineTurret [\"60rnd_cmflaremagazine\",[-1]]", "local": true}, "lnbAddRow": {"syntax": "lnbAddRow [IDC,[ String,String... ]]", "server": false, "broadcasted": false, "description": "Adds a row of strings.", "example": "lnbAddRow [1,[\"COL1\",\"COL2\"]];", "local": true}, "targetsQuery": {"syntax": "enquirer targetsQuery [targetIgnore, targetSide, targetType, targetPosition, targetMaxAge]", "server": false, "broadcasted": false, "description": "Returns sorted array of targets, known to the enquirer (including own troops), where the accuracy coefficient reflects how close the result matches the query. This command could be CPU intensive.", "example": "Return all known targets for player:_targets = player targetsQuery [objNull, sideUnknown, \"\", [], 0];", "local": false}, "worldToScreen": {"syntax": "worldToScreen position", "server": false, "broadcasted": false, "description": "Converts position in world space into screen (UI) space. If a specified position is not within the current screen view, an empty array is returned.", "example": "_screenPos = worldToScreen getPos soldier1;", "local": false}, "diag_fps": {"syntax": "diag_fps", "server": false, "broadcasted": false, "description": "Returns average framerate calculated over last 16 frames.", "example": "diag_log diag_fps;", "local": false}, "BIS_fnc_roundNum": {"syntax": "[number, factor, secondary factor] call BIS_fnc_roundNum", "server": false, "broadcasted": false, "description": "Round a number to the provided factor.", "example": "[10.254,2,3] call BIS_fnc_roundNum;//Returns 9", "local": false}, "setWeaponReloadingTime": {"syntax": "vehicle setWeaponReloadingTime [gunner, muzzleName, reloadTime]", "server": false, "broadcasted": false, "description": "Sets states and/or makes an action of/on weapon. Reload time is between 0 and 1 inclusive, where 1 is 100% of maximum reloading time.", "example": "_done = _vehicle setWeaponReloadingTime [gunner (vehicle player), currentMuzzle (gunner (vehicle player)), 0.5];", "local": false}, "setCamShakeParams": {"syntax": "setCamShakeParams [posCoef, vertCoef, horzCoef, bankCoef, interpolation]", "server": false, "broadcasted": false, "description": "Set camera shake parameters. Will not have any effect until shake is started via addCamShake.", "example": "setCamShakeParams [0.1, 1, 1, 1, true];", "local": false}, "BIS_fnc_arrayCompare": {"syntax": "[array1, array2] call BIS_fnc_arrayCompare", "server": false, "broadcasted": false, "description": "This function checks if two arrays are containing the same elements in the same order.", "example": "_array1 = [0,1,2]; _array2 = [0,1,2]; [_array1, _array2] call BIS_fnc_arrayCompare; // returns true", "local": false}, "lnbSetColor": {"syntax": "lnbSetColor [idc,[row,column],color]", "server": false, "broadcasted": false, "description": "Sets the color of the item with the given position of the 2D listbox. Color is in format Color.", "example": "_ctrl lnbSetColor [ [0,0], [1,0,0,1] ];", "local": true}, "diag_logSlowFrame": {"syntax": "diag_logSlowFrame [section, threshold]", "server": false, "broadcasted": false, "description": "Log all frames, where section takes longer than the threshold (in seconds).", "example": "diag_logSlowFrame ['total',0.3]", "local": false}, "fadeSpeech": {"syntax": "time fadeSpeech volume", "server": false, "broadcasted": false, "description": "Cause a smooth change in the master speech volume. The change duration is given by time, the target volume by volume. The default master is 1.0.", "example": "5 fadeSpeech 0.1;", "local": false}, "setSimpleTaskTarget": {"syntax": "task setSimpleTaskTarget [target, precisePosition]", "server": false, "broadcasted": false, "description": "Attach a target to the simple task.", "example": "task setSimpleTaskTarget [targetVehicle, true];", "local": false}, "serverCommand": {"syntax": "serverCommand command", "server": false, "broadcasted": false, "description": "Executes a server command. Which command is available for execution can be found with serverCommandAvailable and whether or not it can be executed with serverCommandExecutable.", "example": "serverCommand \"#logout\";", "local": false}, "getElevationOffset": {"syntax": "getElevationOffset", "server": false, "broadcasted": false, "description": "Returns the map elevation offset from [map]/config.cpp. Returns 0 if there's no elevationOffset defined in the config of the current world.", "example": "_offset = getElevationOffset;", "local": false}, "BIS_fnc_threat": {"syntax": "[unit] call BIS_fnc_threat", "server": false, "broadcasted": false, "description": "Calculates threat values of given unit.", "example": "_threatLevel = [ player ] call BIS_fnc_threat;", "local": false}, "setCamUseTi": {"syntax": "Bool setCamUseTI modeIndex", "server": false, "broadcasted": false, "description": "Activates thermal vision. Mode index defines what sort of thermal vision it is:", "example": "true setCamUseTI 1;", "local": false}, "allowDamage": {"syntax": "object allowDamage allow", "server": false, "broadcasted": true, "description": "Allow or prevent an object being damaged (or injured, or killed). The command does not prevent object from taking scripted damage such as setHit, setHitIndex, setHitPointDamage or setDamage. To check if damage is allowed at current locality, see isDamageAllowed.", "example": "player allowDamage false;", "local": true}, "BIS_fnc_fps": {"syntax": "[duration, sceneId, startDelay] call BIS_fnc_fps", "server": false, "broadcasted": false, "description": "Function to measure FPS. Spawns code running for given time and displays result on screen via titleText, globalChat and diag_log. Variable BIS_fps_output is filled with diag_log content too.", "example": "_scriptHandle = [10, \"50 units on screen\", 3] call BIS_fnc_fps;", "local": false}, "BIS_fnc_invString": {"syntax": "[object] call BIS_fnc_invString", "server": false, "broadcasted": false, "description": "Returns inventory contents of given vehicle (unit). Note: for vehicles it returns mounted gun and its ammo, not cargo weapons and ammo.", "example": "[ player ] call BIS_fnc_invString;", "local": false}, "setVelocityTransformation": {"syntax": "object setVelocityTransformation [fromPosASL, toPosASL, fromVelocity, toVelocity, fromVectorDir, toVectorDir, fromVectorUp, toVectorUp, interval]", "server": false, "broadcasted": true, "description": "Interpolates and applies PositionASL, velocity, vectorDir and vectorUp to the given object based on the interval value.", "example": "_tracker setVelocityTransformation [ _currentPos, _nextPos, _currentVelocity, _nextVelocity, _currentVectorDir, _nextVectorDir, _currentVectorUp, _nextVectorUp, _interval ];", "local": true}, "addTeamMember": {"syntax": "team addTeamMember member", "server": false, "broadcasted": false, "description": "Add given member to given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.", "example": "_team addTeamMember _teamMember;", "local": true}, "waypointVisible": {"syntax": "waypointVisible waypoint", "server": false, "broadcasted": false, "description": "Returns the visibility of the waypoint. Returns 0 (Number) for a non valid waypoint.", "example": "_visible = waypointVisible [groupOne, 1];", "local": false}, "publicVariableClient": {"syntax": "clientID publicVariableClient varName", "server": false, "broadcasted": false, "description": "Send the variable value to the client computer - same limitations regarding variable type as publicVariable. The Client ID is the temporary ID given to a connected client for that session. You can find out this ID with the owner command (using it on a player's character, for example, will give you that players client ID).", "example": "3 publicVariableClient \"CTFscoreOne\";", "local": false}, "safeZoneX": {"syntax": "SafeZoneX", "server": false, "broadcasted": false, "description": "", "example": "_screenLeftBorderX = safeZoneX; // returns a float value < 0", "local": false}, "hcSelectGroup": {"syntax": "unit hcSelectGroup array", "server": false, "broadcasted": false, "description": "Select given group in high command bar.", "example": "player hcSelectGroup [group_1,group_2];", "local": false}, "ctrlRemoveEventHandler": {"syntax": "control ctrlRemoveEventHandler [handler name,id]", "server": false, "broadcasted": false, "description": "Remove a given event handler from the given control.", "example": "_map ctrlRemoveEventHandler [\"Draw\", _id];", "local": false}, "BIS_fnc_randomInt": {"syntax": "[min, max] call BIS_fnc_randomInt", "server": false, "broadcasted": false, "description": "Returns a random integer between the two passed numbers (inclusive). The order of parameters doesn't matter: it can be [min, max] or [max, min].", "example": "[1,3] call BIS_fnc_randomInt; // will return 1, 2 or 3", "local": false}, "registerTask": {"syntax": "teamMember registerTask entryName", "server": false, "broadcasted": false, "description": "Register a new task type. Parameters are defined in the given config class (subclass of CfgTasks).", "example": "Example needed", "local": false}, "teams": {"syntax": "teams", "server": false, "broadcasted": false, "description": "Return a list of teams in the current mission.", "example": "_teams = teams;", "local": false}, "createSimpleTask": {"syntax": "person createSimpleTask [name, parentTask]", "server": true, "broadcasted": false, "description": "Creates a new Task. The task effect is local, it will only exist on the client it was added.", "example": "_currentTask = player createSimpleTask [\"NewTask\"];", "local": false}, "markerBrush": {"syntax": "markerBrush name", "server": false, "broadcasted": false, "description": "Gets the marker brush. See setMarkerBrush.", "example": "if (markerBrush \"Marker1\" == \"Solid\") then {hint \"Marker1 is solid!\"}", "local": false}, "BIS_fnc_AAN": {"syntax": "[parseText \"Headline\", parseText \"Rolling Text\"] spawn BIS_fnc_AAN;", "server": false, "broadcasted": false, "description": "Function that adds an AAN overlay to the screen, with one headline and a rolling text on the bottom.", "example": "0 = [parseText \"AAN live in Takistan\", parseText \"Weather coming up hot and steamy - Takistan shelled again from border area\"] spawn BIS_fnc_AAN;", "local": false}, "BIS_fnc_flies": {"syntax": "[position,interval,areaSize] call BIS_fnc_flies", "server": false, "broadcasted": false, "description": "Spawns flies around position.", "example": "_flies = [position deadBody, 0.05, 1.5] call BIS_fnc_flies;", "local": false}, "cameraView": {"syntax": "cameraView", "server": false, "broadcasted": false, "description": "Returns mode of active camera view. Mode is one of:", "example": "if (cameraOn == _vehicle && cameraView == \"External\") then { _vehicle switchCamera \"Internal\"; };", "local": false}, "addBackpack": {"syntax": "unit addBackpack packClassName", "server": false, "broadcasted": true, "description": "Adds a backpack for a unit. If a unit already has a backpack, the old backpack will be placed on the ground under the unit. Classname list of available backpacks\u00a0:", "example": "this addBackpack \"TK_RPG_Backpack_EP1\";", "local": true}, "gearSlotData": {"syntax": "gearSlotData control", "server": false, "broadcasted": false, "description": "Returns gear slot item name.", "example": "Open any ammobox and click by any gear slots", "local": false}, "ppEffectCreate": {"syntax": "ppEffectCreate [name, priority]", "server": false, "broadcasted": false, "description": "Creates Post process effects specified by effect name and priority. Supported effects are:", "example": "_ppGrain = ppEffectCreate [\"filmGrain\", 2005];", "local": false}, "BIS_fnc_arrayInsert": {"syntax": "[array1, array2, index] call BIS_fnc_arrayInsert", "server": false, "broadcasted": false, "description": "Inserts the elements of one array into another, at a specified index. Neither arrays are touched by reference, a new array is returned.", "example": "_result = [[0,1,2,3,4], [\"a\",\"b\",\"c\"], 1] call BIS_fnc_arrayInsert; // returns [0,\"a\",\"b\",\"c\",1,2,3,4]", "local": false}, "priority": {"syntax": "priority task", "server": false, "broadcasted": false, "description": "Return the priority of the task.", "example": "_prioTsk01 = priority task01", "local": false}, "addResources": {"syntax": "teamMember addResources [resource1, resource2, ...]", "server": true, "broadcasted": false, "description": "Adds resources to a team member.", "example": "Example needed", "local": false}, "BIS_fnc_diagAnim": {"syntax": "[target] call BIS_fnc_diagAnim", "server": false, "broadcasted": false, "description": "Displays or logs animation states:", "example": "call BIS_fnc_diagAnim;", "local": false}, "selectNoPlayer": {"syntax": "selectNoPlayer", "server": false, "broadcasted": false, "description": "Switches player to no unit, makes player return objNull. SP only, the command is completely ignored in MP.", "example": "Single player: selectNoPlayer; hint str player; //<NULL-object> Rough multiplayer emulation: _noPlayer = createGroup sideLogic createUnit [ \"Logic\", [0,0,1000], [], 0, \"NONE\" ]; selectPlayer _noPlayer; hint str player; //L Charlie 4-3:1 (KK)", "local": false}, "setDrawIcon": {"syntax": "map setDrawIcon [object,texture,color,offset,width,height,maintain size?,angle,string identifier,shadow,is3D,draw line?,priority]", "server": false, "broadcasted": false, "description": "Set the icon to be shown in 2D editor for the specified editor object. If maintain size is false,icon will not scale depending on the scale,of the map. If maintain size is a number,the icon will maintain size,if map scale is below that number. is3D,show line and priority are,optional.", "example": "Example needed", "local": false}, "lnbClear": {"syntax": "lnbClear idc", "server": false, "broadcasted": false, "description": "Clears all items in the given listbox or combobox.", "example": "lnbClear _ctrl;", "local": false}, "BIS_fnc_inTrigger": {"syntax": "[area, position, returnDistance, includeFloorCeiling] call BIS_fnc_inTrigger", "server": false, "broadcasted": false, "description": "Detects whether position is within area (Since Arma 3 v1.57 an engine solution is available inArea) or calculates distance to the nearest edge of trigger area by using optional params.", "example": "_trigger = createTrigger [\"EmptyDetector\", getPosATL player]; _trigger setTriggerArea [10, 10, 0, false]; _inTrigger = [_trigger, player] call BIS_fnc_inTrigger; //_inTrigger = true", "local": false}, "switchAction": {"syntax": "soldier switchAction action", "server": false, "broadcasted": false, "description": "When used on a person, the given action is started immediately (there is no transition). Use switchmove \"\" to switch back to the default movement if there is no transition back, otherwise the person may be stuck.", "example": "soldierOne switchAction \"SitDown\"", "local": false}, "lnbPicture": {"syntax": "lnbPicture [IDC, [row, column]]", "server": false, "broadcasted": false, "description": "Returns the picture name or path of the item with the given position of the 2D listbox.", "example": "lnbPicture [200, [1, 1]];", "local": true}, "weaponState": {"syntax": "weaponState unit", "server": false, "broadcasted": false, "description": "Returns the currently selected weapon state for unit or vehicle.", "example": "_wsPlayer = weaponState player; // [\"arifle_MXC_ACO_F\",\"arifle_MXC_ACO_F\",\"Single\",\"30Rnd_65x39_caseless_mag\",30]", "local": false}, "BIS_fnc_infoText": {"syntax": "[string_1, string_2, string_n] spawn BIS_fnc_infoText", "server": false, "broadcasted": false, "description": "Display a text in the \"mission\" GUI area with some effects. Good for the beginning of a mission.", "example": "[ \"Somewhere on Altis\", format [\"Year\u00a0%1\", date select 0], mapGridPosition player ] spawn BIS_fnc_infoText;", "local": false}, "eyePos": {"syntax": "eyePos object", "server": true, "broadcasted": false, "description": "Returns the object's eyes / main turret position.", "example": "eyePos player", "local": false}, "closeOverlay": {"syntax": "closeOverlay map", "server": false, "broadcasted": false, "description": "Closes the current overlay without committing.", "example": "Example needed", "local": false}, "allUnits": {"syntax": "allUnits", "server": false, "broadcasted": false, "description": "Return a list of all units (all persons except agents) outside and inside vehicles, created on the following sides east, west, resistance/independent and civilian only. Does not contain units of sideLogic. Dead units and units awaiting for respawn are also excluded.", "example": "{_x setDamage 0.5; _x groupChat \"Braaains\"} forEach allUnits;", "local": false}, "mapCenterOnCamera": {"syntax": "mainmap mapCenterOnCamera enable", "server": false, "broadcasted": false, "description": "<control> mapCenterOnCamera <boolean> syntax enables/disables continuous centering of the main map type control on the camera position. Needs to be executed once.", "example": "//--- Minimap update ((uiNamespace getVariable \"BIS_UAV_DISPLAY\") displayCtrl 112410) mapCenterOnCamera true;", "local": false}, "items": {"syntax": "items unit", "server": true, "broadcasted": false, "description": "Returns an array of names of all special items of a vehicle or a soldier.", "example": "_itemsplayer = items player;", "local": false}, "removeDrawLinks": {"syntax": "map removeDrawLinks [from,param type]", "server": false, "broadcasted": false, "description": "Remove all drawn links for the given editor object for the given editor,object type. Pass an empty string as param type to remove all draw,links for an object.", "example": "Example needed", "local": false}, "kbReact": {"syntax": "person kbReact [receiver, topicName, sentenceID(, argumentArray1, argumentArray2, \u2026)]", "server": true, "broadcasted": false, "description": "Pass a non-verbal communication to the receiver. This command does as if the sentence was said and triggers the reaction scripts (AI FSM or player's conversation EH). See Conversations for more details.", "example": "unit1 kbReact [unit2, \"topicName\", \"speech1\"]; will trigger as if unit1 said the sentence (via kbTell) // unit2's FSM will react accordingly.", "local": false}, "nearRoads": {"syntax": "pos nearRoads radius", "server": false, "broadcasted": false, "description": "Find the road segments within the circle of given radius.", "example": "_list = player nearRoads 50;", "local": false}, "removeBackpack": {"syntax": "removeBackpack unit", "server": false, "broadcasted": true, "description": "Removes unit's backpack", "example": "removeBackpack this;", "local": true}, "hintSilent": {"syntax": "hintSilent text", "server": false, "broadcasted": false, "description": "Same as hint, but without a sound.", "example": "hintSilent \"You texte comes here\u00a0!\"", "local": false}, "BIS_fnc_supplydrop": {"syntax": "[airUnit,class] spawn BIS_fnc_supplydrop", "server": false, "broadcasted": false, "description": "Script for para-drop of objects. Spawns waitUntil that handles ground hit (detaching of object from parachute). Used by supplydrop service.", "example": "[ [BIS_airDropVeh, \"reammobox\"] spawn BIS_fnc_supplydrop;", "local": false}, "libraryDisclaimers": {"syntax": "libraryDisclaimers", "server": false, "broadcasted": false, "description": "Returns the library disclaimers.", "example": "hint str libraryDisclaimers; // as in Arma2 OA 1.62.95208", "local": false}, "rankId": {"syntax": "rankId unit", "server": false, "broadcasted": false, "description": "Return the rank of the given unit for comparison. Value may be\u00a0:", "example": "_myIdRank = rankId player;", "local": false}, "setPosATL": {"syntax": "object setPosATL pos", "server": true, "broadcasted": true, "description": "Sets the position of an object relative to the terrain.", "example": "player setPosATL [getPosATL player select 0, (getPosATL player select 1) - 10, getPosATL player select 2];", "local": false}, "BIS_fnc_greatestNum": {"syntax": "numbers call BIS_fnc_greatestNum", "server": false, "broadcasted": false, "description": "Returns the greatest number out of the passed set.", "example": "_result = [7,2,1,5,10] call BIS_fnc_greatestNum; //_result = 10", "local": false}, "BIS_fnc_help": {"syntax": "[] call BIS_fnc_help", "server": false, "broadcasted": false, "description": "Shows Function Library viewer, which contains list of all available functions, both official and unofficial.", "example": "[] call bis_fnc_help", "local": false}, "displayRemoveEventHandler": {"syntax": "display displayRemoveEventHandler [handler name,id]", "server": false, "broadcasted": false, "description": "Remove a given event handler from the given display.", "example": "moduleName_keyDownEHId = (findDisplay 46) displayRemoveEventHandler [\"keyDown\",5];", "local": false}, "setGroupIcon": {"syntax": "group setGroupIcon [id, icon, offset]", "server": false, "broadcasted": false, "description": "Sets group icon properties.", "example": "_target setGroupIcon [_icon, \"hc_selectedEnemy\"]; _target setGroupIcon [_icon, \"flag\"]; _grp setGroupIcon [_iconsize, _iconsizeclass, _offset]; _grp setGroupIcon [_newid, _icon, _offset]; _grp setGroupIcon [_icon, _iconclass];", "local": false}, "getObjectProxy": {"syntax": "map getObjectProxy object", "server": false, "broadcasted": false, "description": "Return the proxy object associated with the given editor object.", "example": "(findDisplay 128 displayCtrl 51) getObjectProxy \"_unit_1\" // returns the object 'B 1-1-A:1 (Sean Johnson)'", "local": false}, "BIS_fnc_inv": {"syntax": "[unit] call BIS_fnc_inv", "server": false, "broadcasted": false, "description": "Returns inventory contents of given vehicle (unit). For vehicles it returns mounted gun and its ammo, not cargo weapons and ammo.", "example": "[player] call BIS_fnc_inv;", "local": false}, "show3DIcons": {"syntax": "map show3DIcons bool", "server": false, "broadcasted": false, "description": "Toggle the drawing of 3D icons.", "example": "Example needed", "local": false}, "removeGroupIcon": {"syntax": "group removeGroupIcon iconID", "server": false, "broadcasted": false, "description": "Remove icon with given ID from group.", "example": "_target removeGroupIcon (_target getvariable \"hc_attackicon\");", "local": false}, "triggerActivation": {"syntax": "triggerActivation trigger", "server": true, "broadcasted": false, "description": "Returns trigger activation in the form [by, type, repeating]. Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "example": "_activation = triggerActivation someTrigger", "local": false}, "currentWeapon": {"syntax": "currentWeapon vehicle", "server": false, "broadcasted": false, "description": "Return the name of the currently selected weapon (on the primary turret for vehicles).", "example": "_weaponClass = currentWeapon (vehicle player);//Example: \"M16A2GL\"", "local": false}, "waypointAttachedObject": {"syntax": "waypointAttachedObject waypoint", "server": false, "broadcasted": false, "description": "Gets the object attached to the waypoint.", "example": "waypointAttachedObject [groupOne,1]", "local": false}, "editObject": {"syntax": "map editObject object", "server": false, "broadcasted": false, "description": "Show the edit object dialog for the given object.", "example": "Example needed", "local": false}, "setOwner": {"syntax": "object setOwner clientID", "server": false, "broadcasted": false, "description": "From server machine, change the ownership of an object to a given client. Returns true if locality was changed.", "example": "_someObject setOwner 12;", "local": false}, "assignedCargo": {"syntax": "assignedCargo vehicle", "server": false, "broadcasted": false, "description": "Returns the list of soldiers assigned to the given vehicle as a cargo.", "example": "_list = assignedCargo _vehicleName", "local": false}, "unitRecoilCoefficient": {"syntax": "unitRecoilCoefficient soldier", "server": false, "broadcasted": false, "description": "Returns recoil coefficient of a soldier.", "example": "_myRecoil = unitRecoilCoefficient player", "local": false}, "resources": {"syntax": "resources member", "server": true, "broadcasted": false, "description": "Returns the resources of a team member. Results are local to the PC on which command was executed.", "example": "resources teamMember _unit;", "local": false}, "removeMagazinesTurret": {"syntax": "vehicle removeMagazinesTurret [magazineName, turretPath]", "server": false, "broadcasted": true, "description": "Removes all magazines of the given type from given vehicle. Use turret path [-1] for driver's turret.", "example": "vehicle player removeMagazinesTurret [\"60rnd_cmflaremagazine\",[-1]]", "local": true}, "lockDriver": {"syntax": "vehicle lockDriver lock", "server": false, "broadcasted": true, "description": "Lock the driver position of the vehicle. This command must be executed where vehicle is local. This command will remove user get in action (not get out) but will also stop player getting into vehicle via script commands unlike lock command", "example": "vehicleName lockDriver true;", "local": true}, "getTerrainHeightASL": {"syntax": "getTerrainHeightASL position", "server": false, "broadcasted": false, "description": "Returns the terrain height above the sea for the given position.", "example": "_height = getTerrainHeightASL (position player);", "local": false}, "fromEditor": {"syntax": "fromEditor teamMember", "server": false, "broadcasted": false, "description": "Return if given team was inserted directly from mission editor.", "example": "_fromEditor = fromEditor _member", "local": false}, "onGroupIconClick": {"syntax": "onGroupIconClick command", "server": false, "broadcasted": false, "description": "Defines an action performed when player clicked on group marker (3D or in a map). The code executed once. This EH, unlike onGroupIconOverEnter and onGroupIconOverLeave, has one more param which returns 1 if RMB was pressed, 0 otherwise.", "example": "onGroupIconClick { // Passed values for _this are: _is3D = _this select 0; _group = _this select 1; _wpID = _this select 2; _RMB = _this select 3; _posx = _this select 4; _posy = _this select 5; _shift = _this select 6; _ctrl = _this select 7; _alt = _this select 8; _message = format [\"____ Info ____\"]; {_message = _message + format [\"\\n\u00a0%1\",_x]} forEach _this; hint _message; }", "local": false}, "allowCrewInImmobile": {"syntax": "vehicle allowCrewInImmobile bool", "server": false, "broadcasted": false, "description": "If true, units can be in a vehicle with broken tracks/wheels.", "example": "_vehicle allowCrewInImmobile true;", "local": false}, "getPosATL": {"syntax": "getPosATL object", "server": true, "broadcasted": false, "description": "Returns the position of an object relative to the terrain.", "example": "_objPosition = getPosATL player", "local": false}, "taskState": {"syntax": "String = taskState task", "server": false, "broadcasted": false, "description": "Returns the current state of a task. Possible return values are:", "example": "tskSomeTask = player createSimpleTask [\"NewTask\"]; hint format[\"Taskstate:\u00a0%1\", taskState tskSomeTask];", "local": false}, "currentVisionMode": {"syntax": "currentVisionMode unit", "server": true, "broadcasted": false, "description": "Returns current vision mode of unit's weapon.", "example": "_currMode = currentVisionMode gunner _tank", "local": false}, "ppEffectDestroy": {"syntax": "ppEffectDestroy effect", "server": false, "broadcasted": false, "description": "Destroy Post process effects given by handle or array of handles.", "example": "ppEffectDestroy _hndl;", "local": false}, "BIS_fnc_sceneCreateSceneTrigger": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/******************************************************************************* * * version: 1.0 * name: * description: create trigger for scene which can interrupt scene with name passed during creating the trigger * parameters: described bellow *"}, "setToneMappingParams": {"syntax": "toneName setToneMappingParams params", "server": false, "broadcasted": false, "description": "Edits tone mapping parameters.", "example": "\"Filmic\" setToneMappingParams [0.2, 0.30, 0.20, 0.30, 0.01, 3.750, 6, 4]", "local": false}, "lockedTurret": {"syntax": "vehicle lockedTurret turretPath", "server": false, "broadcasted": false, "description": "Check whether gunner position of the vehicle turret is locked.", "example": "_locked = tank lockedTurret [0];", "local": false}, "members": {"syntax": "members team", "server": false, "broadcasted": false, "description": "Return a list of members in given team.", "example": "_members = members _team", "local": false}, "onPreloadStarted": {"syntax": "onPreloadStarted command", "server": false, "broadcasted": false, "description": "Defines an action performed just before the preload screen started. Preload event occurs after briefing screen on mission start.", "example": "onPreloadStarted {diag_log \"preload started\"};", "local": false}, "playActionNow": {"syntax": "soldier playActionNow action", "server": false, "broadcasted": true, "description": "When used on a person, a smooth transition to the given action will be initiated, but all previous playAction are discarded.", "example": "soldierOne playActionNow \"SitDown\";", "local": true}, "scriptName": {"syntax": "scriptName name", "server": false, "broadcasted": false, "description": "Assign a user friendly name to the VM script this command is executed from. Once name is assigned, it cannot be changed.", "example": "scriptName \"leetScript.sqf\";", "local": false}, "kbHasTopic": {"syntax": "person kbHasTopic topicName", "server": false, "broadcasted": false, "description": "Check if conversation topic was registered to given person. See Conversations for more details.", "example": "_obiHasTopic = player kbHasTopic \"helloThereGeneralK\";", "local": false}, "isForcedWalk": {"syntax": "isForcedWalk unitName", "server": false, "broadcasted": false, "description": "Returns true if player is forced to walk with forceWalk.", "example": "_bool = isForcedWalk player;", "local": false}, "displayRemoveAllEventHandlers": {"syntax": "display displayRemoveAllEventHandlers handlerName", "server": false, "broadcasted": false, "description": "Remove all event handlers from the given display.", "example": "Example needed", "local": false}, "removeDrawIcon": {"syntax": "map removeDrawIcon [object,string identifier]", "server": false, "broadcasted": false, "description": "Removes an icon for an editor object.", "example": "Example needed", "local": false}, "setCurrentTask": {"syntax": "object setCurrentTask task", "server": false, "broadcasted": false, "description": "Set the task as a current task of the person.", "example": "player setCurrentTask tskKillSpongebob;", "local": false}, "BIS_fnc_sceneGetParticipants": {"syntax": "[unit, maxDistance] call BIS_fnc_sceneGetParticipants", "server": false, "broadcasted": false, "description": "gets members of unit's group who are in unit's range.", "example": "[player, 20] call BIS_fnc_sceneGetParticipants;", "local": false}, "assignedGunner": {"syntax": "assignedGunner vehicle", "server": false, "broadcasted": false, "description": "Returns the soldier assigned to the given vehicle as a gunner.", "example": "_gunner = assignedGunner vehicle player;", "local": false}, "setTaskResult": {"syntax": "task setTaskResult [state,result]", "server": false, "broadcasted": false, "description": "Set a result of the task.", "example": "Example needed", "local": false}, "BIS_fnc_transportService": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* File: transportService.sqf Description: Transportation system Parameter(s): 1: <object> unit allowed to use the transport system 2: <object> vehicle providing transport 3: <array> positions to be chosen by player; accepted strings are \"pickup\" and \"unload\", the second position is defined by the next paramter (OPTIONAL) 4: <position> (NEEDED ONLY IF PARAMETER #3 IS USED) Returns: N/A */ //MP framework init (used for move command given to transporter vehicle)"}, "addGroupIcon": {"syntax": "group addGroupIcon [iconClass, offset]", "server": false, "broadcasted": false, "description": "Adds icon to a group. Returns icon ID, Control icons visibility with setGroupIconsVisible.", "example": "groupName addGroupIcon [\"b_inf\", [offsetX, offsetY]]", "local": false}, "reversedMouseY": {"syntax": "reversedMouseY", "server": false, "broadcasted": false, "description": "Returns true if mouse vertical axe is inverted.", "example": "if (reversedMouseY) then { hint \"Dude!\" };", "local": false}, "BIS_fnc_recompile": {"syntax": "[] call BIS_fnc_recompile", "server": false, "broadcasted": false, "description": "Recompiles all functions.", "example": "[] call BIS_fnc_recompile;", "local": false}, "getObjectArgument": {"syntax": "map getObjectArgument [object, argument]", "server": false, "broadcasted": false, "description": "Return name of object argument in mission editor.", "example": "// returns string \"[1009.0351, 1319.4928]\" (findDisplay 128 displayCtrl 51) getObjectArgument [\"_unit_1\", \"POSITION\"] // returns array [1009.0351, 1319.4928] (findDisplay 128 displayCtrl 51) evalObjectArgument [\"_unit_1\", \"POSITION\"]", "local": false}, "selectDiarySubject": {"syntax": "person selectDiarySubject subject", "server": false, "broadcasted": false, "description": "Selects the subject page in a log.", "example": "player selectDiarySubject \"someSubject\";", "local": false}, "lockCargo": {"syntax": "vehicle lockCargo lock", "server": false, "broadcasted": true, "description": "Lock all cargo positions of a vehicle or lock by index. This command must be executed where vehicle is local. This command will remove user get in action (not get out) but will also stop player getting into vehicle via script commands unlike lock command", "example": "vehicleName lockCargo true;", "local": true}, "hideObject": {"syntax": "hideObject object", "server": true, "broadcasted": false, "description": "Hide entity. Can be used on soldiers and vehicles, also on static objects.", "example": "hideObject unitName;", "local": false}, "isDedicated": {"syntax": "isDedicated", "server": false, "broadcasted": false, "description": "Return true if the machine (executing the command) is a dedicated multiplayer server. In single player returns false.", "example": "if (isDedicated) then {diag_log \"Dedicated Server on the run\u00a0!\";};", "local": false}, "safeZoneXAbs": {"syntax": "safeZoneXAbs", "server": false, "broadcasted": false, "description": "Returns SafeZone left border (of all monitors, in case there's more than one)", "example": "_szX = safeZoneXAbs;", "local": false}, "BIS_fnc_sceneSetAnimationsForGroup": {"syntax": "param call BIS_fnc_sceneSetAnimationsForGroup;", "server": false, "broadcasted": false, "description": "Plays a range of animations for a specific set of units, intended for use during cutscenes.", "example": "setAnims = [group player, [\"AmovPercMstpSrasWrflDnon\"]] call BIS_fnc_sceneSetAnimationsForGroup;", "local": false}, "numberToDate": {"syntax": "numberToDate [year,time]", "server": false, "broadcasted": false, "description": "Convert float number to a date.", "example": "_date = numberToDate [2008,0.5324]; //[2008,7,13,7,49]", "local": false}, "createDiaryLink": {"syntax": "createDiaryLink [subject,object,text]", "server": false, "broadcasted": false, "description": "Create a link to the section of diary given by subject. Record is selected based on given object (diary record,task or unit).", "example": "_link = createDiarySubject [\"Group\",player,\"Player\"]", "local": false}, "waypointTimeout": {"syntax": "waypointTimeout waypoint", "server": false, "broadcasted": false, "description": "Gets the waypoint timeout values.", "example": "waypointTimeout [groupOne,1]", "local": false}, "ctrlAutoScrollSpeed": {"syntax": "ctrlAutoScrollSpeed control", "server": false, "broadcasted": false, "description": "Returns number of seconds to auto-scroll one line. -1 if auto-scroll is disabled. -2 if scrollbar not present.", "example": "_ctrlSpeed = ctrlAutoScrollSpeed _ctrlGroup;", "local": false}, "BIS_fnc_returnGroupComposition": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* File: returnGroupComp.sqf Description: Function which returns a logical group composition based on a number of parameters. Parameter(s): _this select 0: side (Side). _this select 1: number of characters (Number). _this select 2: (optional) type (String): - \"riflesquad\": (default) standard rifle squad. - \"sniper\": sniper team. Returns: Array of Strings - object types. TODO: use CfgGroups instead? */ //Validate parameter count"}, "BIS_fnc_randomIndex": {"syntax": "array call BIS_fnc_randomIndex", "server": false, "broadcasted": false, "description": "Return a random integer representing an index in the passed array.", "example": "[\"a\",0,objNull] call BIS_fnc_randomIndex; // returns 0, 1 or 2", "local": false}, "safeZoneH": {"syntax": "SafeZoneH", "server": false, "broadcasted": false, "description": "", "example": "_screenHeight = safeZoneH;", "local": false}, "BIS_fnc_getPitchBank": {"syntax": "object call BIS_fnc_getPitchBank", "server": false, "broadcasted": false, "description": "Returns the pitch and bank of an object, in degrees. Yaw can be found using the getDir command.", "example": "_pitchBank = vehicle player call BIS_fnc_getPitchBank;", "local": false}, "failMission": {"syntax": "failMission endtype", "server": false, "broadcasted": false, "description": "Finish the mission. If the server is set to run persistent mission, failMission will not end the mission when last player gets kicked to the lobby. Use endMission to end the mission. The end type can be:", "example": "failMission \"LOSER\";", "local": false}, "setCamShakeDefParams": {"syntax": "setCamShakeDefParams [power, duration, frequency, minSpeed, minMass, caliberCoefHit, vehicleCoef]", "server": false, "broadcasted": false, "description": "Sets camera shake default params, the default camshake when, for example, you freelook at your character shooting a 12.7mm sniper rifle or firing tank cannon. Would also work in 1st person.", "example": "setCamShakeDefParams [1, 2, 3, 4, 5, .5, .5];", "local": false}, "removeAllMPEventHandlers": {"syntax": "objectName removeAllMPEventHandlers event", "server": true, "broadcasted": true, "description": "Removes all MP event handlers of the given type which were added by addMPEventHandler. Command needs to be executed only on one PC for MP event handler to be removed globally.", "example": "player removeAllMPEventHandlers \"mpkilled\";", "local": false}, "setVehicleTiPars": {"syntax": "vehicle setVehicleTIPars [engine, wheels, weapon]", "server": false, "broadcasted": false, "description": "Sets the \"heat\" state of different vehicle parts (for TI detection). This allows simulation of heated up parts of a vehicle without it actually having to utilize them. (0: cold, 1: hot)", "example": "vehicle player setVehicleTIPars [1,1,1];", "local": false}, "setObjectProxy": {"syntax": "map setObjectProxy [object,proxy object]", "server": false, "broadcasted": false, "description": "Set the proxy object associated with the given editor object.", "example": "_map setObjectProxy [\"_group_0\", vehicle (leader _group)];", "local": false}, "ctrlAddEventHandler": {"syntax": "control ctrlAddEventHandler [handler,function]", "server": false, "broadcasted": false, "description": "Add an event handler (User Interface Event Handlers) to the given control. Returns id of the handler or -1 when failed.", "example": "_map ctrlAddEventHandler [\"draw\",\"_this call BIS_fnc_strategicMapOpen_draw\"];", "local": false}, "BIS_fnc_arrayUnShift": {"syntax": "[array, value] call BIS_fnc_arrayUnShift", "server": false, "broadcasted": false, "description": "This function adds an element to the beginning of an array and returns the array. The array is passed by reference so changes inside the function will be reflected outside of it.", "example": "_array = [2,3,4]; [_array, 1] call BIS_fnc_arrayUnShift; // _array is now [1,2,3,4]", "local": false}, "switchGesture": {"syntax": "soldier switchGesture moveName", "server": false, "broadcasted": false, "description": "When used on a person,the given move is started immediately (there is no transition).", "example": "soldierOne switchGesture \"Wave\";", "local": false}, "execEditorScript": {"syntax": "map execEditorScript [object,script]", "server": false, "broadcasted": false, "description": "Execute an editor script for the specified object.", "example": "_map execEditorScript [\"_team_1\",\"create\"]", "local": false}, "removeMPEventHandler": {"syntax": "unitName removeMPEventHandler [event, index]", "server": true, "broadcasted": true, "description": "Removes MP event handler added by addMPEventHandler. Format of handler is [type,index]. Index is returned by addMPEventHandler. When any handler is removed, all handler indices highter than the deleted one should decremented", "example": "player removeMPEventHandler [\"killed\", 0];", "local": false}, "nMenuItems": {"syntax": "map nMenuItems menuName", "server": false, "broadcasted": false, "description": "Returns the total number of user-added menu items belonging to the given menu.", "example": "Example needed", "local": false}, "lnbDeleteColumn": {"syntax": "lnbDeleteColumn [idc,index]", "server": false, "broadcasted": false, "description": "Removes column with given index from ListNBox control.", "example": "_ctrl lnbDeleteColumn 1;", "local": true}, "assignedTeam": {"syntax": "assignedTeam unitName", "server": false, "broadcasted": false, "description": "Returns the team the unit belongs to. Possible values:", "example": "_team = assignedTeam player;", "local": true}, "hostMission": {"syntax": "hostMission [pConfig, pDisplay]", "server": false, "broadcasted": false, "description": "Host the mp mission described by config class. Should be called as reaction to some UI action in some dialog. For example you can start a MP scenario from a button. It creates a host and takes you to the lobby with the scenario loaded. You need to provide the display which is active when the hostMission command is called.", "example": "hostMission [configMissionName, display];", "local": false}, "safeZoneY": {"syntax": "SafeZoneY", "server": false, "broadcasted": false, "description": "", "example": "_screenTopBorderY = safeZoneY; // returns a float value < 0", "local": false}, "remoteControl": {"syntax": "who remoteControl whom", "server": false, "broadcasted": true, "description": "Switches on remote control of the unit. Command needs to be executed locally to the player. If driver is remote it will get transferred to players PC.", "example": "Set player remote control of driver:player remoteControl driver UAV; driver UAV switchCamera \"Internal\"; //switchCamera required //sometimes switchCamera is not needed player remoteControl driver UAV;", "local": true}, "copyFromClipboard": {"syntax": "copyFromClipboard", "server": false, "broadcasted": false, "description": "Return the content of the (text) clipboard.", "example": "hint copyFromClipboard;", "local": false}, "diag_tickTime": {"syntax": "diag_tickTime", "server": false, "broadcasted": false, "description": "Real time spent from the start of the game. Expressed in fractions of second. Resolution of 1 tick is 1 ms.", "example": "_start = diag_tickTime; //code _stop = diag_tickTime; diag_log format [\"%1\",_stop - _start];", "local": false}, "synchronizeObjectsRemove": {"syntax": "unit synchronizeObjectsRemove [objects]", "server": true, "broadcasted": true, "description": "Remove given objects from the unit's list of synchronized objects.", "example": "Example needed", "local": false}, "clearBackpackCargoGlobal": {"syntax": "clearBackpackCargoGlobal unit", "server": true, "broadcasted": true, "description": "Removes all backpacks from the vehicle cargo space. MP synchronized.", "example": "clearBackpackCargoGlobal jeepOne;", "local": false}, "kbTell": {"syntax": "person kbTell [receiver, topicName, sentenceClass(, argumentArray1, argumentArray2, (\u2026), forceRadio)]", "server": false, "broadcasted": false, "description": "Make the person tell to the receiver the sentence. See Conversations for more details.", "example": "player kbTell [BIS_HQ, \"myTopic\", \"playerSentence1\"];", "local": false}, "setMarkerAlpha": {"syntax": "marker setMarkerAlpha alpha", "server": false, "broadcasted": true, "description": "Sets the marker alpha. The marker is modified on all computers in a network session.", "example": "\"my_marker\" setMarkerAlpha 0.5;", "local": false}, "BIS_fnc_variableSpaceRemove": {"syntax": "[object,varName,element,global,inArray] call BIS_fnc_variableSpaceRemove", "server": false, "broadcasted": false, "description": "Remove element from variable from someone's variable space.", "example": "[ player,\"someVar\",1337,true ] call BIS_fnc_variableSpaceRemove;", "local": false}, "lnbCurSelRow": {"syntax": "lnbCurSelRow idc", "server": false, "broadcasted": false, "description": "Returns the index of the selected row id 2D listbox.", "example": "lnbCurSelRow _ctrl;", "local": false}, "targetsAggregate": {"syntax": "[speaker, side, unit, place, time] targetsAggregate candidates", "server": false, "broadcasted": false, "description": "Aggregate candidates.", "example": "_aggregation = [_this,\"\",\"\",\"\",\"\"] targetsAggregate _selected;//ca\\characters\\scripts\\reactCore_Full.fsm", "local": false}, "getFriend": {"syntax": "side1 getFriend side2", "server": true, "broadcasted": false, "description": "Returns if sides are friendly or hostile. For a value smaller than 0.6 it results in being enemy, otherwise it's friendly. See also Side relations.", "example": "value = west getFriend east;", "local": false}, "unitBackpack": {"syntax": "unitBackpack unit", "server": false, "broadcasted": false, "description": "Returns unit's backpack", "example": "myBackpack = unitBackpack player", "local": false}, "isRealTime": {"syntax": "isRealTime map", "server": false, "broadcasted": false, "description": "Returns true if the mission editor is operating in real time mode.", "example": "_isRealTime = isRealTime _map", "local": false}, "buildingExit": {"syntax": "building buildingExit index", "server": false, "broadcasted": false, "description": "Returns the given indexed exit in a building. The returned value is in format Position.", "example": "_building buildingExit 0", "local": false}, "scoreSide": {"syntax": "scoreSide side", "server": false, "broadcasted": false, "description": "Returns score for the given side. MP Only.", "example": "_number = scoreSide west;", "local": false}, "BIS_fnc_crows": {"syntax": "[position,areaSize,number,height] call BIS_fnc_crows", "server": false, "broadcasted": false, "description": "Spawns flock of crows circling the area.", "example": "bis_crows = [BIS_scientist, 20, 8, 20] call BIS_fnc_crows;", "local": false}, "removeMenuItem": {"syntax": "map removeMenuItem index", "server": false, "broadcasted": false, "description": "Removes a previously added menu item.", "example": "Example needed", "local": false}, "showCommandingMenu": {"syntax": "showCommandingMenu name", "server": false, "broadcasted": false, "description": "Create the commanding menu described by the given config class or menu name. When the name is empty, the current menu is hidden.", "example": "showCommandingMenu \"\";", "local": false}, "AISFinishHeal": {"syntax": "AISFinishHeal [unit, healer, healercanheal]", "server": false, "broadcasted": false, "description": "Alternative Injury Simulation (AIS) end state. Used to tell engine that script side healing is done when using \"HandleHeal\" event handler.", "example": "AISFinishHeal [_wounded, _medic, true];", "local": false}, "sideUnknown": {"syntax": "sideUnknown", "server": false, "broadcasted": false, "description": "The unknown side.", "example": "//soldier1 and soldier2 of different sides and out of sight soldier1 reveal soldier2; hint str (soldier1 nearTargets 1000); //returns: [[[1557.96,5047.4,1.32402],\"SoldierWB\",UNKNOWN,0.0155183,soldier2,5]] soldier1 reveal [soldier2,1.5]; //returns: [[[1556.52,5050.08,1.32402],\"SoldierWB\",WEST,0.0211193,soldier2,5]]", "local": false}, "playScriptedMission": {"syntax": "playScriptedMission [world,expression,config,ignoreChildWindow]", "server": false, "broadcasted": false, "description": "Load the given world, launch an empty mission and execute the given, expression. Config (optional) can reference to the config entry, replacing description.ext for this mission.", "example": "playScriptedMission [ \"desert_e\", { private[\"_handle\"]; _handle = execVM \"\\ca\\missions_e\\data\\scenes\\credits1\\init.sqf\"; }, configFile/\"CfgMissions\"/\"Cutscenes\"/\"Credits\" ];", "local": false}, "waypointHousePosition": {"syntax": "waypointHousePosition waypoint", "server": false, "broadcasted": false, "description": "Returns buildingPos index assigned to the waypoint.", "example": "waypointHousePosition [groupOne,1]", "local": false}, "BIS_fnc_sortNum": {"syntax": "array call BIS_fnc_sortNum", "server": false, "broadcasted": false, "description": "Sorts an array of numbers from lowest (left) to highest (right). The passed array is modified by reference. This function uses the quick sort algorithm.", "example": "[5,9,987,6,97,8,6] call BIS_fnc_sortNum;//Returns [5,6,6,8,9,97,987]", "local": false}, "canUnloadInCombat": {"syntax": "canUnloadInCombat vehicle", "server": false, "broadcasted": false, "description": "Check if cargo of this vehicle want to get out when in combat.", "example": "if (canUnloadInCombat _vehicle) then {...};", "local": false}, "BIS_fnc_customGPSvideo": {"syntax": "[path,sizeCoef] spawn BIS_fnc_customGPSvideo", "server": false, "broadcasted": false, "description": "Plays in-game video in GPS frame.", "example": "_script = [\"\\ca\\video_pmc\\CP00_Reynolds_b.ogv\",1.04] spawn BIS_fnc_customGPSvideo; waitUntil {scriptDone _script};", "local": false}, "faction": {"syntax": "faction unitName", "server": true, "broadcasted": false, "description": "Gets unit faction. Factions are defined under CfgFactionClasses. If the given faction is not defined, the command returns empty string. Standard Factions include:", "example": "_playersFaction = faction player;", "local": false}, "BIS_fnc_distance2D": {"syntax": "[param1, param2] call BIS_fnc_distance2D", "server": false, "broadcasted": false, "description": "Returns the distance between two objects or positions.", "example": "[player, rescueHelicopter] call BIS_fnc_distance2D;", "local": false}, "BIS_fnc_dirIndicator": {"syntax": "[origin, target, color, sizeCoef] call BIS_fnc_dirIndicator", "server": false, "broadcasted": false, "description": "Show a 4-directions indicator.", "example": "[player, TheBoss, [0.706, 0.0745, 0.0196, 1]] call BIS_fnc_dirIndicator;", "local": false}, "importAllGroups": {"syntax": "importAllGroups map", "server": false, "broadcasted": false, "description": "Imports all groups into the RTE.", "example": "Example needed", "local": false}, "forceWalk": {"syntax": "unit forceWalk value", "server": false, "broadcasted": false, "description": "Forces unit to walk even if run or sprint is selected.", "example": "player forceWalk true;", "local": true}, "lnbAddArray": {"syntax": "lnbAddArray [idc, [[[text,text],[value,..],[data,..]],[[text,text],[value,..],[data,..]],]]", "server": false, "broadcasted": false, "description": "Adds list of rows of strings.", "example": "lnbAddArray [102,[[[\"#1\"],[1],[\"#1\"]]]];", "local": true}, "morale": {"syntax": "morale unit", "server": false, "broadcasted": false, "description": "Checks a current morale level of the unit (-1..+1).", "example": "morale (leader player);//result is 0.5", "local": false}, "boundingCenter": {"syntax": "boundingCenter object", "server": false, "broadcasted": false, "description": "Returns the position of original (loaded) center of object in model coordinates.", "example": "_center = boundingCenter TruckOne", "local": false}, "useAudioTimeForMoves": {"syntax": "soldier useAudioTimeForMoves toggle", "server": false, "broadcasted": false, "description": "Switch between elapsed game time and audio time being used as animation timer. Used for audio/animation synchronization.", "example": "player useAudioTimeForMoves true", "local": false}, "clearGroupIcons": {"syntax": "clearGroupIcons group", "server": false, "broadcasted": false, "description": "Removes all icon from group.", "example": "clearGroupIcons (group player);", "local": false}, "lineIntersectsWith": {"syntax": "lineIntersectsWith [begPos, endPos, objIgnore1, objIgnore2, sortByDistance]", "server": true, "broadcasted": false, "description": "Returns objects intersecting with the virtual line from begPos to endPos. By default resulting array of intersecting objects is unsorted. To sort by distance set sortByDistance param to true.", "example": "_objects = lineIntersectsWith [eyePos player, AGLtoASL screenToWorld [0.5,0.5]];", "local": false}, "execFSM": {"syntax": "arguments execFSM filename", "server": false, "broadcasted": false, "description": "Executes scripted FSM and returns the FSM handle or 0 when failed. The FSM file is first searched in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. Argument (if any) are available in _this variable inside FSM. In Arma 3 FSM handle is also available in _thisFSM variable.", "example": "_id = player execFSM \"test.fsm\";", "local": false}, "BIS_fnc_nearestNum": {"syntax": "[values, value] call BIS_fnc_nearestNum", "server": false, "broadcasted": false, "description": "Returns the provided set closest number to the target number.", "example": "_closestValueTo4 = [[1,5,10], 4] call BIS_fnc_nearestNum; // returns 5", "local": false}, "updateMenuItem": {"syntax": "map updateMenuItem [menu item index,text,command]", "server": false, "broadcasted": false, "description": "Sets the text and command for the menu item. index is index as returned from addMenuItem command. command is optional.", "example": "Example needed", "local": false}, "onGroupIconOverEnter": {"syntax": "onGroupIconOverEnter command", "server": false, "broadcasted": false, "description": "Defines an action performed when player moves pointer over group marker (3D or in a map). The code will execute continuously while pointer is over icon.", "example": "onGroupIconOverEnter { // Passed values for _this are: _is3D = _this select 0; _group = _this select 1; _wpID = _this select 2; _posx = _this select 3; _posy = _this select 4; _shift = _this select 5; _ctrl = _this select 6; _alt = _this select 7; _message = format [\"____ Info ____\"]; {_message = _message + format [\"\\n\u00a0%1\",_x]} forEach _this; hint _message; }", "local": false}, "BIS_fnc_dotProduct": {"syntax": "[vector1, vector2] call BIS_fnc_dotProduct;", "server": false, "broadcasted": false, "description": "Dot product of two vectors.", "example": "[[1,2,3], [1,2,3]] call BIS_fnc_dotProduct; //Returns: 1*1+2*2+3*3 = 14", "local": false}, "BIS_fnc_geometricMean": {"syntax": "array call BIS_fnc_geometricMean", "server": false, "broadcasted": false, "description": "Returns the geometric mean of an array of numbers.", "example": "[0,1,3] call BIS_fnc_geometricMean;//Returns 1.73205", "local": false}, "waypointSpeed": {"syntax": "waypointSpeed waypoint", "server": false, "broadcasted": false, "description": "Gets the waypoint speed. Possible values are:", "example": "_speed = waypointSpeed [groupOne,1];", "local": false}, "addMagazineTurret": {"syntax": "vehicle addMagazineTurret [magazineName, turretPath, ammoCount]", "server": false, "broadcasted": true, "description": "Adds a magazine to the turret. Use turret path [-1] for driver's turret. Note: you may create invalid combinations by using this function, for example by adding 20 grenades. When doing so, application behaviour is undefined. Since Arma 3 v1.55.133817 it is possible to set custom ammo count in added magazine.", "example": "_tank addMagazineTurret [\"SmokeLauncherMag\",[0,0]];", "local": true}, "sendUDPMessage": {"syntax": "sendUDPMessage [ip, port, message]", "server": false, "broadcasted": false, "description": "Send message to given address using UDP protocol. Returns false if the message has not been delivered Note: Not implemented (see talk page for more info).", "example": "_bool = sendUDPMessage [\"192.168.0.1\", 2302, \"Here goes you message...\"];", "local": false}, "onGroupIconOverLeave": {"syntax": "onGroupIconOverLeave command", "server": false, "broadcasted": false, "description": "Defines an action performed when pointer, previously positioned over icon, is moved away from it (3D or in a map). The code is executed once.", "example": "onGroupIconOverLeave { // Passed values for _this are: _is3D = _this select 0; _group = _this select 1; _wpID = _this select 2; _posx = _this select 3; _posy = _this select 4; _shift = _this select 5; _ctrl = _this select 6; _alt = _this select 7; _message = format [\"____ Info ____\"]; {_message = _message + format [\"\\n\u00a0%1\",_x]} forEach _this; hint _message; }", "local": false}, "BIS_fnc_vectorFromXToY": {"syntax": "[vector1, vector2] call BIS_fnc_vectorFromXToY", "server": false, "broadcasted": false, "description": "Returns a unit vector that 'points' from vector1 to vector2. This is a very useful function as it can be used with the velocity command to move an object from one position to another (i.e vector1 to vector2).", "example": "_resultVector = [getPosASL vehicle player, getPosASL airTarget] call BIS_fnc_vectorFromXToY;", "local": false}, "waypointCompletionRadius": {"syntax": "waypointCompletionRadius waypoint", "server": false, "broadcasted": false, "description": "Gets the radius around the waypoint where the waypoint is completed.", "example": "_radius = waypointCompletionRadius [groupOne, 1];", "local": false}, "ASLToATL": {"syntax": "ASLToATL pos", "server": false, "broadcasted": false, "description": "Converts a position from PositionASL to PositionATL", "example": "ASLToATL (getPosASL player) isEqualTo getPosATL player", "local": false}, "getGroupIconParams": {"syntax": "getGroupIconParams group", "server": false, "broadcasted": false, "description": "Returns group icons params used for command bar drawing such as color, text, scale, visibility, waypoint visibility, waypoint color.", "example": "_iconParams = getGroupIconParams group player;", "local": false}, "deActivateKey": {"syntax": "deActivateKey keyname", "server": false, "broadcasted": false, "description": "Deactivates the given keyname for the current user profile. The keys are used to unlock missions or campaigns. See keys, keysLimit and doneKeys in the description.ext file of the missions.", "example": "deActivateKey \"Mission04Key\"", "local": false}, "BIS_fnc_sandstorm": {"syntax": "[object,interval,brightness,newspapers] call BIS_fnc_sandstorm", "server": false, "broadcasted": false, "description": "Creates particle sandstorm round given object.", "example": "[player, -1, 0.8, false] call BIS_fnc_sandstorm;", "local": false}, "commandRadio": {"syntax": "unit commandRadio radioName", "server": true, "broadcasted": false, "description": "Sends the audio message to the command radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).", "example": "_soldierOne commandRadio \"messageOne\";", "local": false}, "serverTime": {"syntax": "serverTime", "server": false, "broadcasted": true, "description": "Returns the time since last server restart, synced to all clients in MP. The syncing is happening every 5 minutes, but you can force the next sync earlier by executing estimatedTimeLeft command. The time returned is also different to the time returned by time and diag_tickTime commands on server. Returns 0 in SP.", "example": "hint format [\"Synced server time\u00a0:\u00a0%1\", serverTime];", "local": false}, "with": {"syntax": "with namespace", "server": false, "broadcasted": false, "description": "Creates a With Type that is used inside a do construct in order to execute code inside a given namespace.", "example": "_myWithType = with uiNamespace;", "local": false}, "textLogFormat": {"syntax": "textLogFormat [format, arg1, arg2, ...]", "server": false, "broadcasted": false, "description": "Debugging output.", "example": "-", "local": false}, "triggerArea": {"syntax": "triggerArea trigger", "server": true, "broadcasted": false, "description": "Returns currently monitored trigger area. The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "example": "_area = triggerArea sensor1; // result is [200, 120, 45, false]", "local": false}, "getWeaponCargo": {"syntax": "result = getWeaponCargo object", "server": true, "broadcasted": false, "description": "Returns all weapons types and count from the cargo space", "example": "_content = getWeaponCargo carName;", "local": false}, "BIS_fnc_sceneIntruderDetector": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/************************************************************************************************************************** Version: 1.0 Name: Intruder detector during scene DESCRIPTION: Checks if there are intruders during scene. All intruders during scene will be disabled if they will get into the detector trigger. Position of trigger is default on player, and default radius is [60,60] Checking is deactivated by passing BIS_sceneIntruderDetectorLogic setVariable [\"_detectInProgress\", false] PARAMETERS: _centerOfScene: POSITION - trigger position _Radius: ARRAY: [_xRadius, _yRadius] - size of trigger RETURNED VALUE: nothing ****************************************************************************************************************************/"}, "BIS_fnc_commsMenuToggleAvailability": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* File: fn_commsMenuToggleAvailability.sqf Description: Enables or disables certain sections of the global communications menu. Parameter(s): _this select 0: index (Scalar) or list of indices (Array of Scalars) or section name (String) \"som\" - SecOps section \"wf\" - Warfare section _this select 1: mode (Scalar) 0 - disable 1 - enable Returns: Success flag (Boolean) */"}, "progressSetPosition": {"syntax": "control progressSetPosition pos", "server": false, "broadcasted": false, "description": "Sets progress position of the progress bar (DialogControls-ProgressBar)", "example": "_control progressSetPosition 0.5", "local": false}, "showHUD": {"syntax": "showHUD enable", "server": false, "broadcasted": false, "description": "Enable / disable showing of HUD. Defines visibility of weapon crosshair and any informational tags that appear when pointing the weapon at an object as well as availability of the default action menu. Unfortunately, it also hides icons drawn with drawIcon3D.", "example": "showHUD false;", "local": false}, "onCommandModeChanged": {"syntax": "onCommandModeChanged code", "server": false, "broadcasted": false, "description": "Defines code performed when hc command mode changes either because of (Left Ctrl + Space) shortcut or hcShowBar scripting command. Groups hc mode must contain at least one group for this command to work (see High Command). Attached code receives _isHighCommand boolean.", "example": "//Examples in-use can be found in: //ca\\modules\\HC\\data\\scripts\\HC_GUI.sqf //A3\\modules_f\\HC\\data\\scripts\\HC_GUI.sqf", "local": false}, "setUnconscious": {"syntax": "unit setUnconscious set", "server": false, "broadcasted": true, "description": "Since Arma 3 v1.63.136889, this command sets unit into incapacitated state and lifeState command returns \"INCAPACITATED\". Animation played while incapacitated depends on the injuries received.", "example": "_unit setUnconscious true;", "local": true}, "agent": {"syntax": "agent teamMember", "server": false, "broadcasted": false, "description": "Return a person for a given agent.", "example": "_obj = agent teamMember _unit;", "local": false}, "synchronizeObjectsAdd": {"syntax": "unit synchronizeObjectsAdd [objects]", "server": true, "broadcasted": true, "description": "Add given objects to the unit's list of synchronized objects.", "example": "_acm = _groupLogic createUnit [\"AmbientCombatManager\",position player,[],0,\"NONE\"]; _acm synchronizeObjectsAdd [player];", "local": false}, "isFlatEmpty": {"syntax": "position isFlatEmpty [minDistance, mode, maxGradient, maxGradientRadius, overLandOrWater, shoreLine, ignoreObject]", "server": false, "broadcasted": false, "description": "Checks given position against given filter params. Filter includes checks for:", "example": "Check if player position is over land:_overLand =\u00a0!(position player isFlatEmpty [-1, -1, -1, -1, 0, false] isEqualTo []);", "local": false}, "isOnRoad": {"syntax": "isOnRoad position", "server": true, "broadcasted": false, "description": "Checks if given position is on road. Same as roadAt, only return is boolean instead of road object.", "example": "_objOnRoad = isOnRoad player;", "local": false}, "BIS_fnc_absSpeed": {"syntax": "Object call BIS_fnc_absSpeed;", "server": false, "broadcasted": false, "description": "Returns absolute speed of a vehicle in kilometers per hour (km/h)", "example": "if (((vehicle player) call BIS_fnc_absSpeed) > 150) then { hint \"There goes my driver's license\u00a0:(\"; };", "local": false}, "BIS_fnc_isPosBlacklisted": {"syntax": "[position, blacklistArea] call BIS_fnc_isPosBlacklisted", "server": false, "broadcasted": false, "description": "Function checks a blacklist and sees if the given position is in it or not.", "example": "[[50,50], [[0,0], [100,100]]] call BIS_fnc_isPosBlacklisted;", "local": false}, "backpackSpaceFor": {"syntax": "result = backpack backpackSpaceFor weaponName", "server": false, "broadcasted": false, "description": "Returns how much space is in backpack for given weapon or magazine", "example": "(backpack player) backpackSpaceFor \"m16\"; // [weapons, magazines]", "local": false}, "getGroupIcon": {"syntax": "group getGroupIcon ID", "server": true, "broadcasted": false, "description": "Get group icon properties.", "example": "_grpIconId = _group getVariable \"BIS_MARTA_ICON_TYPE\"; _grpIcon = _group getGroupIcon _grpIconId;", "local": false}, "deleteEditorObject": {"syntax": "map deleteEditorObject object", "server": false, "broadcasted": false, "description": "Delete the editor object. Requires all editor object links to be removed prior.", "example": "Example needed", "local": false}, "enableSimulation": {"syntax": "entity enableSimulation state", "server": true, "broadcasted": false, "description": "Enable / disable simulation for given entity.", "example": "player enableSimulation false;", "local": false}, "BIS_fnc_taskAttack": {"syntax": "[group, position] call BIS_fnc_taskAttack", "server": false, "broadcasted": false, "description": "This function adds a Seek and Destroy waypoint on defined position to the group and set its behaviour to \"AWARE\". If the group has other waypoints, the waypoint will be added at the end of the list.", "example": "[opforGroup, getPosATL player] call BIS_fnc_taskAttack;", "local": false}, "BIS_fnc_areEqual": {"syntax": "[anything1, anything2, \u2026] call BIS_fnc_areEqual", "server": false, "broadcasted": false, "description": "This function returns true if all of the passed data elements are of the same type and value. One or more elements can be passed.", "example": "[0, \"0\"] call BIS_fnc_areEqual; // false [0, 1 + 1 - 2] call BIS_fnc_areEqual; // true [str 50, \"50\"] call BIS_fnc_areEqual; // true", "local": false}, "camConstuctionSetParams": {"syntax": "camera camConstuctionSetParams [[x,y,z], radius, maxAboveLand]", "server": false, "broadcasted": false, "description": "Sets construction camera parameters. To work with \"camconstruct\" object.", "example": "_camera camConstuctionSetParams [getPos player, 50, 20];", "local": false}, "BIS_fnc_findSafePos": {"syntax": "[center, minDist, maxDist, objDist, waterMode, maxGrad, shoreMode, blacklistPos, defaultPos] call BIS_fnc_findSafePos", "server": false, "broadcasted": false, "description": "This function generates position on a map according to several given parameters (see diagram):", "example": "Find position minimum 1m from from player but not further than 150m, not closer than 3m to any other object, not in the water, maximum gradient of 20, not on the shoreline: _pos = [player, 1, 150, 3, 0, 20, 0] call BIS_fnc_findSafePos;", "local": false}, "markerAlpha": {"syntax": "markerAlpha markerName", "server": true, "broadcasted": false, "description": "Gets the marker alpha. See setMarkerAlpha.", "example": "AlphaMarker = markerAlpha \"myMarker;", "local": false}, "savingEnabled": {"syntax": "savingEnabled", "server": false, "broadcasted": false, "description": "Check if saving the game is enabled.", "example": "if (savingEnabled) then { hint \"Saving is enabled!\"; };", "local": false}, "lockedDriver": {"syntax": "lockedDriver vehicle", "server": false, "broadcasted": false, "description": "Check whether driver position of the vehicle turret is locked.", "example": "_driverLocked = lockedDriver vehicle player;", "local": false}, "simulationEnabled": {"syntax": "simulationEnabled entity", "server": false, "broadcasted": false, "description": "Check if the entity has enabled simulation.", "example": "simulationEnabled player;", "local": false}, "resetCamShake": {"syntax": "resetCamShake", "server": false, "broadcasted": false, "description": "Stops any ongoing camera shake effects. Does not prevent new effects from being created. To disallow new effects altogether, enableCamShake should be used.", "example": "resetCamShake;", "local": false}, "visiblePosition": {"syntax": "visiblePosition object", "server": false, "broadcasted": false, "description": "Returns an object's rendered position (z value above surface underneath) in render time scope. Same as getPosVisual", "example": "playerRenderedPos = visiblePosition player;", "local": false}, "lockTurret": {"syntax": "vehicle lockTurret [turret path,lock]", "server": false, "broadcasted": true, "description": "Lock the gunner position of the vehicle turret. This command must be executed where vehicle is local. This command will remove user get in action (not get out) but will also stop player getting into vehicle via script commands unlike lock command", "example": "vehicleName lockTurret [[0,0], true];", "local": true}, "unitsBelowHeight": {"syntax": "units unitsBelowHeight height", "server": true, "broadcasted": false, "description": "Returns units in group/array below given height Above The Land (ATL). Current unit height ATL could be found with", "example": "_allOnGroudUnits = group player unitsBelowHeight 10;", "local": false}, "BIS_fnc_inAngleSector": {"syntax": "[center, centerAngle, sectorWidth, position] call BIS_fnc_inAngleSector", "server": false, "broadcasted": false, "description": "Checks if a position lies within an angle sector.", "example": "[ position player, getDir player, 30, position enemy_tank ] call BIS_fnc_inAngleSector;", "local": false}, "selectedEditorObjects": {"syntax": "selectedEditorObjects map", "server": false, "broadcasted": false, "description": "Returns a list of currently selected editor objects.", "example": "_selObjects = selectedEditorObjects _map", "local": false}, "assignedDriver": {"syntax": "assignedDriver vehicle", "server": false, "broadcasted": false, "description": "Returns the soldier assigned to the given vehicle as a driver.", "example": "_driver= assignedDriver vehicleName", "local": false}, "BIS_fnc_isInFrontOf": {"syntax": "[reference, checked, offset] call BIS_fnc_isInFrontOf", "server": false, "broadcasted": false, "description": "Check if an object is in front of another object (in the front 180\u00b0)", "example": "_isInstructorInFrontOfPlayer = [player, instructor, 0] call BIS_fnc_isInFrontOf;", "local": false}, "playGesture": {"syntax": "soldier playGesture moveName", "server": false, "broadcasted": false, "description": "When used on a person,a smooth transition to the given move will be initiated. Command doesn't seem to be functional", "example": "soldierOne playGesture \"Wave\"", "local": false}, "insertEditorObject": {"syntax": "map insertEditorObject [type,value,[name1,value1,...],subtype class]", "server": false, "broadcasted": false, "description": "Insert an object to the editor and assign arguments. Create script is,not called. Returns the ID of the new EditorObject. Subtype class is,optional.", "example": "Example needed", "local": false}, "uiSleep": {"syntax": "uiSleep delay", "server": false, "broadcasted": false, "description": "Suspend execution of script for given uitime. uiSleep is a sleep method to delay script execution where script time/simulation time is stopped. uiSleep is basically using the system time (uiTime more specifically) and not simulation time. So in the cases where sleep command would get stuck indefinitely, uiSleep can still be used to effectively delay script execution. For example in a mission briefing or an editor or when simulation is paused in general.", "example": "uiSleep 0.5", "local": false}, "say3D": {"syntax": "from say3D sound", "server": true, "broadcasted": false, "description": "Unit or object will say given sound in 3D Space. This allows broadcasting of positional music or sound from a source, without having to script a fade sound or music command. Compare this with say2D which will always play a sound at the location of the player after he has been in the vicinity of a broadcasting sound. Sound is defined in \"CfgSounds\" of the Description.ext or main config.", "example": "helicopter1 say3D \"Fortunateson\"", "local": false}, "groupIconSelectable": {"syntax": "groupIconSelectable", "server": false, "broadcasted": false, "description": "Returns whether or not group icons raise onGroupIconClick, onGroupIconOverEnter and onGroupIconOverLeave events.", "example": "hint str groupIconSelectable;", "local": false}, "BIS_fnc_zzRotate": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/********************************************************************* Version: 1.6 Name: zzRotate DESCRIPTION: Rotate objects around given center about given angle PARAMETERS: center: [x,y,z]; angle: number; participants: [object, initPosX, initPosY, initPosZ, angle] RETURNED VALUE: Nothing **********************************************************************/"}, "isShowing3DIcons": {"syntax": "isShowing3DIcons map", "server": false, "broadcasted": false, "description": "Returns true if the editor is set to draw 3D icons.", "example": "Example needed", "local": false}, "sendTask": {"syntax": "sender sendTask [receiver,[type] or [type,parentTask],priority,name1,value1,name2,value2,...]", "server": false, "broadcasted": false, "description": "Create a new AI task (subtask of parentTask). Type is name of registered task type.", "example": "Example needed", "local": false}, "disableConversation": {"syntax": "unitName disableConversation disable", "server": false, "broadcasted": false, "description": "Disable the ability to talk to other people.", "example": "player disableConversation true", "local": false}, "BIS_fnc_sceneCreateSoundEntities": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/******************************************************************************* * version: 1.0 * name: create sound entities * description: creates sound entities(logic objects) and attaches to * an objects passed as parameter * After scene end it will detach and delete all created * sound entities (if scene was executed from scenes * controller. * * paramater: objects - ARRAY of OBJECTS in format without \"BIS_\" * prefix. For example, if you have BIS_Cooper in mission * than parameter will be [Cooper]. Then you can use * created sound entities as BIS_ZvukCooper say \"something\" * * return value: nothing *"}, "moveOut": {"syntax": "moveOut soldier", "server": true, "broadcasted": true, "description": "Moves the soldier out of vehicle, immediately, without animation. Does not work on dead crew. Use setPos family of commands to move dead units out soon after they became dead. After awhile dead unit's group becomes grpNull and it cannot be moved out at all. This command will also fail to move AI out of a vehicle if the vehicle is locked but it will work for player", "example": "{if (lifeState _x == \"UNCONSCIOUS\") then {moveOut _x}} forEach crew cursorTarget;", "local": false}, "setUnitRecoilCoefficient": {"syntax": "unitName setUnitRecoilCoefficient coefficient", "server": false, "broadcasted": false, "description": "Proportionaly increase/decrease unit's recoil. Drives muzzle up with every shot when supplied positive number and down when negative. 0 cancels recoil.", "example": "player setUnitRecoilCoefficient 10", "local": false}, "hcSelected": {"syntax": "hcSelected unit", "server": false, "broadcasted": false, "description": "Returns selected groups in high command.", "example": "array = hcSelected unit;", "local": false}, "groupSelectedUnits": {"syntax": "groupSelectedUnits unit", "server": false, "broadcasted": false, "description": "Returns selected units in source group for normal commanding mode (individual units). For the High Command equivalent, see hcSelected.", "example": "_selectedUnits = groupSelectedUnits player;", "local": false}, "BIS_fnc_addEvidence": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/******************************************************************************* * * version: 1.0 * name: Add evidence * description: add an evidence value to global campaign variable * paramater: evidence variable name (defined in init.sqf of campaign mission C1) or simply number (scalar) * return value: none *"}, "BIS_fnc_vectorDiff": {"syntax": "[vector1, vector2] call BIS_fnc_vectorDiff", "server": false, "broadcasted": false, "description": "Returns a vector that is the difference between two vectors.", "example": "_vectorDiff = [[1,2,3], [5,6,7]] call BIS_fnc_vectorDiff;", "local": false}, "landResult": {"syntax": "landResult helicopter", "server": false, "broadcasted": false, "description": "Return the result of helicopter landing position searching (performed, after land command).", "example": "_result = landResult BIS_heli;", "local": false}, "BIS_fnc_swapVars": {"syntax": "[variableName1, variableName2] call BIS_fnc_swapVars", "server": false, "broadcasted": false, "description": "Swaps the values of two variables passed as String.", "example": "_a = 1; _b = 2; [\"_a\", \"_b\"] call BIS_fnc_swapVars; _a == 2; // true _b == 1; // true", "local": false}, "enableIRLasers": {"syntax": "thing enableIRLasers value", "server": false, "broadcasted": true, "description": "Allows the AI to use IR lasers", "example": "(units group player) enableIRLasers true", "local": true}, "editorSetEventHandler": {"syntax": "map editorSetEventHandler [handler name,function]", "server": false, "broadcasted": false, "description": "Sets given event handler of given editor.", "example": "_map editorSetEventHandler [\"SelectObject\",\"\"]", "local": false}, "waypointFormation": {"syntax": "waypointFormation waypoint", "server": false, "broadcasted": false, "description": "Gets the waypoint formation. Possible values are:", "example": "waypointFormation [groupOne,1]", "local": false}, "allow3DMode": {"syntax": "map allow3DMode bool", "server": false, "broadcasted": false, "description": "Allow/dissallow 3D mode.,", "example": "Example needed", "local": false}, "nextMenuItemIndex": {"syntax": "nextMenuItemIndex map", "server": false, "broadcasted": false, "description": "Returns the next available menu item index.", "example": "Example needed", "local": false}, "BIS_fnc_sceneGetObjects": {"syntax": "[centre, radius, type] call BIS_fnc_sceneGetObjects", "server": false, "broadcasted": false, "description": "\u26a0", "example": "[player, 20, \"Car\"] call BIS_fnc_sceneGetObjects;", "local": false}, "BIS_fnc_createmenu": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* File: fn_createMenu.sqf Description: Create custom commanding menu (with multiple pages if necessary). Parameter(s): _this select 0 - STRING or ARRAY - Name of menu or [Name, Context sensitive] _this select 1 - STRING - Variable in which will be menu params stored (as variable_0, variable_1, ...) _this select 2 - ARRAY - Array with menu items (can be either [items] or [[items],[itemNames],[itemEnable]] if you want to set custom params (names, enable values)) _this select 3 - STRING - Name of submenu which will open when item is activated. Name of selected item is passed to string as\u00a0%1 _this select 4 - STRING - Expression which is executed when item is activated. Name of selected item is passed to string as\u00a0%1, ID is\u00a0%2. _this select 5 - ANYTHING (Optional) - params passed to expression. Whole argument is passed as\u00a0%3 _this select 6 - BOOLEAN - False to hide number shortcuts Returned value(s): True Example: c = [\"first\",\"second\"]; [\"Menu\", \"b\", c, \"\",\"hint 'ahoj'\"] call BIS_FNC_createmenu; showCommandingMenu \"#USER:b_0\" c = [[\"firstData\",\"secondData\"],[\"First\",\"Second\"]]; [\"Menu\", \"b\", c, \"\",\"hint (str '%1' + str '%2' + str '%3')\"] call BIS_FNC_createmenu; showCommandingMenu \"#USER:b_0\"; see news:g7p3po$gik$1@new-server.localdomain */"}, "BIS_fnc_vectorAdd": {"syntax": "[vector1, vector2] call BIS_fnc_vectorAdd", "server": false, "broadcasted": false, "description": "Returns the sum of two vectors.", "example": "[[1,1,1], [2,5,3]] call BIS_fnc_vectorAdd; // returns [3,6,4]", "local": false}, "BIS_fnc_ObjectsGrabber": {"syntax": "[position, size, objectOrientation] call BIS_fnc_ObjectsGrabber", "server": false, "broadcasted": false, "description": "Converts a set of placed objects to an object array (as a String) for the DynO mapper.", "example": "[getPos player, 20, true] call BIS_fnc_ObjectsGrabber;", "local": false}, "lnbText": {"syntax": "control lnbText [row,column]", "server": false, "broadcasted": false, "description": "Returns the shown text in the item with the given position of the given 2D listbox.", "example": "_ctrl lnbText [0,0];", "local": true}, "BIS_fnc_distance2Dsqr": {"syntax": "[Point_1,Point_2] call BIS_fnc_distance2Dsqr;", "server": false, "broadcasted": false, "description": "Returns the SQUARE of the distance between the two objects or positions \"as the crow flies\" (ignoring elevation).", "example": "[ player, soldier_1 ] call BIS_fnc_distance2Dsqr", "local": false}, "taskChildren": {"syntax": "taskChildren task", "server": false, "broadcasted": false, "description": "Return the child tasks of the specified task.", "example": "_children = taskChildren \"someTask\";", "local": false}, "serverCommandAvailable": {"syntax": "serverCommandAvailable command", "server": false, "broadcasted": false, "description": "Returns true if given serverCommand is available on current machine, false if not. Here is the general table of availability of Arma 3 server commands:", "example": "_can = serverCommandAvailable \"#kick\";", "local": false}, "clearOverlay": {"syntax": "clearOverlay map", "server": false, "broadcasted": false, "description": "Clear the current overlay.", "example": "clearOverlay _map,", "local": false}, "setMarkerAlphaLocal": {"syntax": "marker setMarkerAlphaLocal alpha", "server": false, "broadcasted": false, "description": "Sets the marker alpha. The marker is only modified on the computer where the command is called.", "example": "\"my_marker\" setMarkerAlphaLocal 0.5;", "local": false}, "leaveVehicle": {"syntax": "group leaveVehicle vehicle", "server": false, "broadcasted": false, "description": "Ceases the using of the vehicle by a group and unassigns vehicle from the group. If the argument is a single unit, the vehicle will be unassigned from unit's group. After vehicle is unassigned from the group, each individual crew member then unassigned from the vehicle.", "example": "_unit leaveVehicle _vehicle", "local": true}, "visibleMap": {"syntax": "visibleMap", "server": false, "broadcasted": false, "description": "Return true if the main map is shown (active).", "example": "if (visibleMap) then {hint \"You're showing the map\u00a0!\"}", "local": false}, "ppEffectCommit": {"syntax": "effect ppEffectCommit commit", "server": false, "broadcasted": false, "description": "Commit post process effect in given time.", "example": "\"colorCorrection\" ppEffectCommit 3;", "local": false}, "isAutoHoverOn": {"syntax": "isAutoHoverOn vehicle", "server": false, "broadcasted": false, "description": "Return true if vehicle has enabled auto hover. (always returns false if the vehicle can't set auto hover)", "example": "status = isAutoHoverOn vehicle player;", "local": false}, "BIS_fnc_nearestPosition": {"syntax": "[items, origin] call BIS_fnc_nearestPosition", "server": false, "broadcasted": false, "description": "Function to find the nearest Object or position from a list, when compared to a given reference.", "example": "// Find the nearest marker from player _nearestMarker = [allMapMarkers, player] call BIS_fnc_nearestPosition;", "local": false}, "setPlayerRespawnTime": {"syntax": "setPlayerRespawnTime interval", "server": false, "broadcasted": false, "description": "Sets the time interval (in seconds) that the player must wait before respawn. It resets to mission default on mission start. In Single Player or when respawn type is GROUP or SIDE in Multiplayer, setting player respawn time has no effect, and playerRespawnTime will always return -1.", "example": "setPlayerRespawnTime 5;", "local": false}, "BIS_fnc_taskHandler": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/******************************************************************************* * * version: 1.0 * name: Task handler * description: automatically sets tasks as current * paramaters: _this select 0: a unit whose tasks will be handled (Array) _this select 1: links to tasks created via MP Framwork with priorities (loewr number means higher priority) * return value: none * example: [ BIS_cooper, [ [\"objShaftoe\", 1], [\"objGorka\", 3], [\"objNikolayev\", 5], [\"objLagushina\", 5], [\"objSmugglers\", 5], [\"objFindBase\", 4], [\"objSentries\", 3], [\"objLeader\", 3], [\"objDestroyBase\", 3], [\"objEscortLagushina\", 1], [\"objRescueCrew\", 2], [\"objSafehouse\", 3], [\"objMaksim\", 6], [\"objEvidence\", 7] ] ] call BIS_fnc_taskHandler * TODO: * generalize so it can be used in WF * add support for standard tasks * randomize the selection of tasks with the same priority"}, "BIS_fnc_3Dcredits": {"syntax": "[text,position,minDis,fadeDis] spawn BIS_fnc_3Dcredits", "server": false, "broadcasted": false, "description": "Displays structured text in 3D world.", "example": "[\"<t size='2'>Hello World</t>\", getPos helloWorld, 15, 0] spawn BIS_fnc_3Dcredits;", "local": false}, "moonIntensity": {"syntax": "moonIntensity", "server": false, "broadcasted": false, "description": "Returns the intensity of the moon's brightness in range 0...1.", "example": "_intensity = moonIntensity;", "local": false}, "removeTeamMember": {"syntax": "team removeTeamMember member", "server": false, "broadcasted": false, "description": "Remove given member from given team. Effect is local, unless both member and team are local to PC on which command is executed, then effect is global.", "example": "_team removeTeamMember _teamMember;", "local": true}, "BIS_fnc_magnitudeSqr": {"syntax": "vector call BIS_fnc_magnitudeSqr", "server": false, "broadcasted": false, "description": "Returns the square magnitude of an array of numbers. The vector can have any number of elements.", "example": "[5,3] call BIS_fnc_magnitudeSqr;", "local": false}, "ppEffectEnable": {"syntax": "effect ppEffectEnable enable", "server": false, "broadcasted": false, "description": "Enable / disable Post process effects", "example": "\"colorCorrections\" ppEffectEnable true;", "local": false}, "lnbSetValue": {"syntax": "lnbSetValue [idc, [row, column], value]", "server": false, "broadcasted": false, "description": "Sets the additional integer value in the item with the position index of the 2D listbox.", "example": "_ctrl lnbSetValue [[0,0],1];", "local": false}, "captiveNum": {"syntax": "captiveNum unit", "server": true, "broadcasted": false, "description": "Checks whether the unit is a captive. If the unit is a vehicle, its commander is checked instead. If a unit's captivity level was set as a Boolean, then the returned number is either 0 (for false) or 1 (for true).", "example": "_captivity = captiveNum _unit;", "local": false}, "ctrlSetAutoScrollDelay": {"syntax": "control ctrlSetAutoScrollDelay delay", "server": false, "broadcasted": false, "description": "Sets number of second before auto-scroll starts/rewinds. Setter for ctrlAutoScrollDelay.", "example": "_ctrlGroup ctrlSetAutoScrollDelay 5;", "local": false}, "BIS_fnc_vectorMultiply": {"syntax": "[vector, factor] call BIS_fnc_vectorMultiply", "server": false, "broadcasted": false, "description": "Multiplies 3D vector by a scalar.", "example": "_newVector = [[1,2,3], 3] call BIS_fnc_vectorMultiply; // returns [3,6,9]", "local": false}, "lnbGetColumnsPosition": {"syntax": "lnbGetColumnsPosition _ctrl", "server": false, "broadcasted": false, "description": "Returns relative screen X of ListNBox control columns position [0.1,0.3,0.6...]. Use lnbSetColumnsPos to set positions.", "example": "lnbGetColumnsPosition _ctrl;", "local": true}, "showNewEditorObject": {"syntax": "map showNewEditorObject [type,class,side,position]", "server": false, "broadcasted": false, "description": "Show the add editor object dialog,type is editor object type,class is,class definition to automatically select,side filters by a certain,side,pos is position to create the object.", "example": "Example needed", "local": false}, "loadGame": {"syntax": "loadGame", "server": false, "broadcasted": false, "description": "Loads game from the last autosave made with saveGame. If no autosave exists, restarts the mission. When used in campaign it will also deduct 1 life, defined in:", "example": "loadGame;", "local": false}, "diarySubjectExists": {"syntax": "person diarySubjectExists name", "server": false, "broadcasted": false, "description": "Checks whether given subject is present in the diary of given person.", "example": "_exists = player diarySubjectExists \"subjectName\"", "local": false}, "BIS_fnc_removeNestedElement": {"syntax": "[array, itemToRemove] call BIS_fnc_removeNestedElement", "server": false, "broadcasted": false, "description": "Function to remove an item in a nested array. Modifies the array by reference.", "example": "_array = [[1, 2], [3, 3, 4]]; _bool = [_array, 3] call BIS_fnc_removeNestedElement; // _array is now [[1, 2], [4]]", "local": false}, "BIS_fnc_getFactions": {"syntax": "[parameter] call BIS_fnc_getFactions", "server": false, "broadcasted": false, "description": "Gets list and sides of current factions.", "example": "call BIS_fnc_getFactions; // returns all factions", "local": false}, "createAgent": {"syntax": "createAgent [type, position, markers, placement, special]", "server": false, "broadcasted": false, "description": "Creates an (independent) agent (person) of the given type (type is a name of a subclass of CfgVehicles). An agent does not have a group or leader or the standard soldier FSM associated with it -- for instance, an enemy soldier spawned as an agent has limited AI and will stand stupidly when fired upon -- which can be useful to limit the amount of AI processing being done in a mission with very large numbers of \"AI\". If the markers array contains several marker names, the position of a random one is used, otherwise, the given position is used. The unit is placed inside a circle with this position as its center and placement as its radius.", "example": "_agent = createAgent [\"SoldierWB\", position player, [], 0, \"FORM\"];", "local": false}, "getEditorCamera": {"syntax": "getEditorCamera map", "server": false, "broadcasted": false, "description": "Fetches a reference to the mission editor camera.", "example": "Example needed", "local": false}, "completedFSM": {"syntax": "completedFSM fsmHandle", "server": false, "broadcasted": false, "description": "Check whether the given FSM completes. The FSM handle is the number returned by the execFSM command.", "example": "_completed = completedFSM _fsmHandle;", "local": false}, "ctrlRemoveAllEventHandlers": {"syntax": "control ctrlRemoveAllEventHandlers handlerName", "server": false, "broadcasted": false, "description": "Remove all event handlers from the given control.", "example": "Example needed", "local": false}, "setSimpleTaskDescription": {"syntax": "task setSimpleTaskDescription [description, descriptionShort, descriptionHUD]", "server": false, "broadcasted": false, "description": "Attach descriptions to the simple task.", "example": "mytask setSimpleTaskDescription [\"Today you have to kill Spongebob\",\"Kill Spongebob\",\"Here he is!\"];", "local": false}, "taskCompleted": {"syntax": "taskCompleted task", "server": false, "broadcasted": false, "description": "Return if task is completed. (state Succeeded, Failed or Canceled)", "example": "_done = taskCompleted \"someTask\";", "local": false}, "BIS_fnc_lowestNum": {"syntax": "numbers call BIS_fnc_lowestNum", "server": false, "broadcasted": false, "description": "Returns the lowest number out of the passed set.", "example": "_result = [7,2,1,5,10] call BIS_fnc_lowestNum; //_result = 1", "local": false}, "waypointAttachedVehicle": {"syntax": "waypointAttachedVehicle waypoint", "server": false, "broadcasted": false, "description": "Gets the vehicle attached to the waypoint.", "example": "waypointAttachedVehicle [groupOne,1]", "local": false}, "getBackpackCargo": {"syntax": "result = getBackpackCargo object", "server": false, "broadcasted": false, "description": "Returns all backpack types and count from the cargo space", "example": "_content = getBackpackCargo carName;", "local": false}, "publicVariableServer": {"syntax": "publicVariableServer varName", "server": false, "broadcasted": false, "description": "Send the variable value to the server - same limitations regarding variable type as publicVariable.", "example": "publicVariableServer \"CTFscoreOne\";", "local": false}, "lnbDeleteRow": {"syntax": "_ctrl lnbDeleteRow row", "server": false, "broadcasted": false, "description": "Removes row with the given index from the given listbox or combobox.", "example": "_ctrl lnbDeleteRow 1;", "local": false}, "triggerText": {"syntax": "triggerText trigger", "server": true, "broadcasted": false, "description": "Returns trigger text. Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "example": "result = triggerText triggerName;", "local": false}, "BIS_fnc_invRemove": {"syntax": "[object,class,count] call BIS_fnc_invRemove", "server": false, "broadcasted": false, "description": "Removes from inventory. Given number of items. Returns actually removed items count.", "example": "[ player,\"someClass\",5 ] call BIS_fnc_invRemove;", "local": false}, "BIS_fnc_commsMenuToggleVisibility": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* File: fn_commsMenuToggleVisibility.sqf Description: Shows or hides certain sections of the global communications menu. Parameter(s): _this select 0: index (Scalar) or list of indices (Array of Scalars) or section name (String) \"som\" - SecOps section \"wf\" - Warfare section _this select 1: mode (Scalar) 0 - hide 1 - show Returns: Success flag (Boolean) */"}, "BIS_fnc_sceneSetBehaviour": {"syntax": "param call BIS_fnc_sceneSetBehaviour;", "server": false, "broadcasted": false, "description": "Enables / disables a specific set of AI units, usable for cutscenes.", "example": "[\"disableAI\",[unit1,player,unit2,unit3]] call BIS_fnc_sceneSetBehaviour;", "local": false}, "BIS_fnc_selectCrew": {"syntax": "[side, configEntry] call BIS_fnc_selectCrew", "server": false, "broadcasted": false, "description": "Return an appropriate crew type for a certain vehicle.", "example": "_crewType = [blufor, configFile >> \"CfgVehicles\" >> \"B_MRAP_01_F\"] call BIS_fnc_selectCrew;", "local": false}, "ctrlAutoScrollRewind": {"syntax": "ctrlAutoScrollRewind control", "server": false, "broadcasted": false, "description": "Returns true if auto-scroll should move back to start after it reaches the end.", "example": "_ctrlRewind = ctrlAutoScrollRewind _ctrlGroup;", "local": false}, "addWeaponCargoGlobal": {"syntax": "vehicleName addWeaponCargoGlobal [weaponName, count]", "server": true, "broadcasted": true, "description": "Add weapons to the cargo space of vehicles, which can be taken out by infantry units. MP Synchronized", "example": "_truck addWeaponCargoGlobal[\"M16\",5];", "local": false}, "getPlayerUIDOld": {"syntax": "getPlayerUIDOld unit", "server": false, "broadcasted": false, "description": "Returns the old UniqueID of Arma 2 OA of the given unit as string if it's player and empty value if it's AI. The uniqueID may be up to 100 characters long and may contain numbers, uppercase letters and underscores (the value can be used to construct a valid variable name by appending to another valid variable name). Note: while for ArmA 2 or ArmA 2: Operation Arrowhead until version 1.60 the result always contains a number, it should be always handled as an opaque string. Converting it to a Number can cause precision problems, as Number cannot accurately represent integers above 16777216 (2^24). Moreover, game versions since ArmA 2: Operation Arrowhead 1.61 provide a non-numeric value as a result.", "example": "_uid = getPlayerUIDOld player;", "local": false}, "evalObjectArgument": {"syntax": "map evalObjectArgument [object, argument]", "server": false, "broadcasted": false, "description": "Return argument in mission editor of a given object.", "example": "// returns string \"[1009.0351, 1319.4928]\" (findDisplay 128 displayCtrl 51) getObjectArgument [\"_unit_1\", \"POSITION\"] // returns array [1009.0351, 1319.4928] (findDisplay 128 displayCtrl 51) evalObjectArgument [\"_unit_1\", \"POSITION\"]", "local": false}, "loadMagazine": {"syntax": "transport loadMagazine [turretPath, weaponName, magazineName]", "server": false, "broadcasted": false, "description": "Initiates the loading action on given weapon of the turret of a transport. So the new magazine is not available instantly, yet according to the reloadTime. The turret has to be manned. One can also change the magazine if its respective weapon is not selected.", "example": "vehicle player loadMagazine [[0],\"m256\",\"20Rnd_120mmHE_M1A2\"];", "local": false}, "simpleTasks": {"syntax": "simpleTasks person", "server": false, "broadcasted": false, "description": "Return all simple tasks assigned to given person.", "example": "_tasks = simpleTasks player;", "local": false}, "dateToNumber": {"syntax": "dateToNumber date", "server": false, "broadcasted": false, "description": "Convert a date to a float number, based on Jan 1st 00:00:00 = 0 and Dec 31st 23:59:59 = 1. The same day and time in leap year will be different after 28th of February and 23:59 on 31st of December will be 1.00274", "example": "_float = dateToNumber [2035,7,6,12,0]; //0.510959", "local": false}, "BIS_fnc_spawnVehicle": {"syntax": "[position,direction,type,side or group] call BIS_fnc_spawnVehicle", "server": false, "broadcasted": false, "description": "Function to spawn a certain vehicle type with all crew (including turrets). The vehicle can either become part of an existing group or create a new group.", "example": "[getPos mySpawnPos, 180, \"BMP3\", EAST] call bis_fnc_spawnvehicle", "local": false}, "hcLeader": {"syntax": "hcLeader group", "server": false, "broadcasted": false, "description": "Returns group's high command commander.", "example": "_leader = hcLeader groupName;", "local": false}, "addCamShake": {"syntax": "addCamShake [power, duration, frequency]", "server": false, "broadcasted": false, "description": "Creates the camera shaking effect, like when you are near an explosion", "example": "addCamShake [10, 1, 25];", "local": false}, "screenToWorld": {"syntax": "screenToWorld screen", "server": false, "broadcasted": false, "description": "Returns the position on landscape (PositionAGL) corresponding to the given point on screen (in UI coordinates).", "example": "_wPos = screenToWorld [0.5,0.5];", "local": false}, "getEditorObjectScope": {"syntax": "map getEditorObjectScope object", "server": false, "broadcasted": false, "description": "Returns the editor object scope of the specified editor object.", "example": "Example needed", "local": false}, "lifeState": {"syntax": "lifeState unit", "server": true, "broadcasted": false, "description": "Returns the life state of the given unit. Can be one of:", "example": "_ls = lifeState loon;", "local": false}, "clearWeaponCargoGlobal": {"syntax": "clearWeaponCargoGlobal unit", "server": true, "broadcasted": true, "description": "Removes all weapons from the vehicle cargo space. MP synchronized.", "example": "clearWeaponCargoGlobal jeepOne;", "local": false}, "kbRemoveTopic": {"syntax": "person kbRemoveTopic topicName", "server": false, "broadcasted": false, "description": "Unregister conversation topic from given person. See Conversations for more details.", "example": "_unit1 kbRemoveTopic \"howsTheWeather\";", "local": false}, "allMissionObjects": {"syntax": "allMissionObjects type", "server": false, "broadcasted": false, "description": "Returns all mission objects (created by or during a mission) with given type (or its subtype). In some cases allMissionObjects could be substituted with entities, which would be much much faster alternative. Some of the unusual mission objects that can be detected with this command (as well as with nearestObject):", "example": "_airObjects = allMissionObjects \"Air\";", "local": false}, "libraryCredits": {"syntax": "libraryCredits", "server": false, "broadcasted": false, "description": "Returns the credits for the libraries used by the game.", "example": "hint str libraryCredits; // as in Arma2 OA 1.62.95208", "local": false}, "currentTask": {"syntax": "currentTask person", "server": false, "broadcasted": false, "description": "Return current task of given person.", "example": "_currTask = currentTask player;", "local": false}, "moveObjectToEnd": {"syntax": "map moveObjectToEnd object", "server": false, "broadcasted": false, "description": "Shifts an editor object to the end of the objects array. This means,that the object will be drawn last (after all other objects).", "example": "Example needed", "local": false}, "BIS_fnc_invCodeToArray": {"syntax": "[configCode] call BIS_fnc_invCodeToArray", "server": false, "broadcasted": false, "description": "Converts inventory code (used in configs) to array with numbers for weapons and magazines (and their counts).", "example": "[ call compile getText (configfile >> \"CfgVehicles\" >> typeOf player >> \"weaponSlots\")] call BIS_fnc_invCodeToArray;//Can return [1,0,0,0,0,0,0,0]", "local": false}, "setFSMVariable": {"syntax": "handle setFSMVariable [name, value]", "server": false, "broadcasted": false, "description": "Set variable to given value in the variable space of given FSM.", "example": "_handle = execFSM \"test.fsm\"; _handle setFSMVariable [\"_foo\", 23]; sets variable _foo in the FSM to 23", "local": false}, "setHit": {"syntax": "object setHit [part, damage, useEffects]", "server": false, "broadcasted": true, "description": "Damage / repair part of object. The object must be local to the computer where command is executed. Damage 0 means fully functional, damage 1 means completely destroyed / dead. Note: Some part names are in Czech; see translation table.", "example": "vehicle player setHit [\"motor\", 1]", "local": true}, "setGroupIconParams": {"syntax": "group setGroupIconParams properties", "server": false, "broadcasted": false, "description": "Set group icons parameters. [color,string,float,bool]", "example": "_grp setGroupIconParams [_color,_text,_scale,_visible]; _grp setGroupIconParams [[0,0,0,0],\"\",1,false];", "local": false}, "updateDrawIcon": {"syntax": "map updateDrawIcon [object,string identifier,color,offset,width,height,maintain size?,angle,shadow]", "server": false, "broadcasted": false, "description": "Updates the icon to be shown in 2D editor for the specified editor,object. If maintain size is false,icon will not scale depending on the,scale of the map. If maintain size is a number,the icon will maintain,size if map scale is below that number.", "example": "Example needed", "local": false}, "disableTIEquipment": {"syntax": "vehicle disableTIEquipment state", "server": true, "broadcasted": true, "description": "Disables TI (Thermal Imaging) equipment for given vehicle. In older versions of Arma this command would also disable NV (Night Vision), but since Arma 3 v1.52.132676 this command disables only TI. Use disableNVGEquipment to disable NV.", "example": "vehicle player disableTIEquipment true;", "local": false}, "newOverlay": {"syntax": "map newOverlay config", "server": false, "broadcasted": false, "description": "Creates the new overlay dialog for the specified type of overlay.", "example": "Example needed", "local": false}, "waypointDescription": {"syntax": "waypointDescription waypoint", "server": false, "broadcasted": false, "description": "Gets the waypoint description.", "example": "waypointDescription [groupOne,1]", "local": false}, "setToneMapping": {"syntax": "setToneMapping toneName", "server": false, "broadcasted": false, "description": "Applies a specific tone mapping to the game.", "example": "setToneMapping \"Filmic\"", "local": false}, "saveOverlay": {"syntax": "saveOverlay map", "server": false, "broadcasted": false, "description": "Save the current overlay.", "example": "saveOverlay _map", "local": false}, "lookAtPos": {"syntax": "map lookAtPos position", "server": false, "broadcasted": false, "description": "Center the map on,and point the camera at,the position.", "example": "(findDisplay 12) lookAtPos [0,0,0];", "local": false}, "debugFSM": {"syntax": "FSMhandle debugFSM true", "server": false, "broadcasted": false, "description": "Dump (something about FSM) to debugging output. This command is (assumed to be) non-functional in the retail version.", "example": "-", "local": false}, "BIS_fnc_locations": {"syntax": "[type(s),area,debug] call BIS_fnc_locations", "server": false, "broadcasted": false, "description": "Creates or registers location logics (used in various modules, like Ambient Civilians, Ambient Civilian Vehicles or Warfare 2). Upon registering, function will set following variables into location logic's variable space:", "example": "[\"CityCenter\",[position player,1000]] call bis_fnc_locations;", "local": false}, "estimatedEndServerTime": {"syntax": "estimatedEndServerTime", "server": false, "broadcasted": false, "description": "Estimated end of MP game in seconds converted to serverTime.", "example": "Estimated minutes left: _min = (ceil (estimatedEndServerTime - serverTime) / 60);", "local": false}, "ppEffectAdjust": {"syntax": "effect ppEffectAdjust settings", "server": false, "broadcasted": false, "description": "Set post process effect parameters.", "example": "\"colorCorrections\" ppEffectAdjust [1, 1, -0.01, [0, 0, 0, 0], [1.5, 1, 1.2, 0.6], [0.199, 0.587, 0.114, 0]];", "local": false}, "isManualFire": {"syntax": "isManualFire vehicleName", "server": true, "broadcasted": false, "description": "Returns true if manual fire is on. Manual fire could either be selected in vehicle action menu (if available) or with action \"ManualFire\" and \"ManualFireCancel\". Always returns false for a soldier.", "example": "_bool = isManualFire vehicle player;", "local": false}, "BIS_fnc_sceneAreaClearance": {"syntax": "param spawn BIS_fnc_sceneAreaClearance;", "server": false, "broadcasted": false, "description": "Removes object clutter within a set trigger, for use within cutscenes.", "example": "0 = [triggerArea1] spawn BIS_fnc_sceneAreaClearance;", "local": false}, "fireAtTarget": {"syntax": "sourceVehicle fireAtTarget [targetVehicle, weaponMuzzleName]", "server": false, "broadcasted": false, "description": "Remotely forces a unit to fire the given weapon. See also: BIS_fnc_fire", "example": "_handle = this fireAtTarget [groundtarget1,\"HellfireLauncher\"];", "local": false}, "lnbSetText": {"syntax": "lnbSetText [idc,[row,column],data]", "server": false, "broadcasted": false, "description": "Sets the additional text (invisible) in the item with the given position of the 2D listbox.", "example": "lnbSetText [101, [0,1], \"#1\"];", "local": true}, "getEditorMode": {"syntax": "getEditorMode map", "server": false, "broadcasted": false, "description": "Returns the current mode of the editor.", "example": "Example needed", "local": false}, "kbAddDatabase": {"syntax": "person kbAddDatabase fileName", "server": false, "broadcasted": false, "description": "Register knowledge base database to given person. See Conversations for more details.", "example": "_hasBeenAdded = _unit kbAddDatabase \"chat.txt\"", "local": false}, "diag_fpsMin": {"syntax": "diag_fpsMin", "server": false, "broadcasted": false, "description": "Returns minimal framerate. Calculated from the longest frame over last 16 frames.", "example": "_minfps = diag_fpsMin;", "local": false}, "armoryPoints": {"syntax": "armoryPoints", "server": false, "broadcasted": false, "description": "Returns, stored in [USERNAME].ArmaXProfile, value of armoryPoints entry. If the entry doesn't exist, it returns 0.", "example": "_points = armoryPoints;", "local": false}, "BIS_fnc_sceneMiscStuff": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/********************************************************************* Version: 1.0 Name: sceneMiscStuff DESCRIPTION: Does the basic minor stuff for scene - cinema borders, map is denied etc. PARAMETERS: 1) _cameraPositions - [[cameraTarget],[cameraPos]] - Coordinates. If BIS_debugScene is true then external camera is activated 2) _skipInitBlackout - BOOL - if true, initial blackout is skipped 3) _skipFinalBlackout - BOOL - if true, final blackout is skipped 4) _noUseCheckTheWeapons - BOOL - if true, checking of weapon before scene is skipped 5) _noUseLoadingScreen - BOOL - if true, loadingscreen is bypassed 6) __excludedObjectsForIntruderDetector - ARRAY of objects - objects will be excluded from intruder detector RETURNED VALUE: **********************************************************************/"}, "waypointType": {"syntax": "waypointType waypoint", "server": false, "broadcasted": false, "description": "Gets the waypoint type. Type can be:", "example": "waypointType [groupOne,1],", "local": false}, "registeredTasks": {"syntax": "registeredTasks member", "server": false, "broadcasted": false, "description": "List all registered task types.", "example": "tasklist = registeredTasks teamMember player;", "local": false}, "BIS_fnc_commsMenuCreate": {"syntax": "call BIS_fnc_commsMenuCreate", "server": false, "broadcasted": false, "description": "Creates the global communications menu, if it's not already created. All entries are invisible by default. Unhide appropriate sections by using BIS_fnc_commsMenuToggleVisibility.", "example": "call BIS_fnc_commsMenuCreate;", "local": false}, "getFSMVariable": {"syntax": "FSMhandle getFSMVariable name", "server": false, "broadcasted": false, "description": "Return the value of variable in the variable space of given FSM. The FSM handle is the number returned by the execFSM command.", "example": "_handle getFSMVariable \"_foo\";", "local": false}, "showLegend": {"syntax": "map showLegend bool", "server": false, "broadcasted": false, "description": "Show/hide map legend.", "example": "Example needed", "local": false}, "findEditorObject": {"syntax": "map findEditorObject value", "server": false, "broadcasted": false, "description": "Return object that matches the provided reference.", "example": "Example needed", "local": false}, "BIS_fnc_returnNestedElement": {"syntax": "[array, path] call BIS_fnc_returnNestedElement", "server": false, "broadcasted": false, "description": "Function to return an item at a path in an array.", "example": "_array = [[1, 2], [3, 4]]; _value = [_array, [0, 1]] call BIS_fnc_returnNestedElement; // returns 2", "local": false}, "deleteResources": {"syntax": "teamMember deleteResources [resource1, resource2,...]", "server": true, "broadcasted": false, "description": "Delete (unregister) resources of the team member. Resources are deleted in the order they were added. Case insensitive.", "example": "teamMember _agent deleteResources [\"Legs\"];", "local": false}, "hcAllGroups": {"syntax": "hcAllGroups unit", "server": false, "broadcasted": false, "description": "Returns selected groups in high command.", "example": "hcAllGroups player;", "local": false}, "openMap": {"syntax": "openMap show", "server": false, "broadcasted": false, "description": "Shows in-game map. If forced, cannot be closed.", "example": "openMap true;", "local": false}, "BIS_fnc_crossProduct": {"syntax": "[vector1, vector2] call BIS_fnc_crossProduct", "server": false, "broadcasted": false, "description": "Return the cross product of two 3D vectors.", "example": "_product = [[1,2,3], [3,2,1]] call BIS_fnc_crossProduct;", "local": false}, "kbWasSaid": {"syntax": "person kbWasSaid [receiver, topic, sentenceID, maxAge]", "server": false, "broadcasted": false, "description": "Check if given item was said by person to someone. See Conversations for more details.", "example": "player kbWasSaid [otherUnit, \"myTopic\", \"mySentenceID\", 3];", "local": false}, "BIS_fnc_playVideo": {"syntax": "[content, size, color, skipVarName, bgColor, keepAspect] spawn BIS_fnc_playVideo", "server": false, "broadcasted": false, "description": "Plays in-game video with a range of options. The function can be called or spawned. If spawned, scriptDone command can be used to see if video is stopped or finished. If called in scheduled environment, the next line of code will not process until the video is stopped or finished.", "example": "_video = [\"A3\\Missions_F_EPA\\video\\A_in_intro.ogv\"] spawn BIS_fnc_playVideo;", "local": false}, "lnbData": {"syntax": "lnbData [idc, [row, column]]", "server": false, "broadcasted": false, "description": "Returns the additional text (invisible) in an item with the given position of the 2D listbox.", "example": "_ctrl lnbData [ lnbCurSelRow _ctrl,0]; //\"#1\"", "local": true}, "addMPEventHandler": {"syntax": "object addMPEventHandler [type, expression]", "server": true, "broadcasted": true, "description": "Adds MP event handler (EH) to the given object and returns EH handle. MP event handlers are added globally to every client on network in multiplayer and will fire on every client too upon event. If EH has some data to return upon event (e.g. the \"MPKilled\" EH will return an array with 2 elements: the killed unit, and the killer), it is passed in _this variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution.", "example": "_index = player addMPEventHandler [\"mpkilled\", {Null = _this execVM \"playerkilled.sqf\";}];", "local": false}, "joinAsSilent": {"syntax": "unit joinAsSilent [group, id]", "server": true, "broadcasted": true, "description": "Joins the unit to the given group, if position id is available, this one is used. Avoid any radio communication related to joining.", "example": "player joinAsSilent [_group, 4];", "local": false}, "BIS_fnc_invSlotType": {"syntax": "[class] call BIS_fnc_invSlotType", "server": false, "broadcasted": false, "description": "Returns empty inventory slots of given unit.", "example": "[ currentWeapon player ] call BIS_fnc_invSlotType;//Can return [1,0,0,0,0,0,0,0]", "local": false}, "findEmptyPositionReady": {"syntax": "center findEmptyPositionReady [radius,maxDistance]", "server": false, "broadcasted": false, "description": "Check if findEmptyPosition command can be called without waiting for files.", "example": "Example needed", "local": false}, "restartEditorCamera": {"syntax": "restartEditorCamera map", "server": false, "broadcasted": false, "description": "Restarts the mission editor camera (if it was deleted by a script,for example).", "example": "Example needed", "local": false}, "hcGroupParams": {"syntax": "unit hcGroupParams group", "server": false, "broadcasted": false, "description": "Returns parameters describing group in high command bar.", "example": "player hcGroupParams someGroup;", "local": false}, "addBackpackCargo": {"syntax": "vehicle addBackpackCargo [packClassName,count]", "server": true, "broadcasted": false, "description": "Add backpack(s) to the cargo space of vehicle. Classname list of available backpacks is here.", "example": "this addBackpackCargo [\"TK_RPG_Backpack_EP1\",2];", "local": true}, "commandingMenu": {"syntax": "commandingMenu", "server": false, "broadcasted": false, "description": "Return the name of the player actual topmost commanding menu.", "example": "waitUntil {commandingMenu == \"RscStatus\"}; hint \"Press 4, I'm bleeding\u00a0!\";", "local": false}, "BIS_fnc_invAdd": {"syntax": "[object,class,force] call BIS_fnc_invAdd", "server": false, "broadcasted": false, "description": "Adds item to inventory - checks if there is room for it. Checks if add was done by engine.", "example": "[ player,\"someClass\" ] call BIS_fnc_invAdd;", "local": false}, "callExtension": {"syntax": "extension callExtension function", "server": false, "broadcasted": false, "description": "Calls custom .dll also known as Extension. The name of the extension is the name of the extension .dll without \".dll\" part (or without \"_x64.dll\" part on 64-bit Arma). For example if the file is 'myExtension.dll' the name of the extension will be \"myExtension\". For 64-bit extensions, the name of the extension doesn't need to change and is still \"myExtension\". The game will automatically look for 'myExtension_x64.dll' when you use 64-bit Arma exe.", "example": "_return = \"myExtension\" callExtension \"stringToBeParsed\";", "local": false}, "enableGunLights": {"syntax": "thing enableGunLights value", "server": false, "broadcasted": true, "description": "Force the AI to use gun lights", "example": "_group enableGunLights true; // Arma 2 OA _group enableGunLights \"forceOn\"; // Arma 3", "local": true}, "terrainIntersectASL": {"syntax": "terrainIntersectASL [pos1, pos2]", "server": false, "broadcasted": false, "description": "Checks for intersection of terrain between two ASL positions. Returns true if intersects with terrain. For AGL variant, see terrainIntersect", "example": "_intersects = terrainIntersectASL [getPosASL player, getPosASL chopper];", "local": false}, "isAgent": {"syntax": "isAgent teamMember", "server": false, "broadcasted": false, "description": "Check if team member is an agent.", "example": "isAgent teamMember _unit;", "local": false}, "isMultiplayer": {"syntax": "isMultiplayer", "server": false, "broadcasted": false, "description": "Return true if multiPlayer.", "example": "if (isMultiplayer) then { //...block }", "local": false}, "BIS_fnc_dirTo": {"syntax": "[param1, param2] call BIS_fnc_dirTo", "server": false, "broadcasted": false, "description": "Function which returns vector direction from pos1 to pos2.", "example": "sets unit1 in the direction of unit2 unit1 setDir [unit1, unit2] call BIS_fnc_dirTo", "local": false}, "BIS_fnc_classWeapon": {"syntax": "weaponClass call BIS_fnc_classWeapon", "server": false, "broadcasted": false, "description": "Returns class of weapon given by string.", "example": "_weaponConfig = currentWeapon player call BIS_fnc_classWeapon;", "local": false}, "currentMagazine": {"syntax": "currentMagazine vehicle", "server": false, "broadcasted": false, "description": "Returns class name of currently loaded vehicle's magazine.", "example": "_magazineClass = currentMagazine player;//Example: \"30Rnd_545x39_AK\"", "local": false}, "updateObjectTree": {"syntax": "updateObjectTree map", "server": false, "broadcasted": false, "description": "Update the editor object tree.", "example": "Example needed", "local": false}, "say2D": {"syntax": "from say2D sound", "server": true, "broadcasted": false, "description": "Plays given sound in 2D", "example": "Example needed", "local": false}, "groupIconsVisible": {"syntax": "groupIconsVisible", "server": false, "broadcasted": false, "description": "Returns array with group icons visibility. A getter for setGroupIconsVisible", "example": "hint str groupIconsVisible;", "local": false}, "weaponsTurret": {"syntax": "vehicle weaponsTurret turretPath", "server": true, "broadcasted": false, "description": "Returns all weapons of given turret. Use turret path [-1] for driver's turret.", "example": "_weapons = vehicle player weaponsTurret [0,0]", "local": false}, "BIS_fnc_showTime": {"syntax": "[startDate, endDate] call BIS_fnc_showTime", "server": false, "broadcasted": false, "description": "Shows time gap between two dates.", "example": "_dayStart = date; _dayStart set [3, 0]; // set hours to 0 _dayStart set [4, 0]; // set minutes to 0 _now = date; [_dayStart, _now] call BIS_fnc_showTime;", "local": false}, "BIS_fnc_PosToGrid": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "Converts array position to map grid position."}, "setVisibleIfTreeCollapsed": {"syntax": "map setVisibleIfTreeCollapsed [object, visible]", "server": false, "broadcasted": false, "description": "Sets whether or not the object is visible even if the tree is collapsed.", "example": "_map setVisibleIfTreeCollapsed [\"_unit_0\", true]", "local": false}, "lnbSetColumnsPos": {"syntax": "lnbSetColumnsPos [idc, positions]", "server": false, "broadcasted": false, "description": "Sets relative screen X for ListNBox control columns positions. Setter for lnbGetColumnsPosition", "example": "lnbSetColumnsPos [101, [0.1,0.5,0.7]];", "local": false}, "waypointScript": {"syntax": "waypointScript waypoint", "server": false, "broadcasted": false, "description": "Gets the waypoint script.", "example": "waypointScript [groupOne,1]", "local": false}, "BIS_fnc_cutDecimals": {"syntax": "[number, precision] call BIS_fnc_cutDecimals", "server": false, "broadcasted": false, "description": "Function that rounds specified number to specified amount of decimals.", "example": "_cutDecimals = [33.3333, 1] call BIS_fnc_cutDecimals; // returns 33.3", "local": false}, "playMoveNow": {"syntax": "soldier playMoveNow moveName", "server": false, "broadcasted": true, "description": "When used on a person,a smooth transition to the given move will be initiated, but all previous playMove are discarded. List of moves in ArmA 2", "example": "player playMoveNow \"AmovPercMevaSlowWrflDf\"", "local": true}, "BIS_fnc_sceneGetPositionByAngle": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/******************************************************************************* * * version: 1.0 * name: sceneGetPositionByAngle * description: returns new calculated position of object from angle and distance from specified object * parameters: described bellow * return value: array of new coordinates [x, y] *"}, "teamType": {"syntax": "teamType team", "server": false, "broadcasted": false, "description": "Returns a type of given team.", "example": "_type = teamType _team;", "local": false}, "onTeamSwitch": {"syntax": "onTeamSwitch commandset", "server": false, "broadcasted": false, "description": "Defines an action performed when the team switch is finished. Commandset receives the following special variables: _from object previous unit, _to object current unit. Consecutive use of onTeamSwitch command will overwrite previously set commandset.", "example": "onTeamSwitch {[_from, _to] execVM \"myTeamSwitchScript.sqf\";};", "local": false}, "unlockAchievement": {"syntax": "unlockAchievement name", "server": false, "broadcasted": false, "description": "Unlock the given achievement.", "example": "_isUnlocked = unlockAchievement \"someAchievement\";", "local": false}, "showSubtitles": {"syntax": "showSubtitles enable", "server": false, "broadcasted": false, "description": "Enables / disables showing of subtitles in a chat. Only scripted/engine chatter is affected, player manual chat is unaffected. Returns the previous state.", "example": "showSubtitles false;", "local": false}, "checkAIFeature": {"syntax": "checkAIFeature feature", "server": false, "broadcasted": false, "description": "Check if given AI feature is currently enabled. Feature may be one of: \"AwareFormationSoft\", \"CombatFormationSoft\".", "example": "_featureUsed = checkAIFeature \"AwareFormationSoft\"", "local": false}, "hasInterface": {"syntax": "hasInterface", "server": false, "broadcasted": false, "description": "Returns true if the computer has an interface (a real player). False for a dedicated server or for a headless client.", "example": "_isHC =\u00a0!(hasInterface || isDedicated);", "local": false}, "kbAddDatabaseTargets": {"syntax": "Boolean = person kbAddDatabaseTargets fileName", "server": false, "broadcasted": false, "description": "Register target list knowledge base database to given person. See Conversations for more details.", "example": "_hasBeenAdded = _unit kbAddDatabaseTargets \"chat.txt\"", "local": false}, "moveTime": {"syntax": "moveTime soldier", "server": false, "broadcasted": false, "description": "Returns the current time of the most important RTM animation currently being played on the soldier.", "example": "moveTime player;", "local": false}, "BIS_fnc_arrayPushStack": {"syntax": "[array1, array2] call BIS_fnc_arrayPushStack", "server": false, "broadcasted": false, "description": "This function is similar to the array push function; however, it pushes the contents of an array onto the stack array.", "example": "_array = [0,1,2]; [_array, [3,4,5]] call BIS_fnc_arrayPushStack; // _array is [0,1,2,3,4,5]", "local": false}, "setWind": {"syntax": "setWind [x, y, forced]", "server": false, "broadcasted": true, "description": "Set current (forced == false) or permanent (forced == true) wind vector.", "example": "setWind [10, 10, true];", "local": false}, "currentWaypoint": {"syntax": "currentWaypoint groupName", "server": false, "broadcasted": false, "description": "Returns the index of the current waypoint contrary to misleading name. To determine the validity of the index, compare it to the waypoints count. If all waypoints are 'completed', then the index is 1 greater than the last valid index. If there are no waypoints, then the index is 0. By default, a group has 1 waypoint at their starting position, which is considered completed and so the currentWaypoint is 1.", "example": "_index = currentWaypoint group player;", "local": false}, "BIS_fnc_supplydropService": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/* File: supplydropService.sqf Description: Supply drop service - controls approach and departure of transporting air vehicle and actual cargo drop. Used by Supply drop support request. Parameter(s): 1: <object> unit allowed to use the transport system 2: <object> vehicle providing transport 4: <array> positions to be cosen by player; accepted strings are \"pickup\" and \"unload\", the second position is defined by the next paramter (OPTIONAL) 5: <position> (NEEDED ONLY IF PARAMETER #4 IS USED) Returns: N/A */ //MP framework init (used for move command given to transporter vehicle)"}, "assignedCommander": {"syntax": "assignedCommander vehicle", "server": false, "broadcasted": false, "description": "Returns the soldier assigned to the given vehicle as a commander.", "example": "_commander = assignedCommander vehicleName", "local": false}, "BIS_fnc_invSlotsEmpty": {"syntax": "[object] call BIS_fnc_invSlotsEmpty", "server": false, "broadcasted": false, "description": "Returns empty inventory slots of given unit.", "example": "[ player ] call BIS_fnc_invSlotsEmpty;//Can return [0,0,-1,-7,0,-1,0,-12]", "local": false}, "BIS_fnc_spawnCrew": {"syntax": "[vehicle,group,dummyMode,dummyType,crewType]] call BIS_fnc_spawnCrew", "server": false, "broadcasted": false, "description": "Function to fill all crew positions in a vehicle, including turrets. In dummy mode no objects are created and the returned array contains only ones. In this mode the function can be used to count the actual crew of an existing vehicle or vehicle type.", "example": "[ BIS_vehicle, group player ] call BIS_fnc_spawnCrew;", "local": false}, "BIS_fnc_arithmeticMean": {"syntax": "array call BIS_fnc_arithmeticMean", "server": false, "broadcasted": false, "description": "Returns the arithmetic mean of an array of numbers.", "example": "[1,3] call BIS_fnc_arithmeticMean;//Returns 2", "local": false}, "BIS_fnc_arrayShift": {"syntax": "[array] call BIS_fnc_arrayShift", "server": false, "broadcasted": false, "description": "This function removes the first (leftmost) element of an array and returns it.", "example": "_myArray = [\"2\", \"report\", \"status\"]; _removedElement = [_myArray] call BIS_fnc_arrayShift; // array is within an array _removedElement == \"2\"; // true _myArray isEqualTo [\"report\", \"status\"]; // true", "local": false}, "setGroupIconsSelectable": {"syntax": "setGroupIconsSelectable bool", "server": false, "broadcasted": false, "description": "Sets if group icons raise onGroupIconClick, onGroupIconOverEnter and onGroupIconOverLeave events.", "example": "setGroupIconsSelectable true;", "local": false}, "BIS_fnc_maxDiffArray": {"syntax": "[arrayOfNumbers] call BIS_fnc_maxDiffArray", "server": false, "broadcasted": false, "description": "Function to return the maximum difference between all values in an array.", "example": "_maxDiff = [[0, 5, 10, -5]] call BIS_fnc_maxDiffArray; // will return 15 (-5 to 10)", "local": false}, "disableSerialization": {"syntax": "disableSerialization", "server": false, "broadcasted": false, "description": "Disable saving of script containing this command. After this, the script can work with data types which do not support serialization (UI types).", "example": "disableSerialization; _display = findDisplay 46;", "local": false}, "hcSetGroup": {"syntax": "unit hcSetGroup array", "server": false, "broadcasted": false, "description": "Add group to unit's high command bar.", "example": "unit hcSetGroup [group, \"HQ\", teamred];", "local": false}, "diag_captureSlowFrame": {"syntax": "diag_captureSlowFrame [section, threshold]", "server": false, "broadcasted": false, "description": "Opens \"capture frame\" dialog if current frame exceeds set threshold in seconds. One can indicate to either capture duration of a specific profiling selection or the total duration of the frame. The selection names can be obtained by expanding the profiling tree. Clicking on a tree item will highlight the item on the graph and vice versa. The GUI also provides method of copying of the displayed data to clipboard. Some of the selections:", "example": "diag_captureSlowFrame ['total',0.003];", "local": false}, "cameraEffectEnableHUD": {"syntax": "cameraEffectEnableHUD enable", "server": false, "broadcasted": false, "description": "Enable / disable showing of in-game UI during currently active camera effect. By default the HUD is off, which will make results of drawIcon3D invisible, for example.", "example": "cameraEffectEnableHUD true;", "local": false}, "currentMuzzle": {"syntax": "currentMuzzle gunner", "server": false, "broadcasted": false, "description": "Returns current muzzle of unit's weapon.", "example": "_muzzle = currentMuzzle player;", "local": false}, "waypointShow": {"syntax": "waypointShow waypoint", "server": false, "broadcasted": false, "description": "Gets the waypoint show/hide status.", "example": "_wpShow = waypointShow [groupOne,1];", "local": false}, "BIS_fnc_randomNum": {"syntax": "[min, max] call BIS_fnc_randomNum", "server": false, "broadcasted": false, "description": "Returns a random (float) number between the two passed numbers (inclusive). The order of parameters doesn't matter: it can be [min, max] or [max, min].", "example": "[1,3] call BIS_fnc_randomNum; // can be 1, 3 or any value in-between", "local": false}, "terrainIntersect": {"syntax": "terrainIntersect [pos1, pos2]", "server": false, "broadcasted": false, "description": "Checks for intersection of terrain between two AGL positions. Returns true if intersects with terrain. For ASL variant see terrainIntersectASL", "example": "_intersects = terrainIntersect [getPos player, getPos chopper];", "local": false}, "triggerAttachedVehicle": {"syntax": "triggerAttachedVehicle trigger", "server": true, "broadcasted": false, "description": "Returns vehicle attached to the trigger (for example using triggerAttachVehicle). Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "example": "return = triggerAttachedVehicle triggerName;", "local": false}, "copyWaypoints": {"syntax": "groupTo copyWaypoints groupFrom", "server": false, "broadcasted": false, "description": "Copy the chain of waypoints from source to target group. The target group will start to process waypoints from the first one.", "example": "group1 copyWaypoints group2;", "local": false}, "createDiaryRecord": {"syntax": "unitName createDiaryRecord [subject, text, task, state]", "server": false, "broadcasted": false, "description": "creates a diary entry. Supported tags and their parameters:", "example": "player createDiaryRecord [\"Diary\", [\"Intel\", \"Enemy base is on grid <marker name='enemyBase'>161170</marker>\"]]", "local": false}, "BIS_fnc_selectRandom": {"syntax": "var1 call BIS_fnc_selectRandom", "server": false, "broadcasted": false, "description": "Selects one of the arguments at random. There is now a dedicated script command selectRandom, use that instead.", "example": "_bestShooter = [_rento, _ben, _trit] call BIS_fnc_selectRandom; //returns one of the variables _bestSeries = [[\"halo1\",\"halo2\"],[\"ofp\",\"arma2\"]] call BIS_fnc_selectRandom; //returns one of the arrays", "local": false}, "BIS_fnc_subSelect": {"syntax": "[array, start, endOrLength] call BIS_fnc_subSelect", "server": false, "broadcasted": false, "description": "Returns a sub-selection of the passed array.", "example": "_array = [\"a\",\"b\",true,3,8]; [_array, 2] call BIS_fnc_subSelect; // returns [true,3,8]", "local": false}, "addBackpackCargoGlobal": {"syntax": "vehicle addBackpackCargoGlobal [packClassName, count]", "server": true, "broadcasted": true, "description": "Add backpack(s) to the cargo space of vehicle. MP synchronized. Classname list of available backpacks is here", "example": "this addBackpackCargoGlobal [\"TK_RPG_Backpack_EP1\",2];", "local": false}, "groupSelectUnit": {"syntax": "player groupSelectUnit [unit, select]", "server": false, "broadcasted": false, "description": "Selects a unit from player's group. If player is the leader, the effect of this command is similar to player pressing F1, F2, F3... buttons to highlight units in his squad, after which the unit command menu is shown. If leader is AI, player will get usual communication menu to interact with the leader.", "example": "After leaving menu, deselect all units (command menu is not opened -> no selection){ player groupSelectUnit [_x, false]; } forEach (groupSelectedUnits player);", "local": false}, "suppressFor": {"syntax": "unit suppressFor duration", "server": false, "broadcasted": false, "description": "Force suppressive fire from the unit.", "example": "_soldier1 suppressFor 10 Will force soldier1 to do suppressive fire to known enemies during 10 seconds", "local": false}, "teamMember": {"syntax": "teamMember person", "server": false, "broadcasted": false, "description": "Return an agent for given person.", "example": "_agent = teamMember player;", "local": false}, "BIS_fnc_arrayPop": {"syntax": "array call BIS_fnc_arrayPop", "server": false, "broadcasted": false, "description": "This function removes the last (rightmost) element of an array and returns it.", "example": "_array = [1,2,3,4]; _removedElement = _array call BIS_fnc_arrayPop; // _array is now [1,2,3] and _removedElement = 4", "local": false}, "BIS_fnc_ObjectsMapper": {"syntax": "[position, azimuth, objectsArray, badChance] call BIS_fnc_ObjectsMapper", "server": false, "broadcasted": false, "description": "Takes an array of data about a dynamic object template and creates the objects.", "example": "_objectsArray = [ [\"B_UAV_01_F\",[-5.23706,-0.183594,-0.00126648],167.39,1,0,[],\"\",\"\",true,false], [\"C_Offroad_01_F\",[-4.25903,4.62158,0.0630951],224.14,1,0,[],\"\",\"\",true,false] ]; [getMarkerPos \"myBase\", 0, _objectsArray, 0.5] call BIS_fnc_objectsMapper;", "local": false}, "loadOverlay": {"syntax": "map loadOverlay config", "server": false, "broadcasted": false, "description": "Creates the load overlay dialog for the specified type of overlay.", "example": "Example needed", "local": false}, "turretUnit": {"syntax": "vehicle turretUnit turretpath", "server": false, "broadcasted": false, "description": "Returns the unit in the vehicle turret. Driver turret [-1] is supported since Arma 3 v1.57.135045", "example": "_vehicle turretUnit _thisTurret", "local": false}, "joinAs": {"syntax": "unit joinAs [group, id]", "server": true, "broadcasted": true, "description": "Joins the unit to the given group, if position id is available, this one is used.", "example": "player joinAs [_group, 4];", "local": false}, "removeAllItems": {"syntax": "removeAllItems unit", "server": false, "broadcasted": true, "description": "Removes all special items from the unit.", "example": "removeAllItems unitName;", "local": true}, "setTaskState": {"syntax": "task setTaskState state", "server": false, "broadcasted": false, "description": "Set the state of a given task. State value may be one of:", "example": "_tskKillSpongebob setTaskState \"Succeeded\";", "local": false}, "nearestLocationWithDubbing": {"syntax": "nearestLocationWithDubbing position", "server": false, "broadcasted": false, "description": "Find the nearest location (to the given position) having it speech non-empty.", "example": "Example needed", "local": false}, "copyToClipboard": {"syntax": "copyToClipboard text", "server": false, "broadcasted": false, "description": "Copy text string to the clipboard.", "example": "copyToClipboard str _data;", "local": false}, "lnbSize": {"syntax": "lnbSize ctrl", "server": false, "broadcasted": false, "description": "Returns size of 2D listbox or combobox as [rows, columns].", "example": "lnbSize _ctrl;//[8,2]", "local": true}, "BIS_fnc_sceneCheckWeapons": {"example": "Example needed", "server": false, "broadcasted": false, "local": false, "description": "/************************************************************************************************************************** Version: 1.0 Name: CheckWeaponsBefore scene DESCRIPTION: Checks if participants haven't missing weapon or haven't it selected before scene Function works as toggle - 1st run of script: running in SETUP mode - sets correct weapons for scene 2nd run of script: running in RESTORE mode - restore origin weapons(delete weapons after scene if character hadn't any) There is default SETUP: [[BIS_Cooper, \"primary\"],[BIS_Ohara, \"primary\"],[BIS_Rodriguez, \"primary\"],[BIS_Sykes, \"primary\"],[BIS_Miles, \"primary\"]] PARAMETERS: _participants: ARRAY of arrays in format [[character1, \"typeofweapon\"],[character2, \"typeofweapon\"],..,[characterx, \"typeofweapon\"]] where character is for example BIS_Cooper and typeofweapon is one of primary/pistol RETURNED VALUE: nothing ****************************************************************************************************************************/"}, "setLeader": {"syntax": "team setLeader leader", "server": false, "broadcasted": false, "description": "Set the leader of given team. Effect is local, unless both leader unit and team are local to PC on which command is executed, then effect is global.", "example": "Example needed", "local": true}, "inputAction": {"syntax": "inputAction name", "server": false, "broadcasted": false, "description": "Return the state of input devices mapped to given input action.", "example": "inputAction \"leanLeft\" Returns 1 if the button mapped to \"leanLeft\" is pressed currently else 0.", "local": false}, "currentTasks": {"syntax": "currentTasks member", "server": false, "broadcasted": false, "description": "List all uncompleted tasks.", "example": "_playerTasks = currentTasks teamMember player", "local": false}, "getGroupIcons": {"syntax": "getGroupIcons group", "server": true, "broadcasted": false, "description": "Returns all group icons. [id,icon,[offsetx,offsety],[..],..]", "example": "Example needed", "local": false}, "setArmoryPoints": {"syntax": "setArmoryPoints points", "server": false, "broadcasted": false, "description": "Stores passed number into [USERNAME].ArmaXProfile file, where it assigns it as a value to armoryPoints entry. If entry doesn't exist, it is created.", "example": "setArmoryPoints (armoryPoints + 20);", "local": false}, "diag_captureFrame": {"syntax": "diag_captureFrame frame", "server": false, "broadcasted": false, "description": "This command starts counting frames from the moment it is executed and when the count reaches the number passed as param, the current frame is captured and captured data UI dialog appears, similar to diag_captureSlowFrame.", "example": "diag_captureFrame 1; //capture the first frame after command execution", "local": false}, "createGearDialog": {"syntax": "createGearDialog [unit, resource]", "server": false, "broadcasted": false, "description": "Opens gear dialog for given unit. Alternatively use action command: player action [\"Gear\", player];", "example": "createGearDialog [player];", "local": false}, "nearObjectsReady": {"syntax": "position nearObjectsReady radius", "server": false, "broadcasted": false, "description": "Check whether all data are loaded to nearObjects will return in reasonable time.", "example": "_twnpos nearObjectsReady 500;//from ALICE", "local": false}, "lineIntersects": {"syntax": "lineIntersects [begPos, endPos, objIgnore1, objIgnore2]", "server": true, "broadcasted": false, "description": "Checks for object intersection with a virtual line between two positions. Returns true if intersects with an object.", "example": "lineIntersects [ eyePos player, aimPos chopper, player, chopper]", "local": false}, "listObjects": {"syntax": "map listObjects type", "server": false, "broadcasted": false, "description": "Return the list of all objects of given type.", "example": "Example needed", "local": false}, "BIS_fnc_parseNumber": {"syntax": "value call BIS_fnc_parseNumber", "server": false, "broadcasted": false, "description": "Return number from expression", "example": "_result = 7.62 call BIS_fnc_parseNumber; _result = \"7.62\" call BIS_fnc_parseNumber; _result = { 7.62 } call BIS_fnc_parseNumber;", "local": false}, "progressLoadingScreen": {"syntax": "progressLoadingScreen progress", "server": false, "broadcasted": false, "description": "If loading screen is shown, sets progress bar to the given value (interval is from 0 to 1])", "example": "startLoadingScreen [\"Loading My Mission\"]; //Batch of code //Batch of code //Batch of code progressLoadingScreen 0.5; //Batch of code //Batch of code //Batch of code endLoadingScreen;", "local": false}, "triggerActivated": {"syntax": "triggerActivated trigger", "server": true, "broadcasted": false, "description": "Returns true if the trigger has been activated. Note: The trigger could be local or remote but the result returned by this command will be for the trigger condition set up locally on the client that executed the command. See createTrigger for more info.", "example": "if (triggerActivated trg1) then { // Code };", "local": false}, "drawLink": {"syntax": "map drawLink [from,to,param type,line type,color]", "server": false, "broadcasted": false, "description": "The editor will draw a line between the two specified editor objects. Line type can be LINE or ARROW.", "example": "Example needed", "local": false}, "addMenu": {"syntax": "map addMenu [text,priority]", "server": false, "broadcasted": false, "description": "Adds a new menu button. Priority is optional.", "example": "example", "local": false}, "BIS_fnc_magnitude": {"syntax": "vector call BIS_fnc_magnitude", "server": false, "broadcasted": false, "description": "Returns the magnitude of an array of numbers. The vector can have any number of elements.", "example": "[5,3] call BIS_fnc_magnitude;", "local": false}, "onEachFrame": {"syntax": "onEachFrame statement", "server": false, "broadcasted": false, "description": "Runs given statement every frame.", "example": "onEachFrame { hintSilent str position player}; //Hints position every frame", "local": false}, "visiblePositionASL": {"syntax": "visiblePositionASL object", "server": false, "broadcasted": false, "description": "Returns an object's rendered 3D position ASL (z value above sea level) in render time scope.", "example": "playerRenderedPosASL = visiblePositionASL player;", "local": false}}, "OFP": {"addMagazine": {"syntax": "unitName addMagazine magazineName", "server": true, "broadcasted": true, "description": "Adds a magazine to a person. Infantry units can only carry a specific number of magazines, once the magazine slots are filled (or uniform/vest/bagpack are full in Arma3), any further addMagazine commands are ignored. If class of magazine does not exist, error message is printed in .rpt: player addMagazine \"dasdsa\"; // .rpt: Given magazine[dasdsa] not found)", "example": "player addMagazine \"30Rnd_556x45_STANAG\";", "local": true}, "closeDialog": {"syntax": "closeDialog exitcode", "server": false, "broadcasted": false, "description": "Close the currently active user dialog with exit code. Most common exit codes are: #define IDC_OK 1 //emulate \"Ok\" button #define IDC_CANCEL 2 //emulate \"Cancel\" button", "example": "closeDialog 2;", "local": true}, "saveStatus": {"syntax": "object saveStatus name", "server": false, "broadcasted": false, "description": "Saves object's properties to Objects.sav file in campaign directory as entry name.", "example": "player saveStatus \"playerstate\"", "local": false}, "dialog": {"syntax": "Boolean = dialog", "server": false, "broadcasted": false, "description": "Tests whether any user dialog is open.", "example": "if (!dialog) then {createDialog \"Dialog1\";};", "local": false}, "switchMove": {"syntax": "person switchMove moveName", "server": false, "broadcasted": true, "description": "Applies given animation to a unit. When used on a person, the given move is started immediately (there is no transition). Use _unit switchMove \"\"; to reset animation. For a smooth transition use playMove.", "example": "Prone: player switchMove \"amovppnemstpsraswrfldnon\";", "local": true}, "setRepairCargo": {"syntax": "vehicleName setRepairCargo amount", "server": false, "broadcasted": true, "description": "Set amount of repair resources in cargo space of repair vehicle. Amount 1 is full cargo.", "example": "_repairTruck1 setRepairCargo 0", "local": true}, "damage": {"syntax": "Number = damage object", "server": true, "broadcasted": false, "description": "Return the damage value of an object.", "example": "? ((damage player)>0.1)\u00a0: player groupChat \"I'm hurt! Medic!\"", "local": false}, "alive": {"syntax": "alive object", "server": true, "broadcasted": false, "description": "Check if given vehicle/person/building is alive (i.e. not dead or destroyed). alive objNull returns false.", "example": "SQS: ?!(alive player)\u00a0: exit", "local": false}, "queryWeaponPool": {"syntax": "Number = queryWeaponPool name", "server": false, "broadcasted": false, "description": "Return number of weapons of type name in weapon pool (used in campaign to transfer weapons into next mission).", "example": "_num=queryWeaponPool \"M16\"", "local": false}, "cheatsEnabled": {"syntax": "Boolean = cheatsEnabled", "server": false, "broadcasted": false, "description": "Checks whether cheats are enabled (whether the designers' version is running).", "example": "_enabled = cheatsEnabled;", "local": false}, "deg": {"syntax": "deg value", "server": false, "broadcasted": false, "description": "Converts given value in radians to degrees. 1 degree equals 0.01745 radians or pi / 180.", "example": "_degrees = deg 1; // returns 57.2958", "local": false}, "commandMove": {"syntax": "unitName commandMove position", "server": false, "broadcasted": true, "description": "Order the given unit(s) to move to the given location (via the radio). Exactly the same as doMove, except this command displays a radio message.", "example": "_soldier1 commandMove (getMarkerPos \"Marker1\")", "local": true}, "switchLight": {"syntax": "lamp switchLight mode", "server": false, "broadcasted": false, "description": "Controls whether a lamp is lit or not. For working with CfgNonAIVehicles class \"StreetLamp\" only.", "example": "(object 12345) switchLight \"OFF\"", "local": false}, "globalChat": {"syntax": "unitName globalChat chatText", "server": true, "broadcasted": false, "description": "Types text to the global radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", "example": "_soldierOne globalChat \"Show this text\";", "local": false}, "side": {"syntax": "side object", "server": true, "broadcasted": false, "description": "Returns the side of a unit, vehicle, object or location.", "example": "if (side player == west) then { hint \"Player is on the West side\" };", "local": false}, "countUnknown": {"syntax": "unitName countUnknown arrayName", "server": true, "broadcasted": false, "description": "Count how many units in the array are unknown to the given unit.", "example": "_num = player countUnknown list _triggerOne;", "local": false}, "sliderSetSpeed": {"syntax": "sliderSetSpeed [idc,line,page]", "server": false, "broadcasted": false, "description": "Set speed of slider with id idc of topmost user dialog.", "example": "sliderSetSpeed [101, 0.5, 2];", "local": false}, "camCommitted": {"syntax": "camCommitted camera", "server": false, "broadcasted": false, "description": "Checks if the conduction of the last camCommit call already finished.", "example": "SQS: ; create a camera object _cam = \"camera\" camCreate [5600,4800,10] _cam camSetTarget player _cam cameraEffect [\"internal\", \"BACK\"] _cam camCommit 0 ; smoothly move the camera to its new position in 6 seconds _cam camSetPos [5680,4720,20] _cam camCommit 6 @camCommitted _cam ; proceed", "local": false}, "camSetTarget": {"syntax": "camera camSetTarget target", "server": false, "broadcasted": false, "description": "Set the target object or position where the given camera should point at. Needs the call of camCommit to be conducted.", "example": "_camera camSetTarget player;", "local": true}, "loadFile": {"syntax": "loadFile fileName", "server": false, "broadcasted": false, "description": "Return content of given filename as string. If you plan to compile said string, be aware that the file shouldn't contain comments or compile will throw an error. If there are comments, use preprocessFile/preprocessFileLineNumbers instead.", "example": "_contents = loadFile \"wantedString.txt\";", "local": false}, "setTerrainGrid": {"syntax": "setTerrainGrid grid", "server": false, "broadcasted": false, "description": "Operation Flashpoint, VBS1: Set desired terrain resolution (in meters). For default landscapes, supported resolutions are:", "example": "setTerrainGrid 12.5", "local": false}, "addWeaponPool": {"syntax": "addWeaponPool [weaponName, count]", "server": false, "broadcasted": false, "description": "Add weapons to the weapon pool, of which the player may choose in the following mission. Available in campaigns only.", "example": "addWeaponPool [\"M16\",5];", "local": false}, "addMagazineCargo": {"syntax": "vehicleName addMagazineCargo [magazineName, count]", "server": true, "broadcasted": false, "description": "Add magazines to the cargo space of vehicles, which can be taken out by infantry units. Once the magazine cargo space is filled up, any further addMagazineCargo commands are ignored.", "example": "_truck addMagazineCargo [\"M16\", 5];", "local": true}, "setUnitPos": {"syntax": "unit setUnitPos mode", "server": false, "broadcasted": true, "description": "Set unit position rules. Mode may be one of:", "example": "_soldier setUnitPos \"UP\";", "local": true}, "camSetDive": {"syntax": "camera camSetDive dive", "server": false, "broadcasted": false, "description": "Sets camera dive angle. Does not commit changes.", "example": "_camera camSetDive -0.1", "local": false}, "doFollow": {"syntax": "unitName doFollow unitName2", "server": false, "broadcasted": true, "description": "Order the given unit(s) to follow the given other unit or vehicle eg (without radio messages). Also is used to resume unit formation after doStop, just doFollow leader even if it is the leader himself you want to resume (see Example 2).", "example": "_soldier1 doFollow _soldier2", "local": true}, "setAmmoCargo": {"syntax": "vehicleName setAmmoCargo ammoCargo", "server": false, "broadcasted": true, "description": "Set amount of ammo resources in cargo space of a rearm vehicle. Ammo resource is used to resupply vehicles that take ammo. Soldiers use individual magazines instead. Amount: 1 is full cargo. The", "example": "_ammoTruck1 setAmmoCargo 0.5;", "local": true}, "ctrlVisible": {"syntax": "Boolean = ctrlVisible idc", "server": false, "broadcasted": false, "description": "Returns if a control of the currently active user dialog is shown or not. Read Dialog Control for more information about user dialogs and controls.", "example": "_bool = ctrlVisible 100;", "local": true}, "land": {"syntax": "helicopter land mode", "server": false, "broadcasted": true, "description": "Force helicopter landing. Landing mode may be:", "example": "_cobraOne land \"LAND\"", "local": true}, "deleteIdentity": {"syntax": "Boolean = deleteIdentity identityName", "server": false, "broadcasted": false, "description": "Delete an identity (created with saveIdentity) from the campaign's progress file.", "example": "?deleteIdentity \"playerIdentity\":hint \"Delete ok\"", "local": false}, "setFlagSide": {"syntax": "flag setFlagSide side", "server": false, "broadcasted": true, "description": "Sets flag Side. A flag may be taken by any unit that is enemy to the side that owns the flag. Just like with setFlagTexture, if the command executed where unit is local effect of the command will be global and JIP compatible.", "example": "_flag1 setFlagSide east;", "local": true}, "setFormDir": {"syntax": "group setFormDir heading", "server": false, "broadcasted": true, "description": "Set group formation heading. Accepted heading range is 0 to 360. Formation is facing this direction unless enemy is seen. When group is moving, this value is overriden by movement direction.", "example": "_group1 setFormDir 180;", "local": true}, "unassignVehicle": {"syntax": "unassignVehicle unitName", "server": false, "broadcasted": true, "description": "Unassigns individual unit from a vehicle, i.e removes assignedVehicleRole of the unit. If the unit is currently in that vehicle, the group leader will issue an order to disembark.", "example": "unassignVehicle player;", "local": true}, "ammo": {"syntax": "unit ammo muzzle", "server": true, "broadcasted": false, "description": "Check how many rounds are left in the currently loaded magazine in the given muzzle. Since Arma v1.55.133505 the command also returns ammo for units in vehicles.", "example": "_count = player ammo \"M16\"; //returns 30 in case of a full magazine", "local": false}, "scudState": {"syntax": "Number = scudState scudName", "server": false, "broadcasted": false, "description": "Current state of given Scud launcher. Following states are recognized:", "example": "if ((scudState _scud) == 3) exitWith { player sideChat \"SCUD Launch status: Missile Ignition\"; };", "local": false}, "removeAllEventHandlers": {"syntax": "objectName removeAllEventHandlers handlerType", "server": false, "broadcasted": false, "description": "Removes all event handlers of given type that were added by addEventHandler. Since VBS2 v1.24 can be applied on individual weapon rounds.", "example": "player removeAllEventHandlers \"killed\";", "local": false}, "enemy": {"syntax": "Side = enemy", "server": false, "broadcasted": false, "description": "Enemy side (enemy to all units). This command is not functional and appears to have be replaced by sideEnemy.", "example": "?_side==enemy: hint \"ouch\"", "local": false}, "setAccTime": {"syntax": "setAccTime accFactor", "server": false, "broadcasted": false, "description": "Set time acceleration coefficient. May be also used to slow time in cutscenes. This command does NOT work in multiplayer. accFactor is clamped to [1/128; 4].", "example": "setAccTime 0.1", "local": false}, "sliderSetPosition": {"syntax": "sliderSetPosition [idc, pos]", "server": false, "broadcasted": false, "description": "Set current thumb position of slider idc of topmost user dialog.", "example": "sliderSetPosition [101, 50];", "local": false}, "getMarkerType": {"syntax": "String = getMarkerType markerName", "server": true, "broadcasted": false, "description": "Returns the type of a given marker. See cfgMarkers for a list of standard markers.", "example": "\"MarkerOne\" setMarkerType \"Destroy\" _type = getMarkerType \"MarkerOne\"", "local": false}, "setCombatMode": {"syntax": "groupName setCombatMode mode", "server": false, "broadcasted": true, "description": "Set group combat mode (engagement rules). Mode may be one of:", "example": "_group1 setCombatMode \"BLUE\";", "local": true}, "getWorld": {"syntax": "getWorld", "server": false, "broadcasted": false, "description": "Returns the name of the current map. Name is actually class as defined in config (eg Intro).", "example": "; if testing on Everon, getWorld will return \"eden\" hint getWorld", "local": false}, "removeMagazine": {"syntax": "unitName removeMagazine magazineName", "server": false, "broadcasted": false, "description": "Remove magazine from the unit.", "example": "player removeMagazine \"M16\"", "local": true}, "lbColor": {"syntax": "lbColor [idc, index]", "server": false, "broadcasted": false, "description": "Returns the text color of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.", "example": "_colour = lbColor [101, 0];", "local": true}, "setRain": {"syntax": "time setRain rain", "server": false, "broadcasted": true, "description": "Set rain density smoothly over the given transition time (in seconds). A transition time of zero means an immediate change. A rain density of zero is no rain, one is maximum rain. Rain is not possible when overcast is less than 0.7.", "example": "60 setRain 1;", "local": false}, "isNull": {"syntax": "isNull entity", "server": true, "broadcasted": false, "description": "Checks whether the tested item is Null.", "example": "if (isNull obj) then {hint \"doesn't exist\";};", "local": false}, "getDammage": {"syntax": "getDammage object", "server": false, "broadcasted": false, "description": "Returns the object damage in the range from 0 to 1. Alias of damage.", "example": "_damage = getDammage player;", "local": false}, "buildingPos": {"syntax": "building buildingPos index", "server": true, "broadcasted": false, "description": "Returns PositionAGL of a given indexed position in a building. The index is 0-based (i.e. the first possible position would be 0. So if a building has 5 positions listed in the editor, 4 would be the highest position index usable with this command). Command will return [0,0,0] if buildingPos with given index is non-existent.", "example": "_soldier setPosATL (_house1 buildingPos 2);", "local": false}, "countFriendly": {"syntax": "unitName countFriendly arrayName", "server": true, "broadcasted": false, "description": "Count how many units in the array are considered friendly to the given unit.", "example": "_num = player countFriendly list _triggerOne;", "local": false}, "doMove": {"syntax": "unit(s) doMove position", "server": false, "broadcasted": true, "description": "Order the given unit(s) to move to the given position (without radio messages). After reaching his destination, the unit will immediately return to formation (if in a group); or order his group to form around his new position (if a group leader). Use doStop to stop units returning to formation.", "example": "_soldier1 doMove (position _officer);", "local": true}, "hintC": {"syntax": "hintC content", "server": false, "broadcasted": false, "description": "Displays attractive hint in the center of the screen. Player control is taken away until user presses \"Continue\". After user confirmation, the content of the hintC is repeated again in a normal hint. This type of hint can also have a title. It is also possible to drag this type of hint around the screen.", "example": "hintC \"Press W to move forward\";", "local": false}, "engineOn": {"syntax": "vehicle engineOn state", "server": false, "broadcasted": true, "description": "Activates and deactivates the engine of a vehicle. This command has to be executed where vehicle is local. NOTE: Executed on a remote vehicle this command may turn the engine on but then it will get turned off by itself after a short while.", "example": "if (!isEngineOn _jeep) then { _jeep engineOn true; };", "local": true}, "skill": {"syntax": "skill unitName", "server": false, "broadcasted": false, "description": "Returns current level of ability of a unit, in range between 0 and 1, 1 being the highest level of skill.", "example": "_skill = skill unit1;", "local": false}, "setMarkerColor": {"syntax": "markerName setMarkerColor color", "server": false, "broadcasted": true, "description": "Sets marker color. Marker color names and their corresponding RGBA values for Arma 3 could be found in here: CfgMarkerColors_Arma_3", "example": "\"MarkerOne\" setMarkerColor \"ColorBlack\";", "local": false}, "getWPPos": {"syntax": "Array = getWPPos [group, index]", "server": true, "broadcasted": false, "description": "Returns the position of a selected waypoint of a given group. Waypoints include only those which were placed in the mission editor.", "example": "[_group1,1] setWPPos [200,600,0];", "local": false}, "direction": {"syntax": "direction object", "server": true, "broadcasted": false, "description": "Returns the direction an object or a location is facing (differs from getDir in that this also works with locations).", "example": "player setDir 90; _d = direction player;//returns 90", "local": false}, "sliderSpeed": {"syntax": "sliderSpeed idc", "server": false, "broadcasted": false, "description": "Return speed, as an Array [min, max] of slider idc of topmost user dialog.", "example": "_slidespeed1 = sliderSpeed 105;", "local": false}, "setBehaviour": {"syntax": "groupName setBehaviour behaviour", "server": false, "broadcasted": true, "description": "Sets group behaviour mode. If a unit is given as argument, behaviour is set for the unit's group. Behaviour is one of:", "example": "_group1 setBehaviour \"SAFE\";", "local": true}, "lbDelete": {"syntax": "lbDelete [idc, index]", "server": false, "broadcasted": false, "description": "Removes the item with the given index from the listbox or combobox with id idc of the topmost user dialog.", "example": "lbDelete [101, 0];", "local": true}, "queryMagazinePool": {"syntax": "Number = queryMagazinePool name", "server": false, "broadcasted": false, "description": "Return number of magazines of type name in magazine pool (used in campaign to transfer magazines into next mission).", "example": "_num = queryMagazinePool \"M16\";", "local": false}, "playMove": {"syntax": "unitName playMove moveName", "server": false, "broadcasted": true, "description": "When used on person, smooth transition to given move will be done.", "example": "soldierOne playMove \"Stand\"", "local": true}, "lbAdd": {"syntax": "Number = lbAdd [idc, text]", "server": false, "broadcasted": false, "description": "Adds an item with the given text to the listbox or combobox with id idc of the topmost user dialog.", "example": "_index = lbAdd [101, \"First item\"];", "local": true}, "benchmark": {"syntax": "Number = benchmark", "server": false, "broadcasted": false, "description": "Returns the value of \"3D Performance\" in OFP Preferences (flashpoint.cfg). This can be used to estimate the computer performance to adapt CPU and GPU demanding settings like view distance dynamically in missions.", "example": "? (benchmark>2000)\u00a0: setViewDistance 2000", "local": false}, "addEventHandler": {"syntax": "object addEventHandler [type, command]", "server": true, "broadcasted": false, "description": "Adds event handler (EH) to the given object and returns EH handle. If EH has some data to return upon event (e.g. the \"killed\" EH will return an array with 2 elements: the killed unit, and the killer), it is passed in _this variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in _thisEventHandler variable and is available during EH code execution.", "example": "_EHkilledIdx = player addEventHandler [\"killed\", {_this exec \"playerKilled.sqs\"}]", "local": true}, "shownCompass": {"syntax": "shownCompass", "server": false, "broadcasted": false, "description": "Checks if client has Compass enabled in description.ext (showCompass param) or force enabled with showCompass command.", "example": "if (shownCompass) then {hint \"You have Compass enabled\"};", "local": false}, "addScore": {"syntax": "unit addScore score", "server": true, "broadcasted": true, "description": "Add a number to the score of a unit. This score is shown in multiplayer in the \"I\" (\"P\" in Arma 3) screen. Negative values will remove from the score. Server execution only.", "example": "unit addScore 10;", "local": false}, "setGroupId": {"syntax": "group setGroupId [nameFormat, nameParam1, ..., nameParamN]", "server": true, "broadcasted": false, "description": "Sets a group's identity, how it will be displayed in chat, for example. While groups on the different sides can have identical ids, the groups on the same side cannot. When given id exists already, the group which currently has it will simply swap it with the current id of the group for which this id is intended. For example: group1 = createGroup west; group2 = createGroup west; group1 setGroupId [\"Active Group\"]; group2 setGroupId [\"Inactive Group\"]; systemChat groupId group1; //\"Active Group\"; systemChat groupId group2; //\"Inactive Group\"; group2 setGroupId [\"Active Group\"]; systemChat groupId group1; //\"Inactive Group\"; systemChat groupId group2; //\"Active Group\"; The identity setup could also consist of format keywords (marked with\u00a0%) and param keywords taken from CfgWorlds config. Basically it is like format command but with some special group keywords. For Arma 3 possible values are:", "example": "Arma 3:group player setGroupId [\"Some name for the group\"]; hint groupId group player; //\"Some name for the group\" player sideChat \"lalala\"; //Some name for the group (KK): \"lalala\"", "local": false}, "onBriefingGroup": {"syntax": "onBriefingGroup soundName", "server": false, "broadcasted": false, "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Group tab is selected in the briefing.", "example": "onBriefingGroup \"GroupVoiceOver\"", "local": false}, "cutRsc": {"syntax": "cutRsc [class, type, speed, showInMap]", "server": false, "broadcasted": false, "description": "Display a resource defined in RscTitles of the mission's Description.ext, the campaign's description.ext or the global config.", "example": "cutRsc [\"binocular\", \"PLAIN\"]; cutRsc [\"binocular\", \"PLAIN\", 2]; cutRsc [\"binocular\", \"PLAIN\", 2, false];", "local": false}, "cutText": {"syntax": "cutText [text, type, speed, showInMap, isStructuredText]", "server": false, "broadcasted": false, "description": "Displays a text message in the center of the screen. The text can be displayed on multiple lines by using \"\\n\" new line characters:", "example": "cutText [\"\",\"BLACK OUT\"]; cutText [\"Hello World!\",\"PLAIN\",2];", "local": false}, "fadeSound": {"syntax": "time fadeSound volume", "server": false, "broadcasted": false, "description": "Changes the sound volume smoothly within the given time.", "example": "5 fadeSound 0", "local": false}, "mapAnimClear": {"syntax": "mapAnimClear", "server": false, "broadcasted": false, "description": "Clear map animation.", "example": "mapAnimClear;", "local": true}, "knowsAbout": {"syntax": "who knowsAbout target", "server": false, "broadcasted": false, "description": "Checks if a group or a side knows about target.", "example": "_knowledge = player knowsAbout _target;", "local": true}, "pi": {"syntax": "Number = pi", "server": false, "broadcasted": false, "description": "pi (180 degrees converted to Radians).", "example": "", "local": false}, "globalRadio": {"syntax": "unit globalRadio radioName", "server": true, "broadcasted": false, "description": "Sends the audio message to the global radio channel. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).", "example": "_soldierOne globalRadio \"messageOne\";", "local": false}, "setFlagOwner": {"syntax": "flag setFlagOwner owner", "server": true, "broadcasted": true, "description": "Sets flag owner. When owner is set to objNull or any object other than a unit of class man or logic, flag is returned to the flagpole. A flag owned by a logic has no visual representation.", "example": "_flag1 setFlagOwner _soldier1;", "local": false}, "lbSetColor": {"syntax": "lbSetColor [idc, index, color]", "server": false, "broadcasted": false, "description": "Sets the color of the item (left) with the given index of the listbox or combobox with id idc of the topmost user dialog to color.", "example": "lbSetColor [101, 0, [0, 1, 0, 0.5]];", "local": true}, "cutObj": {"syntax": "cutObj [class, type, speed, showInMap]", "server": false, "broadcasted": false, "description": "Displays an object defined in the global config in CfgTitles.", "example": "cutObj [\"TVSet\", \"PLAIN\"]; cutObj [\"TVSet\", \"PLAIN\", 2]", "local": false}, "setDir": {"syntax": "object setDir heading", "server": false, "broadcasted": true, "description": "Sets object heading. Angles are measured in degrees clockwise from north, and regular range goes from 0 to 360 (0\u00b0 = N, 90\u00b0 = E, 180\u00b0 = S, 270\u00b0 = W). Negative angles represent a counter-clockwise angle.", "example": "unit1 setDir 45; // will set unit1 to face North-East", "local": true}, "doWatch": {"syntax": "unit(s) doWatch position", "server": false, "broadcasted": true, "description": "Order the given unit(s) to watch the given position or target (without radio messages). Use objNull as the target to order a unit to stop watching a position/target.", "example": "_soldierOne doWatch markerPos \"MarkerMoveOne\" The unit named \"soldierOne\" will watch the position where the marker \"MarkerMoveOne\" is placed.", "local": true}, "atg": {"syntax": "atg x", "server": false, "broadcasted": false, "description": "Equivalent to atan.", "example": "_atanThreeFifth = atg 3/5;", "local": false}, "lbValue": {"syntax": "lbValue [idc, index]", "server": false, "broadcasted": false, "description": "Returns the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.", "example": "_value = lbValue [101, 0];", "local": true}, "moveInCommander": {"syntax": "unitName moveInCommander vehicle", "server": false, "broadcasted": true, "description": "Move soldier into vehicle commander position (Immediate, no animation).", "example": "_soldierOne moveInCommander _tankOne", "local": true}, "or": {"syntax": "Boolean = a or b", "server": false, "broadcasted": false, "description": "Returns true only if one or both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is true, evaluation of the right side is skipped completely). Identical to: a || b", "example": "if ((OBJ1) or (_enemycount == 0)) then {hint \"you win\u00a0!\"}", "local": false}, "publicVariable": {"syntax": "publicVariable varName", "server": false, "broadcasted": true, "description": "Broadcasts missionNamespace variable and its value to all computers. The data is sent consequently and reliably to all clients. Using publicVariable too frequently in a given period of time can cause other parts of the game to experience bandwidth problems.", "example": "publicVariable \"CTFscoreOne\";", "local": true}, "onBriefingGear": {"syntax": "onBriefingGear soundName", "server": false, "broadcasted": false, "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Gear tab is selected in the briefing.", "example": "onBriefingGear \"GearVoiceOver\"", "local": false}, "disableAI": {"syntax": "unitName disableAI section", "server": false, "broadcasted": true, "description": "Disable parts of the AI behaviour to get a better control over the actions of a unit. Must be executed where AI unit is local. If unit changes locality, it might need to be executed again at the new locality to maintain effect. Possible values are:", "example": "_soldier1 disableAI \"AUTOTARGET\";", "local": true}, "setSkill": {"syntax": "unit setSkill skill", "server": false, "broadcasted": false, "description": "Sets ability level of person (commander unit). Value of skill may vary from 0 to 1.", "example": "_hero setSkill 1;", "local": false}, "removeAllWeapons": {"syntax": "removeAllWeapons unitName", "server": false, "broadcasted": true, "description": "Remove all weapons and magazines of the unit. On vehicles only ammo is removed Does not remove map, compass, radio. Use unitname removeweapon \"itemmap\" for that purpose.", "example": "removeAllWeapons player;", "local": true}, "allowFleeing": {"syntax": "name allowFleeing cowardice", "server": false, "broadcasted": true, "description": "Sets the cowardice level (the lack of courage or bravery) of a group or unit. The more cowardice a Group or Object has, the sooner it will start fleeing. 0 means maximum courage, while 1 means always fleeing.", "example": "_group1 allowFleeing 0;", "local": true}, "onMapSingleClick": {"syntax": "onMapSingleClick command", "server": false, "broadcasted": false, "description": "Define action performed when user clicks in map by executing command string. the string receives 5 (localised in scope) variables:", "example": "onMapSingleClick \"'SoldierWB' createUnit [_pos, group player]; true\"; ArmA: Creates a soldier unit at the position clicked.", "local": false}, "saveIdentity": {"syntax": "unitName saveIdentity name", "server": false, "broadcasted": false, "description": "Saves person's identity to Objects.sav file in campaign directory as entry name.", "example": "player saveIdentity \"playerid\"", "local": false}, "stop": {"syntax": "unitName stop toggle", "server": false, "broadcasted": true, "description": "Stop AI unit.", "example": "loon1 stop true", "local": true}, "speed": {"syntax": "speed object", "server": false, "broadcasted": false, "description": "Object speed (in km/h). Returns relative speed of given object along Y axis. An equivalent to:", "example": "if (speed _truck1 >= 100) then {hint \"You're going too fast!\"};", "local": false}, "lbCurSel": {"syntax": "lbCurSel idc", "server": false, "broadcasted": false, "description": "Returns the index of the selected item of the listbox or combobox with id idc of the topmost user dialog. For listbox LB_MULTI (multi-selection) use lbSelection.", "example": "_index = lbCurSel 101;", "local": false}, "getDir": {"syntax": "getDir object", "server": true, "broadcasted": false, "description": "Returns the object heading in the range from 0 to 360.", "example": "_azimuth = getDir player;", "local": false}, "countSide": {"syntax": "side countSide arrayName", "server": true, "broadcasted": false, "description": "Count how many units in the given array belong to given side. If the object in passed array is a Group, the leader of the group will be counted.", "example": "_num = west countSide list _triggerOne;", "local": false}, "addRating": {"syntax": "unitName addRating rating", "server": false, "broadcasted": true, "description": "Add a number to the rating of a unit - negative values can be used to reduce the rating.", "example": "player addRating 2000;", "local": true}, "fillWeaponsFromPool": {"syntax": "fillWeaponsFromPool unitName", "server": false, "broadcasted": false, "description": "Adds magazines from the campaign pool to the given unit, depending on his weapons.", "example": "fillWeaponsFromPool _soldier", "local": false}, "weapons": {"syntax": "Array = weapons vehicleName", "server": false, "broadcasted": false, "description": "Returns array of names of all Unit's weapons.", "example": "_wArray = weapons player;", "local": false}, "gunner": {"syntax": "Object = gunner vehicle", "server": true, "broadcasted": false, "description": "Returns the gunner of a vehicle.", "example": "(gunner _tank1) action [\"getout\",_tank1]", "local": false}, "shownGPS": {"syntax": "shownGPS", "server": false, "broadcasted": false, "description": "Checks if client has GPS reciever enabled in description.ext (showGPS param) or force enabled with showGPS command.", "example": "if (shownGPS) then {hint \"You have GPS reciever enabled\"};", "local": false}, "sideEnemy": {"syntax": "sideEnemy", "server": false, "broadcasted": false, "description": "The enemy side (used for renegades). Unit of this side is enemy to everyone.", "example": "if (side player == sideEnemy) then { hint \"We've got a renegade!\"; };", "local": false}, "shownRadio": {"syntax": "shownRadio", "server": false, "broadcasted": false, "description": "Check if player has Radio enabled.", "example": "if (shownRadio) then {hint \"You have Radio enabled.\"};", "local": false}, "removeEventHandler": {"syntax": "objectName removeEventHandler [type, index]", "server": false, "broadcasted": false, "description": "Removes event handler added by addEventHandler. When any handler is removed, all handler indices higher than the deleted one should be decremented.", "example": "player removeEventHandler [\"killed\", 0]", "local": false}, "disableUserInput": {"syntax": "disableUserInput state", "server": false, "broadcasted": false, "description": "Disable and enable the keyboard and mouse input, usually used during cutscenes.", "example": "disableUserInput true ; cutscene disableUserInput false", "local": false}, "ctrlEnabled": {"syntax": "Boolean = ctrlEnabled idc", "server": false, "broadcasted": false, "description": "Returns if a control on the currently active user dialog is enabled. Disabled controls cannot be focused. Read Dialog Control for more information about user dialogs and controls.", "example": "if (!(ctrlEnabled 100)) then { ctrlEnable [100, true] };", "local": true}, "sideChat": {"syntax": "unitName sideChat chatText", "server": true, "broadcasted": false, "description": "Types text to the side radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", "example": "_soldierOne sideChat \"Show this text\";", "local": false}, "createVehicle": {"syntax": "type createVehicle position", "server": false, "broadcasted": true, "description": "Creates an empty object of given classname type (See Arma 3 Assets or createVehicle/vehicles). Cannot be used to create objects of type \"Logic\", use createUnit command for that.", "example": "_jeep = \"Jeep\" createVehicle position player;", "local": false}, "ctrlEnable": {"syntax": "ctrlEnable [idc, enable]", "server": false, "broadcasted": false, "description": "Enable or disable a control of the currently active user dialog. Disabled controls cannot be clicked onto. Read Dialog Control for more information about user dialogs and controls.", "example": "ctrlEnable [100, false]", "local": true}, "deleteStatus": {"syntax": "Boolean = deleteStatus statusName", "server": false, "broadcasted": true, "description": "Delete a status (created with saveStatus) from the campaign's progress file.", "example": "? deleteStatus \"playerStatus\"\u00a0: \"saved status gone from campaign\"", "local": false}, "commandWatch": {"syntax": "unitName(s) commandWatch position", "server": false, "broadcasted": true, "description": "Orders the unit(s) to watch the given position or target (via the radio). Use objNull as the target to order a unit to stop watching a position/target", "example": "_soldierOne commandWatch markerPos \"MarkerMoveOne\"", "local": true}, "crew": {"syntax": "crew vehicleName", "server": true, "broadcasted": false, "description": "Returns the crew (both dead and alive) of the given vehicle.", "example": "player in (crew _tank);", "local": false}, "loadIdentity": {"syntax": "person loadIdentity name", "server": false, "broadcasted": false, "description": "Loads person's identity from Objects.sav file in campaign directory (from entry name).", "example": "_ok = player loadIdentity \"playerIdentity\"", "local": false}, "playersNumber": {"syntax": "playersNumber side", "server": false, "broadcasted": false, "description": "Returns count of occupied role selection slots for given side. Players who claimed a slot in the lobby but didn't start the mission are counted as well. If disabledAI = 0; in description.ext or Enable AI option is checked in 3DEN, AI bots will be treated as valid players and will be counted too. Multiplayer only, in singleplayer always returns 0.", "example": "_west = playersNumber west; _east = playersNumber east; _civ = playersNumber civilian; hint format [\"West:%1 East:%2, Civ:%3\", _west, _east, _civ];", "local": false}, "moveInCargo": {"syntax": "unitName moveInCargo vehicle", "server": false, "broadcasted": true, "description": "Move soldier into vehicle cargo position (Immediate, no animation).", "example": "_soldierOne moveInCargo _jeepOne;", "local": true}, "lockWP": {"syntax": "groupName lockWP lock", "server": false, "broadcasted": false, "description": "Disable switching to next waypoint (current waypoint will never complete while lockwp is used). Sometimes used during cut-scenes.", "example": "_groupOne lockWP true;", "local": true}, "countEnemy": {"syntax": "unitName countEnemy arrayName", "server": true, "broadcasted": false, "description": "Count how many units in the array are considered enemy to the given unit.", "example": "_num = player countEnemy list _triggerOne;", "local": false}, "setOvercast": {"syntax": "time setOvercast overcast", "server": false, "broadcasted": false, "description": "Set overcast to given value smoothly during given time (in seconds). Zero time means immediate change. An overcast setting of zero means clear (sunny) weather, and one means storms and rain are very likely. Higher overcast values also result in higher wind speeds.", "example": "50 setOvercast 0.5", "local": false}, "camSetPos": {"syntax": "camera camSetPos position", "server": false, "broadcasted": false, "description": "Sets the position of the given camera or seagull (see camCreate). It is worth mentioning that camera position can also be set with setPos, in which case it would be instant. With camSetPos it is possible to make smooth position transition in time, defined with camCommit, which is required in this case.", "example": "_cam camSetPos [2300,1000,130]; _cam camCommit 10;", "local": true}, "friendly": {"syntax": "Side = friendly", "server": false, "broadcasted": false, "description": "Friendly side (friendly to all units). This command is not functional and appears to have be replaced by sideFriendly.", "example": "-", "local": false}, "position": {"syntax": "position object", "server": false, "broadcasted": false, "description": "Synonym for getPos.", "example": "_pos = position player;", "local": false}, "ctrlShow": {"syntax": "ctrlShow [idc, show]", "server": false, "broadcasted": false, "description": "Set if a control of the currently active user dialog is shown or not. Read Dialog Control for more information about user dialogs and controls.", "example": "ctrlShow [100, false ];", "local": true}, "removeMagazines": {"syntax": "unitName removeMagazines magazineName", "server": false, "broadcasted": false, "description": "Removes all magazines of given type from the unit. If magazine class does not exist, nothing happens, not even .rpt message, unlike with addMagazine command.", "example": "player removeMagazines \"30Rnd_556x45_Stanag\";", "local": true}, "markerSize": {"syntax": "markerSize markerName", "server": true, "broadcasted": false, "description": "Returns marker size. This command is identical to getMarkerSize.", "example": "_mSize = markerSize \"Marker1\";", "local": false}, "cos": {"syntax": "cos x", "server": false, "broadcasted": false, "description": "Cosine of a number, argument in degrees.", "example": "cos 60;//returns 0.5", "local": false}, "action": {"syntax": "unit action actionArray", "server": false, "broadcasted": true, "description": "Make a unit to perform an action. Use the List of Actions for reference about the available actions and their syntax.", "example": "player action [\"SitDown\", player];", "local": true}, "showPad": {"syntax": "showPad show", "server": false, "broadcasted": false, "description": "Shows or hides the notebook on the map screen, if enabled for the mission. (default true). It is no longer relevant to Arma 2.", "example": "showPad false", "local": false}, "shownWatch": {"syntax": "shownWatch", "server": false, "broadcasted": false, "description": "Checks if client has Watch enabled in description.ext (showWatch param) or force enabled with showWatch command.", "example": "if (shownWatch) then {hint \"You have Watch enabled\"};", "local": false}, "requiredVersion": {"syntax": "requiredVersion version", "server": false, "broadcasted": false, "description": "Check if version of application is available. If the current version is older than the required one, a warning message is shown and false is returned.", "example": "if\u00a0!(requiredVersion \"1.09\") exitWith {};", "local": false}, "loadStatus": {"syntax": "obj loadStatus entryName", "server": false, "broadcasted": false, "description": "Loads object's properties from Objects.sav file in campaign directory (from entry name).", "example": "_ok = player loadStatus \"playerState\";", "local": false}, "setIdentity": {"syntax": "person setIdentity identity", "server": true, "broadcasted": false, "description": "Sets identity of a person. The identities could be defined in a custom config in Description.ext or in the main config. For a list of available main config values see CfgIdentities.", "example": "_soldier1 setIdentity \"MyLittleSoldier\";", "local": false}, "createDialog": {"syntax": "createDialog dialogName", "server": false, "broadcasted": false, "description": "Create a dialog which is defined either in the mission's description.ext, in the campaign's description.ext or in the global resource.cpp. The given name has to be the class name used in one of these files. If another dialog is already opened, the desired dialog is created as a child dialog of the one already opened.", "example": "_ok = createDialog \"RscDisplayGame\"; if (!_ok) then {hint \"Dialog couldn't be opened!\"};", "local": false}, "waypointPosition": {"syntax": "waypointPosition waypoint", "server": false, "broadcasted": false, "description": "Returns Position of the given waypoint.", "example": "_wPos = waypointPosition [_groupOne, 1];", "local": false}, "setFormation": {"syntax": "group setFormation formation", "server": false, "broadcasted": true, "description": "Set group formation. Formation is one of:", "example": "_groupOne setFormation \"LINE\"", "local": true}, "addWeapon": {"syntax": "unit addWeapon weapon", "server": false, "broadcasted": true, "description": "Add a weapon to a unit. For a global version of this command see addWeaponGlobal. Infantry units can only carry a specific number of weapons, once the weapon slots are filled, any further addWeapon commands are ignored.", "example": "player addMagazine \"30Rnd_556x45_Stanag\"; player addWeapon \"BAF_L85A2_RIS_SUSAT\";", "local": true}, "showRadio": {"syntax": "showRadio show", "server": false, "broadcasted": false, "description": "Shows or hides the radio on the map screen, if enabled for the mission and you possess the item. (default true)", "example": "showRadio false", "local": false}, "getMarkerSize": {"syntax": "getMarkerSize markerName", "server": true, "broadcasted": false, "description": "Returns the size of the given marker. A getter for setMarkerSize and an alias of markerSize.", "example": "\"MarkerOne\" setMarkerSize [100,200]; _size = getMarkerSize \"MarkerOne\"; //returns [100,200]", "local": false}, "playMusic": {"syntax": "playMusic name", "server": false, "broadcasted": false, "description": "Plays music defined in Description.ext#CfgMusic or config.cpp. To stop the music execute playMusic \"\" or give the start time which is beyond the music duration playMusic [\"SomeMusic\", 1000];", "example": "playMusic \"RadioAmbient1\";", "local": false}, "moveInDriver": {"syntax": "unitName moveInDriver vehicle", "server": false, "broadcasted": true, "description": "Move soldier into vehicle driver position (Immediate, no animation).", "example": "_soldierOne moveInDriver _tankOne", "local": true}, "false": {"syntax": "false", "server": false, "broadcasted": false, "description": "Always false.", "example": "_var = false; systemChat str _var; //false", "local": false}, "score": {"syntax": "score unit", "server": false, "broadcasted": false, "description": "Returns the person's score in MP.", "example": "_pScore = score player;", "local": false}, "sqrt": {"syntax": "Number = sqrt x", "server": false, "broadcasted": false, "description": "Returns square root of x.", "example": "_sq = sqrt 9; // Result is 3", "local": false}, "lbSetCurSel": {"syntax": "lbSetCurSel [idc, index]", "server": false, "broadcasted": false, "description": "Selects the item with the given index of the listbox or combobox with id idc of the topmost user dialog.", "example": "lbSetCurSel [101, 0];", "local": false}, "secondaryWeapon": {"syntax": "secondaryWeapon unit", "server": false, "broadcasted": false, "description": "Returns name of a unit's secondary weapon (empty string if none).", "example": "_sWeap = secondaryWeapon player;", "local": false}, "forceEnd": {"syntax": "forceEnd", "server": false, "broadcasted": false, "description": "Sets the flag which tells engine that the mission end was forced. Might need additional endMission execution. Can be used in an \"END\" trigger to force end conditions in the editor.", "example": "if (_TerritoryLost) then {forceEnd}", "local": false}, "say": {"syntax": "from say sound", "server": true, "broadcasted": false, "description": "Unit will say given sound. When the Unit is a Person, it will also perform corresponding lipsync effect provided an appropriate .lip file has been created for this sound. A unit that has been killed or does not exist will not say anything. Compare this with playSound which will always play a sound at the location of the player. If the camera is not within given range, title is not shown and the sound will not be heard. Sound is defined in CfgSound of the Description.ext.", "example": "(units player select 1) say [\"whisper1\",5];", "local": false}, "vehicleChat": {"syntax": "vehicleName vehicleChat chatText", "server": true, "broadcasted": false, "description": "Types text to the vehicle radio channel. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", "example": "vehicle player vehicleChat \"Show this text\";", "local": false}, "camSetBank": {"syntax": "camera camSetBank bank", "server": false, "broadcasted": false, "description": "Sets camera bank angle. Does not commit changes.", "example": "_camera camSetBank -0.1", "local": false}, "exp": {"syntax": "Number = exp x", "server": false, "broadcasted": false, "description": "Let x be a number, then exp (x) is equal to e to the power of x (or e^x)", "example": "_result = exp 1 returns 2.7182", "local": false}, "ctrlSetText": {"syntax": "ctrlSetText [idc, text]", "server": false, "broadcasted": false, "description": "Set the text of a control of the currently active user dialog or display. This command can be used for: static texts, buttons, edit lines and active texts as well as for images, where you can use it to set the image path. Read Dialog Control for more information about user dialogs and controls.", "example": "ctrlSetText [100, \"Hello world\"];//for Dialogs", "local": true}, "lbData": {"syntax": "String = lbData [idc, index]", "server": false, "broadcasted": false, "description": "Returns the additional text (invisible) in an item with the given index of the listbox or combobox with id idc of the topmost user dialog.", "example": "_data = lbData [101, 0];", "local": true}, "random": {"syntax": "random x", "server": false, "broadcasted": false, "description": "Random real (floating point) value from 0 (inclusive) to x (not inclusive).", "example": "_rNumber = random 1;", "local": false}, "getPos": {"syntax": "getPos object", "server": true, "broadcasted": false, "description": "Returns the object position in format PositionAGLS. Z value is height over the surface underneath.", "example": "hintSilent str getPos player;", "local": false}, "abs": {"syntax": "Number = abs n", "server": false, "broadcasted": false, "description": "Absolute value of a real number", "example": "_n = abs -3; Returns 3", "local": true}, "shownWarrant": {"syntax": "Boolean = shownWarrant", "server": false, "broadcasted": false, "description": "Check if player has ID card enabled. Obsolete command.", "example": "Example needed", "local": false}, "reveal": {"syntax": "toWhom reveal target", "server": true, "broadcasted": false, "description": "Reveals a target to a group. If toWhom is a unit, unit's group is considered. If toWhom is a vehicle, vehicle commander's group is considered.", "example": "_soldierOne reveal _soldierTwo; //soldierOne knowsAbout information about soldierTwo is updated", "local": false}, "sideFriendly": {"syntax": "Side = sideFriendly", "server": false, "broadcasted": false, "description": "The Friendly side (used for captives).", "example": "Example needed", "local": false}, "lock": {"syntax": "vehicleName lock locked", "server": false, "broadcasted": true, "description": "Lock vehicle (disable mounting / dismounting) for player. Similar to setVehicleLock when number is used as param. This command will remove user get in/get out actions but will not stop player getting into or out of vehicle via script commands", "example": "_jeepOne lock true;", "local": true}, "ln": {"syntax": "Number = ln x", "server": false, "broadcasted": false, "description": "Natural logarithm of x.", "example": "", "local": false}, "commander": {"syntax": "commander vehicleName", "server": true, "broadcasted": false, "description": "In OFP it returns the commander of a vehicle. Since ArmA and VBS2 it returns the primary observer. The commander of a vehicle can be found with effectiveCommander.", "example": "moveOut commander _tank;", "local": false}, "sideLogic": {"syntax": "sideLogic", "server": false, "broadcasted": false, "description": "The Logic side.", "example": "if (side _obj == sideLogic) then { hint \"It's a logic!\"; };", "local": false}, "mapAnimAdd": {"syntax": "mapAnimAdd [time, zoom, position]", "server": false, "broadcasted": false, "description": "Add next frame to map animation.", "example": "mapAnimAdd [1, 0.1, markerPos \"anim1\"]; mapAnimCommit;", "local": true}, "format": {"syntax": "format [formatString, var1, var2 ...]", "server": false, "broadcasted": false, "description": "Composes a string containing other variables or other variable types. Converts any variable type to a string. If you want to convert a string back to a number, use parseNumber. NOTE that output of this command is limited to ~8Kb. joinString on the other hand doesn't have such limit.", "example": "format [\"Player:%1, player's side:%2\", player, side player]; returns \"Player:WEST 1-1-A:1 (Username), player's side:WEST\"", "local": false}, "join": {"syntax": "unitArray join group", "server": true, "broadcasted": true, "description": "Join all units in the array to given group. Maximum number of group members is:", "example": "[_unitOne, _unitTwo] join player;", "local": false}, "stopped": {"syntax": "Boolean = stopped unitName", "server": false, "broadcasted": false, "description": "Check if unit is stopped by stop command.", "example": "? (stopped _loon1)\u00a0: hint \"Loon1 is stopped\"", "local": false}, "deleteVehicle": {"syntax": "deleteVehicle object", "server": true, "broadcasted": true, "description": "Deletes an object. Only objects inserted in the mission editor and objects created during the game's progress can be deleted by this command. Island objects and player cannot be removed.", "example": "deleteVehicle _house1;", "local": false}, "commandFire": {"syntax": "unitName commandFire target", "server": false, "broadcasted": false, "description": "Order the given unit to fire on the given target (via the radio). If the target is objNull, the unit is ordered to fire on its current target (set with doTarget or commandTarget).", "example": "_ESoldier1 commandFire _WSoldier1", "local": true}, "setFuelCargo": {"syntax": "vehicle setFuelCargo amount", "server": false, "broadcasted": true, "description": "Sets fuel amount in cargo space of refuel vehicle from empty (0) to full (1) Note, the carrying capacity of each side's refuel trucks differ.", "example": "_refuelTruckOne setFuelCargo 0;", "local": true}, "markerColor": {"syntax": "markerColor markerName", "server": false, "broadcasted": false, "description": "Returns marker color for given marker. See setMarkerColor.", "example": "if (markerColor \"Marker1\" == \"ColorRed\") then {hint \"Marker1 is red!\"}", "local": false}, "animate": {"syntax": "objectName animate [animationName, phase, speed]", "server": true, "broadcasted": true, "description": "Activates given object animation. Animation is defined in CfgModels Animations class of model.cfg or another model config. Since Arma 3 v1.65.138459 speed of animation can be altered with coefficient.", "example": "_building animate [\"maindoor\", 1];", "local": false}, "local": {"syntax": "local object", "server": true, "broadcasted": false, "description": "Check if given unit is local on the computer in Multiplayer games (see Locality in Multiplayer for general concepts).", "example": "SQS:?!local _unitName\u00a0: hint \"remote\"", "local": false}, "log": {"syntax": "Number = log x", "server": false, "broadcasted": false, "description": "Base-10 logarithm of x.", "example": "_log = log 10; // 1", "local": false}, "canMove": {"syntax": "Boolean = canMove unitName", "server": true, "broadcasted": false, "description": "Returns if the given vehicle is still able to move. This command checks only the damage value, not the amount of fuel!", "example": "SQS: ?!(canMove _tank)\u00a0: player sideChat \"He's nailed on the ground! Now hurry!\"", "local": false}, "textLog": {"syntax": "textLog anything", "server": false, "broadcasted": false, "description": "Dump argument value to debugging output.", "example": "textLog player", "local": false}, "setFaceAnimation": {"syntax": "person setFaceAnimation blink", "server": false, "broadcasted": false, "description": "Set facial animation phase (eye blinking), blink is in the range from 0 to 1.", "example": "_soldier1 setFaceAnimation 0.5;", "local": false}, "countType": {"syntax": "type countType objects", "server": true, "broadcasted": false, "description": "Count how many objects in the array are of given type. This command also works with parent classes like \"Air\", \"Tank\", and \"Car\". For a full class reference see Classes.", "example": "_count = \"Tank\" countType list _triggerOne;", "local": false}, "setFace": {"syntax": "person setFace face", "server": true, "broadcasted": false, "description": "Set person's face. For a list of available faces, check Category:CfgIdentities.", "example": "soldier1 setFace \"WhiteHead_02\"", "local": false}, "setViewDistance": {"syntax": "setViewDistance distance", "server": false, "broadcasted": false, "description": "Set rendering distance. Setting view distance to <= 0 resets the value to the client's options (set in Options\u00a0\u2192\u00a0Video\u00a0\u2192\u00a0General\u00a0\u2192\u00a0Visibility\u00a0\u2192\u00a0Overall).", "example": "setViewDistance 2250;", "local": false}, "lbSetData": {"syntax": "lbSetData [idc, index, data]", "server": false, "broadcasted": false, "description": "Sets the additional text (invisible) in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given data.", "example": "lbSetData [101, 1, \"#1\"];", "local": false}, "distance": {"syntax": "param1 distance param2", "server": true, "broadcasted": false, "description": "Returns a distance in meters between Objects, Positions or Locations.", "example": "_meters = player distance _object;", "local": false}, "sliderPosition": {"syntax": "sliderPosition idc", "server": false, "broadcasted": false, "description": "Return current thumb position of slider idc of topmost user dialog.", "example": "_slidepos1 = sliderPosition 105;", "local": false}, "lbSize": {"syntax": "lbSize idc", "server": false, "broadcasted": false, "description": "Return number of items of listbox or combobox with id idc of topmost user dialog.", "example": "_size = lbSize 101;", "local": true}, "hint": {"syntax": "hint text", "server": false, "broadcasted": false, "description": "Outputs a multi-line hint message in the left upper corner of the screen (in the right upper corner in Arma). This version of hint is supposed to play a sound when hint is shown, but this varies between games and versions. Use hintSilent for soundless hint. The effect of this command is local, i.e. the hint will only show on the computer command was executed.", "example": "hint \"Press W to move forward. \\nPress S to move backwards.\"", "local": false}, "nearestObject": {"syntax": "nearestObject [position, type]", "server": false, "broadcasted": false, "description": "Returns the nearest object of given type to given position within a sphere. Hardcoded radius is 50 meters. Unlike with nearestObjects, where distance is measured in 2D space, nearestObject will be closest object in 3D space.", "example": "_nObject = nearestObject [2345,6789]; _nObject = nearestObject [player, \"StreetLamp\"];", "local": false}, "atan2": {"syntax": "x atan2 y", "server": false, "broadcasted": false, "description": "ArcTangent of x/y. Used to determine the angle of a vector [x,y]. Result in Degrees between -180 and 180.", "example": "_xy = [5,3]; _degrees = (_xy select 0) atan2 (_xy select 1); //59.0362", "local": false}, "someAmmo": {"syntax": "Boolean = someAmmo unitName", "server": false, "broadcasted": false, "description": "Check if unit has some ammo.", "example": "? not (someAmmo _loon1)\u00a0: hint \"Loon1 is out of ammo!\"", "local": false}, "vehicle": {"syntax": "vehicle unitName", "server": true, "broadcasted": false, "description": "Vehicle in which given unit is mounted. If none, unit is returned. Alternatively, use objectParent", "example": "SQS ? vehicle player != player\u00a0: hint \"Player is in a vehicle\"", "local": false}, "atan": {"syntax": "atan x", "server": false, "broadcasted": false, "description": "ArcTangent of a number, result in Degrees.", "example": "_degrees = atan 1; //45", "local": false}, "setObjectTexture": {"syntax": "object setObjectTexture [selectionNumber,texture]", "server": true, "broadcasted": false, "description": "Textures object selection with texture named in array. Array has the form [selectionNumber, \"Texture\"].", "example": "_objectname setObjectTexture [0, \"\\pboname\\texture.paa\"]; _objectname setObjectTexture [1, \"\\pboname\\texture2.paa\"];", "local": false}, "titleObj": {"syntax": "titleObj [class, type, speed, showInMap]", "server": false, "broadcasted": false, "description": "Shows object defined in global config in CfgTitles", "example": "titleObj [\"BISLogo\", \"PLAIN\"]", "local": false}, "time": {"syntax": "time", "server": false, "broadcasted": false, "description": "Returns time elapsed since mission started (in seconds). The value is different on each client. If you need unified time, use serverTime.", "example": "_future = time + 30; waitUntil {time >= _future}; /* continue after 30 seconds... */", "local": false}, "flyInHeight": {"syntax": "aircraft flyInHeight altitude", "server": false, "broadcasted": true, "description": "Sets the flying altitude for aircraft relatively to the ground surface. Avoid too low altitudes, as helicopters and planes won't evade trees and obstacles on the ground. The default flying altitude is 100 meters.", "example": "_helicopter flyInHeight 40;", "local": true}, "clearWeaponCargo": {"syntax": "clearWeaponCargo vehicleName", "server": true, "broadcasted": false, "description": "Remove all weapons from the given vehicle's weapon cargo space.", "example": "clearWeaponCargo _truck", "local": false}, "hintCadet": {"syntax": "hintCadet text", "server": false, "broadcasted": false, "description": "Shows a text hint only when in cadetMode. The text can contain several lines. \\n is used to indicate the end of a line.", "example": "hintCadet \"Press W to move forward\";", "local": false}, "clearMagazineCargo": {"syntax": "clearMagazineCargo vehicleName", "server": true, "broadcasted": false, "description": "Remove all magazines from the given vehicle's magazine cargo space.", "example": "clearMagazineCargo _truck;", "local": false}, "setMimic": {"syntax": "person setMimic mimic", "server": true, "broadcasted": false, "description": "Set person's facial expression. Following mimic values are recognized:", "example": "_soldier1 setmimic \"angry\"", "local": false}, "setCaptive": {"syntax": "unitName setCaptive status", "server": false, "broadcasted": true, "description": "Mark a unit as captive. If unit is a vehicle, commander is marked. A captive is neutral to everyone (belong to civilian side), and will not trigger \"detected by\" conditions for its original side.", "example": "_soldier1 setCaptive true;", "local": true}, "commandFollow": {"syntax": "unitName commandFollow followedunit", "server": false, "broadcasted": false, "description": "Order the given unit to follow the given other unit (via the radio).", "example": "_soldier1 commandFollow _soldier2", "local": true}, "move": {"syntax": "group move position", "server": false, "broadcasted": true, "description": "Let group move to given position (format Position or Position2D) without waypoint. Active waypoints will be ignored when command is used.", "example": "_groupOne move position player;", "local": true}, "showMap": {"syntax": "showMap show", "server": false, "broadcasted": false, "description": "Enable Map (default true)", "example": "showMap false", "local": false}, "true": {"syntax": "true", "server": false, "broadcasted": false, "description": "Always true", "example": "_var = true; systemChat str _var; //true", "local": false}, "mapAnimCommit": {"syntax": "mapAnimCommit", "server": false, "broadcasted": false, "description": "Play map animation.", "example": "Example needed", "local": true}, "canFire": {"syntax": "canFire unitName", "server": true, "broadcasted": false, "description": "Returns true if the given vehicle is still able to fire. For the command to return true, vehicle must be alive, have weapon operator and the weapon cannot be damaged >= 0.9 but can be empty due to running out of ammo. If mission starts with vehicle having no ammo or setVehicleAmmo 0 command is executed on the vehicle, then canFire will always report false for it.", "example": "SQS: ?!(canFire _tank)\u00a0: player sideChat \"Tank disabled!\"", "local": false}, "inflamed": {"syntax": "inflamed fireplace", "server": true, "broadcasted": false, "description": "Checks if fireplace is inflamed (burning) or not. To check if a unit is receiving damage from fire, use isBurning command.", "example": "_inflamed = inflamed _fireplaceOne;", "local": false}, "onBriefingPlan": {"syntax": "onBriefingPlan soundName", "server": false, "broadcasted": false, "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Plan tab is selected in the briefing.", "example": "onBriefingPlan \"PlanVoiceOver\"", "local": false}, "cameraEffect": {"syntax": "camera cameraEffect [effectName, effectPosition, r2tName]", "server": false, "broadcasted": false, "description": "Sets the given effect on the given camera. If you want to switch the screen directly to the first-person, aiming, third-person or group view of an object, use switchCamera instead. The effect type \"Terminate\" is used to exit the current camera view and switch back to the player's view. Does not need camCommit.", "example": "_cam cameraEffect [\"internal\", \"BACK\"];", "local": true}, "camSetFovRange": {"syntax": "camera camSetFovRange fovRange", "server": false, "broadcasted": false, "description": "Set the zoom level (Field Of View) start and end values for automatical zooming.", "example": "_cam camSetFovRange [0.1, 0.7];", "local": true}, "plus": {"server": false, "broadcasted": false, "local": false}, "daytime": {"syntax": "Number = daytime", "server": false, "broadcasted": false, "description": "Returns the current ingame time in hours.", "example": "; assumme it is 16:30 _daytime = daytime", "local": false}, "in": {"syntax": "value in array", "server": false, "broadcasted": false, "description": "Checks whether value is in array, unit in vehicle or position inside location. In case of value in array check, String values will be compared on CaSEseNsiTIve basis (see Example 2). Note: In Arma 2 you can not test for arrays within arrays using this command.", "example": "1 in [0,1,2]; //true", "local": false}, "showWatch": {"syntax": "showWatch show", "server": false, "broadcasted": false, "description": "Shows or hides the watch on the map screen, if enabled for the mission and you possess the item. (default true)", "example": "showWatch false;", "local": false}, "setMarkerSize": {"syntax": "markerName setMarkerSize [a-axis, b-axis]", "server": false, "broadcasted": true, "description": "Set marker size. Size is in format [a-axis, b-axis].", "example": "\"MarkerOne\" setMarkerSize [100, 200];", "local": false}, "formLeader": {"syntax": "Object = formLeader unitName", "server": true, "broadcasted": false, "description": "Returns the formation leader of a given unit. This is often the same as the group leader, but not always, for example in cases when a unit is ordered to follow another unit.", "example": "? (formLeader player\u00a0!= leader player)\u00a0: hint \"The formation leader is different to the group leader!\"", "local": false}, "speedMode": {"syntax": "String = speedMode groupName", "server": false, "broadcasted": false, "description": "Returns speed mode of the group, which can be any of the following:", "example": "_grpspeed1 = speedMode grp1", "local": false}, "doFire": {"syntax": "unitName doFire target", "server": false, "broadcasted": true, "description": "Order the given unit(s) to fire on the given target (without radio messages). The target is set with doTarget or commandTarget. The target can be a unit or a vehicle, but not an object.", "example": "_ESoldier1 doFire _WSoldier1;", "local": true}, "and": {"syntax": "Boolean = a and b", "server": false, "broadcasted": false, "description": "Returns true only if both conditions are true. In case of the alternative syntax, lazy evaluation is used (if left operand is false, evaluation of the right side is skipped completely).", "example": "if ((alive player) and (_enemycount == 0)) then {hint \"you win\u00a0!\"}", "local": false}, "localize": {"syntax": "localize stringName", "server": false, "broadcasted": false, "description": "Used to internationalise text messages. A string is returned from Stringtable.csv (or Stringtable.xml) which corresponds to the stringName.", "example": "hint localize \"STR_WEST\"; // -> \"BLUFOR\" (in Arma2)", "local": false}, "shownMap": {"syntax": "shownMap", "server": false, "broadcasted": false, "description": "Checks if client has Map enabled in description.ext (showMap param) or force enabled with showMap command.", "example": "if (shownMap) then {hint \"You have Map enabled\"};", "local": false}, "name": {"syntax": "name object", "server": false, "broadcasted": false, "description": "When argument is Object, the command returns the name given to a unit using the setIdentity instruction or selected randomly by the game engine if setIdentity has not been used on the unit. If used on vehicle, name of first crew member (in order commander, driver, gunner). If used on an object, \"Error: No unit\" is being returned.", "example": "_name = name player;", "local": false}, "preprocessFile": {"syntax": "String = preprocessFile fileName", "server": false, "broadcasted": false, "description": "Reads and processes the content of the specified file. Preprocessor is C-like, supports comments using // or /* and */ and PreProcessor Commands.", "example": "_content = preprocessFile \"myFunction.sqf\";", "local": false}, "leader": {"syntax": "Object = leader unitName", "server": true, "broadcasted": false, "description": "Returns the group leader for the given unit or group. For dead units, objNull is returned.", "example": "leader group player == leader player", "local": false}, "clearWeaponPool": {"syntax": "clearWeaponPool", "server": false, "broadcasted": false, "description": "Remove all weapons from the weapon pool, of which the player may choose in the following missions. Available in campaigns only.", "example": "clearWeaponPool;", "local": false}, "camSetRelPos": {"syntax": "camera camSetRelPos position", "server": false, "broadcasted": false, "description": "Sets the position of the given camera relative to its target, set with camSetTarget. Needs a call to camCommit to be conducted.", "example": "_cam camSetTarget _car; _cam camSetRelPos [0,10,8];", "local": true}, "driver": {"syntax": "Object = driver vehicle", "server": true, "broadcasted": false, "description": "Returns the driver of a vehicle.", "example": "(driver _tank) action [\"getout\", _tank];", "local": false}, "musicVolume": {"syntax": "Number = musicVolume", "server": false, "broadcasted": false, "description": "Checks the current music volume (set by fadeMusic)", "example": "_volume = musicVolume", "local": false}, "onBriefingNotes": {"syntax": "onBriefingNotes soundName", "server": false, "broadcasted": false, "description": "Select a sound declared in the Description.ext of the mission to be played the first time the Notes tab is selected in the briefing.", "example": "onBriefingNotes \"NotesVoiceOver\";", "local": false}, "camSetDir": {"syntax": "camera camSetDir direction", "server": false, "broadcasted": false, "description": "Sets the orientation of the given camera in the direction of the given vector. Needs camCommit.", "example": "pos1 = player modelToWorld [0,5,5]; cam = \"camera\" camCreate pos1; cam cameraEffect [\"INTERNAL\", \"BACK\"]; pos2 = player modelToWorld [0,50,50]; cam camSetPos pos2; cam camSetDir (pos2 vectorFromTo pos1); cam camCommit 5; 0 = [] spawn { waitUntil {camCommitted cam}; cam camSetPos pos1; cam camCommit 5; };", "local": true}, "doTarget": {"syntax": "unit doTarget target", "server": false, "broadcasted": true, "description": "Order the given unit(s) to target the given target (without radio messages).", "example": "_ESoldier1 doTarget _WSoldier1;", "local": true}, "inflame": {"syntax": "fireplace inflame burn", "server": true, "broadcasted": true, "description": "Control fireplace burning. Set inflame to true (on) or false (off).", "example": "_fireplaceOne inflame true;", "local": false}, "fleeing": {"syntax": "Boolean = fleeing unitName", "server": true, "broadcasted": false, "description": "Checks if a unit is fleeing.", "example": "? (fleeing _east_unit)\u00a0: player sideChat \"We have won!\"", "local": false}, "setFuel": {"syntax": "vehicle setFuel amount", "server": false, "broadcasted": true, "description": "Sets fuel percentage from 0 (empty) to 1 (full). The vehicle must be local to the computer where command is executed.", "example": "_jeepOne setFuel 0.5;", "local": true}, "commandStop": {"syntax": "commandStop unitName", "server": true, "broadcasted": true, "description": "Order the given unit(s) to stop (via the radio).", "example": "commandStop _soldier1;", "local": false}, "groupChat": {"syntax": "unitName groupChat chatText", "server": true, "broadcasted": false, "description": "Types text to the group radio channel. Must have assigned \"ItemRadio\" to see or transmit the messages. The text will be visible only on the PC where command was executed. If you need the message to show on all computers, you have to execute it globally (see remoteExec)", "example": "_soldierOne groupChat \"Show this text\";", "local": false}, "sideRadio": {"syntax": "unit sideRadio radioName", "server": true, "broadcasted": false, "description": "Sends the audio message to the side radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).", "example": "_soldierOne sideRadio \"messageOne\";", "local": false}, "rad": {"syntax": "rad value", "server": false, "broadcasted": false, "description": "Converts given value in degrees to radians. 1 radian equals 180 degrees divided by pi.", "example": "_radians = rad 180; // Returns 3.1415... => pi", "local": false}, "sliderRange": {"syntax": "sliderRange idc", "server": false, "broadcasted": false, "description": "Return limits, as an Array [min, max] of slider idc of topmost user dialog.", "example": "_slidelimits1 = sliderRange 105;", "local": false}, "unitReady": {"syntax": "Boolean = unitReady unitName", "server": false, "broadcasted": false, "description": "Check if the unit is ready. Unit is busy when it is given some command like move, until the command is finished.", "example": "_it = unitReady _soldierOne;", "local": false}, "comment": {"syntax": "comment commentMsg", "server": false, "broadcasted": false, "description": "Define a comment. Mainly used in SQF Syntax, as you're able to introduce comment lines with semicolons in a SQS script.", "example": "script.sqs comment \"This is a commented line\"", "local": false}, "addWeaponCargo": {"syntax": "vehicleName addWeaponCargo [weaponName, count]", "server": true, "broadcasted": false, "description": "Add weapons to the cargo space of vehicles, which can be taken out by infantry units. Ignores available cargo space.", "example": "_truck addWeaponCargo [\"M16\",5]", "local": true}, "showWarrant": {"syntax": "showWarrant show", "server": false, "broadcasted": false, "description": "Enable ID card.", "example": "-", "local": false}, "titleRsc": {"syntax": "titleRsc [text, type, speed, showInMap]", "server": false, "broadcasted": false, "description": "Display a resource defined in RscTitles. Also see cutRsc, with these two commands you can show two different resources at once.", "example": "titleRsc [\"BIS\", \"PLAIN\"]", "local": false}, "velocity": {"syntax": "velocity vehicleName", "server": false, "broadcasted": false, "description": "Return velocity (speed vector) of Unit as an array with format [x, y, z].", "example": "_vector = velocity jeep;", "local": false}, "objStatus": {"syntax": "objectivenumber objStatus status", "server": false, "broadcasted": false, "description": "Sets the status of an objective that was defined in briefing.html. Status may be one of:", "example": "\"1\" objStatus \"DONE\"", "local": false}, "canStand": {"syntax": "Boolean = canStand unitName", "server": true, "broadcasted": false, "description": "Returns if the given soldier is able to stand up.", "example": "SQS: ?!(canStand player)\u00a0: player groupChat \"My legs! They hit my legs!\"", "local": false}, "mod": {"syntax": "Number = a mod b", "server": false, "broadcasted": false, "description": "Remainder of a divided by b.", "example": "", "local": false}, "titleText": {"syntax": "titleText [text, type, speed, showInMap, isStructuredText]", "server": false, "broadcasted": false, "description": "Displays text across the screen. If used along with cutText two different texts (in different type styles) can be shown at once. The text can be displayed on multiple lines by using \"\\n\" new line characters: titleText [\"line1\\nline2\\nline3\", \"PLAIN\"];. Since Arma 3 v1.73.142260 this command supports Structured Text formatting.", "example": "titleText [\"Show this text\", \"PLAIN\"];", "local": false}, "primaryWeapon": {"syntax": "primaryWeapon unit", "server": true, "broadcasted": false, "description": "Returns name of unit's primary weapon (empty string if none).", "example": "_pWeap = primaryWeapon player;", "local": false}, "goto": {"syntax": "goto label", "server": false, "broadcasted": false, "description": "In SQS scripts only: Go to given label. String argument is used here. Be sure to use double quotes around label name in goto. Define the label with #. Note that Labels are not case sensitive and that labels are searched for from the top of the script, so multiple occurrences of a label will only result in the top most one ever being found.", "example": "Example needed", "local": false}, "camCreate": {"syntax": "type camCreate position", "server": false, "broadcasted": false, "description": "Create a camera or a seagull object on the given position. Also other objects can be created this way, but vehicles created with camCreate cannot be entered. Any units created with camCreate will remain static. Differently to createVehicle, objects are created without consideration of the collision detection with surrounding objects, thus the objects are spawned exactly at the given position. camCreate is conducted immediately, the command doesn't wait for camCommit", "example": "_cam = \"camera\" camCreate (position player)", "local": false}, "setDammage": {"syntax": "object setDammage damage", "server": true, "broadcasted": true, "description": "Damage / repair object. Damage 0 means fully functional, damage 1 means completely destroyed / dead.", "example": "_soldier1 setDammage 1;", "local": false}, "saveVar": {"syntax": "saveVar varname", "server": false, "broadcasted": false, "description": "Save variable value into the campaign space. This variable is available to all following missions in the campaign.", "example": "saveVar \"varOne\"", "local": false}, "addAction": {"syntax": "object addAction [title, script, arguments, priority, showWindow, hideOnUse, shortcut, condition, radius, unconscious, selection, memoryPoint]", "server": true, "broadcasted": false, "description": "This command syntax is for Arma 3 only. For TKOH and older versions see addAction TKOH", "example": "// short and sweet player addAction [\"a useless action that does nothing\", {}]; player addAction [\"<t color='#FF0000'>This Useless Action Is RED</t>\", {hint \"RED\"}]; player addAction [\"Hint Hello!\", { hint format [\"Hello\u00a0%1!\", name player] }]; player addAction [\"String Exec\", \"hint 'this is also compiled'\"];", "local": false}, "showCompass": {"syntax": "showCompass show", "server": false, "broadcasted": false, "description": "Shows or hides the compass on the map screen, if enabled for the mission and you possess the item. (default true)", "example": "showCompass false;", "local": false}, "flag": {"syntax": "flag unit", "server": true, "broadcasted": false, "description": "Returns the original flag pole of the flag the unit is carrying.", "example": "_flag = flag _soldier;", "local": false}, "markerType": {"syntax": "String = markerType markerName", "server": true, "broadcasted": false, "description": "Get type of marker. Note: This function is identical to getMarkerType. See cfgMarkers for a list of standard markers.", "example": "if (markerType \"Marker1\" == \"Empty\") then {hint \"Marker1 is not an icon!\"}", "local": false}, "isEngineOn": {"syntax": "isEngineOn vehicle", "server": true, "broadcasted": false, "description": "Returns true if engine is on, false if it is off.", "example": "_carEngineIsOn = isEngineOn _carOne;", "local": false}, "markerPos": {"syntax": "markerPos markerName", "server": true, "broadcasted": false, "description": "Get marker Position. Note: This function is identical to getMarkerPos.", "example": "_mPos = markerPos \"markerOne\";", "local": false}, "tan": {"syntax": "tan x", "server": false, "broadcasted": false, "description": "Tangent of x, argument in Degrees.", "example": "_tangent = tan 45 Result is 1", "local": false}, "switchCamera": {"syntax": "target switchCamera mode", "server": false, "broadcasted": false, "description": "Switch camera to given vehicle / camera. Mode is one of:", "example": "player switchCamera \"Gunner\";", "local": false}, "setMarkerType": {"syntax": "markerName setMarkerType type", "server": false, "broadcasted": true, "description": "Set marker type. See cfgMarkers for a list of standard markers.", "example": "\"MarkerOne\" setMarkerType \"Warning\";", "local": false}, "object": {"syntax": "Object = object id", "server": false, "broadcasted": false, "description": "Return Object with given id. Object ID's can be checked in mission editor.", "example": "_obj = object 1", "local": false}, "setRadioMsg": {"syntax": "index setRadioMsg text", "server": false, "broadcasted": false, "description": "Sets radio trigger menu title text (0 -> 0 -> map radio). Use \"NULL\" to disable radio slot. Use \"\" to restore default title", "example": "1 setRadioMsg \"Click meeeeeeeeee\"; //changes title of radio Alpha", "local": false}, "setDamage": {"syntax": "object setDamage damage", "server": true, "broadcasted": true, "description": "Damage / repair object. Damage 0 means fully functional, damage 1 means completely destroyed / dead. (This function is an alias of setDammage and was introduced to fix the obvious spelling error in the original function name)", "example": "_soldier1 setDamage 1;", "local": false}, "soundVolume": {"syntax": "Number = soundVolume", "server": false, "broadcasted": false, "description": "Check current sound volume (set by fadeSound).", "example": "_vol = soundVolume", "local": false}, "fuel": {"syntax": "fuel vehicle", "server": true, "broadcasted": false, "description": "Checks how much fuel is left in the gas tank of a vehicle.", "example": "if (fuel vehicle player == 0) then {hint \"The vehicle is out of fuel!\"};", "local": false}, "camDestroy": {"syntax": "camDestroy object", "server": false, "broadcasted": false, "description": "Destroys camera object created with camCreate. This command doesn't need camCommit.", "example": "camDestroy _cam;", "local": true}, "hasWeapon": {"syntax": "Boolean = unitName hasWeapon weaponName", "server": true, "broadcasted": false, "description": "Checks if a unit has the given weapon.", "example": "?!(player hasWeapon \"M16\")\u00a0: player addWeapon \"M16\"", "local": false}, "typeOf": {"syntax": "typeOf object", "server": false, "broadcasted": false, "description": "Returns the config class name of given object or \"\" if object doesn't have config class.", "example": "if (typeOf vehicle player == \"B_Heli_Light_01_armed_F\") then {hint \"Player is in AH-9 Pawnee\"};", "local": false}, "missionStart": {"syntax": "missionStart", "server": false, "broadcasted": false, "description": "Returns date and time when mission started in format [year, month, day, hour, minute, second] in MP, which differs from date format only by seconds. In SP returns [0,0,0,0,0,0].", "example": "setDate (missionStart select [0,5]);", "local": false}, "moveInGunner": {"syntax": "unitName moveInGunner vehicle", "server": false, "broadcasted": true, "description": "Move soldier into vehicle gunner position (Immediate, no animation).", "example": "soldierOne moveInGunner tankOne", "local": true}, "estimatedTimeLeft": {"syntax": "estimatedTimeLeft seconds", "server": false, "broadcasted": true, "description": "Sets the estimated time left in the game that is shown in the \"Game in progress\" screen or in the master browser. This command will also force the server to broadcast serverTime to all clients ASAP, without waiting for the next broadcast window, which is about every 5 minutes.", "example": "estimatedTimeLeft 600; //10 min", "local": false}, "setSpeedMode": {"syntax": "groupName setSpeedMode mode", "server": false, "broadcasted": true, "description": "Set group speed mode. Mode may be one of:", "example": "_groupOne setSpeedMode \"LIMITED\"", "local": true}, "camCommit": {"syntax": "camera camCommit time", "server": false, "broadcasted": false, "description": "Smoothly conduct the changes that were assigned to a camera within the given time. If the time is set to zero, the changes are done immediately.", "example": "SQS; create a camera object _cam = \"camera\" camCreate [5600,4800,10] _cam camSetTarget player _cam cameraEffect [\"internal\", \"BACK\"] _cam camCommit 0 ; smoothly move the camera to its new position in 6 seconds _cam camSetPos [5680,4720,20] _cam camCommit 6 @camCommitted _cam ; proceed", "local": true}, "rating": {"syntax": "Number = rating unitName", "server": true, "broadcasted": false, "description": "Check unit rating. Rating is increased for killing enemies, decreased for killing friendlies (see Rating Values). Can be changed via addRating by the mission designer. The rating of the player is displayed as the \"score\" at the end of the mission. Via Description.ext one can define how many points it takes to get a perfect score, as well as the number of stars.", "example": "_score = rating player", "local": false}, "animationPhase": {"syntax": "object animationPhase animationName", "server": true, "broadcasted": false, "description": "Returns the phase of the given animation on the given object. Animation can be scripted (animate, animateSource, animateDoor) or engine driven. Animation names for an object could be found out with animationNames command. When animation is rotation, like with \"MainTurret\" for example, the output is in radians, to convert to degrees use deg command.", "example": "_building animate [\"maindoor\",1]; sleep 1; _p = _building animationPhase \"maindoor\"; returns 1 (if the animation speed is <= 2 seconds)", "local": false}, "flagOwner": {"syntax": "flagOwner flag", "server": true, "broadcasted": true, "description": "Returns the global owner of a flag. A getter for setFlagOwner. Note that owner of a flag is Object rather than Number, as how it is usually with other owner commands", "example": "_person = flagOwner _flagOne;", "local": false}, "acos": {"syntax": "Number = acos x", "server": false, "broadcasted": false, "description": "ArcCosine of a number, result in Degrees", "example": "_degrees = acos 0.5 returns 60", "local": false}, "setFlagTexture": {"syntax": "flag setFlagTexture texture", "server": false, "broadcasted": true, "description": "Sets flag texture. If texture is \"\", flag is not drawn.", "example": "_flagE setFlagTexture \"\\ca\\misc\\data\\sever_vlajka.paa\";", "local": true}, "createUnit": {"syntax": "group createUnit [type, position, markers, placement, special]", "server": false, "broadcasted": true, "description": "Creates a unit of class that's defined in CfgVehicles.", "example": "_unit = group player createUnit [\"B_RangeMaster_F\", position player, [], 0, \"FORM\"];", "local": false}, "groupRadio": {"syntax": "unit groupRadio radioName", "server": true, "broadcasted": false, "description": "Sends the audio message to the group radio channel. Must have assigned \"ItemRadio\" to send or receive the transmission. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).", "example": "_soldierOne groupRadio \"messageOne\";", "local": false}, "magazines": {"syntax": "magazines vehicle", "server": false, "broadcasted": false, "description": "Returns array of type names of all vehicle's magazines. When applied to a unit (soldier), the command behaves differently and will omit magazines already loaded into unit's weapons. Use currentMagazine to get this information for a currently loaded magazine.", "example": "_mags = magazines player", "local": false}, "sliderSetRange": {"syntax": "sliderSetRange [idc, min, max]", "server": false, "broadcasted": false, "description": "Set limits of slider idc of topmost user dialog.", "example": "sliderSetRange [101, 0, 100];", "local": false}, "lightIsOn": {"syntax": "lightIsOn lamppost", "server": false, "broadcasted": false, "description": "Check if lampost is on (shining). For working with CfgNonAIVehicles class \"StreetLamp\" only. Possible values are:", "example": "?lightIsOn nearestObject [player, \"StreetLamp\"] == \"ON\"\u00a0:hint \"nightime\"", "local": false}, "setFog": {"syntax": "time setFog fog", "server": false, "broadcasted": true, "description": "Changes the fog smoothly over the the given TransitionTime (in seconds). A time of zero means there will be an immediate change. A fog intensity of zero is minimum fog and a fog level of one is maximum fog.", "example": "15 setFog 0.5;", "local": false}, "lbSetPicture": {"syntax": "lbSetPicture [idc, index, name]", "server": false, "broadcasted": false, "description": "Sets the picture in the item (left) with the given index of the listbox or combobox with id idc of the topmost user dialog. Name is the picture name. The picture is searched for in the mission directory, the dtaExt subdirectory of the campaign directory and the dtaExt directory and the data bank (or directory).", "example": "lbSetPicture [101, 0, \"iskoda\"];", "local": true}, "behaviour": {"syntax": "behaviour unitName", "server": true, "broadcasted": false, "description": "Return the behaviour of a unit. For Arma 3 behaviour explanation see Arma_3_AI_Behavior", "example": "_soldier setBehaviour \"CARELESS\"; _b = behaviour _soldier; //returns \"CARELESS\"", "local": false}, "units": {"syntax": "units groupOrUnit", "server": false, "broadcasted": false, "description": "Returns an array with all the units in the group or group of the unit.", "example": "_myUnitCount = count units group player;", "local": false}, "assignAsCommander": {"syntax": "unitName assignAsCommander vehicleName", "server": true, "broadcasted": true, "description": "Assign a unit as commander of a vehicle. Used together with orderGetIn to order subordinate units to get in as commander of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the commander place of the vehicle.", "example": "_soldier1 assignAsCommander _tank [_soldier1] orderGetIn true", "local": false}, "debugLog": {"syntax": "debugLog anything", "server": false, "broadcasted": false, "description": "Dump argument type and value to debugging output.", "example": "debugLog player", "local": false}, "drop": {"syntax": "drop array", "server": true, "broadcasted": false, "description": "Creates a particle effect. This command is used to create smoke, fire and similar effects. The particles are single polygons with single textures that always face the player. They can be set to dynamically change their position, size, direction, can be set to different weights and more or less dependant on the wind.", "example": "drop [\"cl_basic\", \"\", \"Billboard\", 1, 1, [-3.5*(sin(direction xural)), -3.5*(cos(direction xural)),0], [ random 0.1,random 0.1,random 0.5], 1, 0.005, 0.0042, 0.7, [0.3,3], [[0.5,0.5,0.5,0],[0.7,0.7,0.7,0.5],[0.9,0.9,0.9,0]], [0,1,0,1,0,1], 0.2, 0.2, \"\", \"\", xural]", "local": false}, "allowDammage": {"syntax": "object allowDammage allow", "server": false, "broadcasted": false, "description": "Allow or prevent an object being damaged (or injured, or killed). Alias of allowDamage.", "example": "player allowDammage false;", "local": false}, "handsHit": {"syntax": "Number = handsHit unitName", "server": true, "broadcasted": false, "description": "Checks if a soldier's hands are hit, which results in inaccurate aiming.", "example": "? (handsHit player == 1)\u00a0: player globalChat \"Ouch! Don't shoot at my hands dammit!\"", "local": false}, "list": {"syntax": "Array = list trigger", "server": true, "broadcasted": false, "description": "List of units that would activate given Trigger. It returns nothing before the simulation started, i.e. in (undelayed) init.sqf files. Returns a pointer to the trigger's list after the simulation started.", "example": "_tlist = list _triggerOne;", "local": false}, "allowGetIn": {"syntax": "unitArray allowGetIn allow", "server": true, "broadcasted": true, "description": "Set if the units given in the list are allowed to enter vehicles.", "example": "[_soldier1, _soldier2] allowGetIn true;", "local": false}, "clearMagazinePool": {"syntax": "clearMagazinePool", "server": false, "broadcasted": false, "description": "Remove all magazines from the magazine pool, of which the player may choose in the following missions. Available in campaigns only.", "example": "clearMagazinePool;", "local": false}, "enableRadio": {"syntax": "enableRadio state", "server": false, "broadcasted": false, "description": "Enable and disable radio messages to be heard and shown in the left lower corner of the screen. This command can be helpful during cutscenes.", "example": "enableRadio false", "local": false}, "commandTarget": {"syntax": "unitName commandTarget target", "server": false, "broadcasted": true, "description": "Order the given unit(s) to target the given target (via the radio). Command given to the player, puts a red square with words Target and Distance on player's HUD at target location. If player in vehicle and has radar facilities, it also adds target marker to the radar.", "example": "_ESoldier1 commandTarget _WSoldier1;", "local": true}, "asin": {"syntax": "Number = asin x", "server": false, "broadcasted": false, "description": "Arcsine of a number, result in Degrees.", "example": "_degrees=asin 0.5", "local": false}, "combatMode": {"syntax": "String = combatMode grp", "server": true, "broadcasted": false, "description": "Returns the combat mode of the given unit. See setCombatMode for more information about combat modes.", "example": "if ((combatMode _grp1) == \"BLUE\") then {_grp1 setCombatMode \"GREEN\"};", "local": false}, "assignAsGunner": {"syntax": "unitName assignAsGunner vehicleName", "server": true, "broadcasted": true, "description": "Assign a unit as gunner of a vehicle. Used together with orderGetIn to order subordinate units to get in as gunner of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the gunner place of the vehicle.", "example": "_soldier1 assignAsGunner _tank [_soldier1] orderGetIn true", "local": false}, "setMarkerPos": {"syntax": "markerName setMarkerPos pos", "server": false, "broadcasted": true, "description": "Moves the marker. If position is given in 3D format, z coordinate is stored with the marker and will be used when marker is passed to commands like createVehicle, createUnit, createAgent, createMine, setVehiclePosition for example. However getMarkerPos and markerPos will always return 0 for z.", "example": "\"MarkerOne\" setMarkerPos getMarkerPos \"MarkerTwo\"", "local": false}, "assignAsDriver": {"syntax": "unitName assignAsDriver vehicleName", "server": true, "broadcasted": true, "description": "Assign a unit as driver of a vehicle. Used together with orderGetIn to order subordinate units to get in as driver of a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the driver place of the vehicle.", "example": "_soldier1 assignAsDriver _tank [_soldier1] orderGetIn true", "local": false}, "showGPS": {"syntax": "showGPS show", "server": false, "broadcasted": false, "description": "Shows or hides the GPS receiver on the map screen, if enabled for the mission and you possess the item. (default false)", "example": "showGPS true;", "local": false}, "missionName": {"syntax": "missionName", "server": false, "broadcasted": false, "description": "Return currently loaded mission file (path to mission.pbo, relative to game exe).", "example": "Example needed", "local": false}, "shownPad": {"syntax": "shownPad", "server": false, "broadcasted": false, "description": "Checks if client has Notepad enabled.", "example": "if (shownPad) then {hint \"You have Notepad enabled.\"};", "local": false}, "assignAsCargo": {"syntax": "unitName assignAsCargo vehicleName", "server": true, "broadcasted": true, "description": "Assign a unit as cargo of a vehicle. Used together with orderGetIn to order a unit to get in as cargo into a specific vehicle. Before usage of this command a subordinate unit hasn't got the option to get into the cargo space of the vehicle.", "example": "_soldier1 assignAsCargo _truck; [_soldier1] orderGetIn true;", "local": false}, "removeWeapon": {"syntax": "unit removeWeapon weapon", "server": false, "broadcasted": true, "description": "Remove weapon from a unit. The unit must be local to the computer where command is executed. For a global version of this command see removeWeaponGlobal. Note: It is possible to create invalid combinations with this command (ie, attempting to remove a weapon that a unit does not possess). When doing so, application behaviour is undefined.", "example": "player removeWeapon \"BAF_L85A2_RIS_SUSAT\";", "local": true}, "sin": {"syntax": "Number = sin x", "server": false, "broadcasted": false, "description": "Sine of x, argument in Degrees.", "example": "_sine = sin 30;//result is 0.5", "local": false}, "cadetMode": {"syntax": "cadetMode", "server": false, "broadcasted": false, "description": "Returns if the player is currently playing in cadet or veteran mode.", "example": "? (cadetMode)\u00a0: _AIsoldier setSkill 0.1 //sqs", "local": false}, "doStop": {"syntax": "doStop unit(s)", "server": true, "broadcasted": true, "description": "Order the given unit(s) to stop (without radio messages). The units stopped in this way will leave the groups formation. It will prevent them from moving around with their group (or formation leader), while still being able to turn around and even move to a new position if they see fit.", "example": "doStop _soldier1;", "local": false}, "buttonSetAction": {"syntax": "buttonSetAction [idc, action]", "server": false, "broadcasted": false, "description": "Set the action of a control of the currently active user dialog. Can be used for buttons and active texts. See Dialog Control for more information about user dialogs. Works with:", "example": "buttonSetAction [100, \"player exec \"\"reply.sqs\"\"\"];", "local": true}, "saveGame": {"syntax": "saveGame", "server": false, "broadcasted": false, "description": "Autosaves the game (used for Retry). The game can then be loaded from the last autosave with loadGame. Will not save if the player is null or dead.", "example": "saveGame;", "local": false}, "mapAnimDone": {"syntax": "Boolean = mapAnimDone", "server": false, "broadcasted": false, "description": "Check if map animation is finished.", "example": "Example needed", "local": true}, "lbPicture": {"syntax": "lbPicture [idc, index]", "server": false, "broadcasted": false, "description": "Returns the picture name of the item with the given index of the listbox or combobox with id idc of the topmost user dialog.", "example": "_picture = lbPicture [101, 0];", "local": false}, "fadeMusic": {"syntax": "time fadeMusic volume", "server": false, "broadcasted": false, "description": "Changes the music volume smoothly within the given time.", "example": "5 fadeMusic 0", "local": false}, "vehicleRadio": {"syntax": "unit vehicleRadio radioName", "server": true, "broadcasted": false, "description": "Sends the audio message to the vehicle radio channel. The message is defined in CfgRadio in the description.ext file or config radio protocol. The transmission will play only on the PC where command was executed. If you need the transmission to play on all computers, you have to execute it globally (see remoteExec).", "example": "_soldierOne vehicleRadio \"messageOne\";", "local": false}, "setWPPos": {"syntax": "waypoint setWPPos pos", "server": false, "broadcasted": false, "description": "Sets waypoint position", "example": "[_groupOne, 1] setWPPos markerPos \"MarkerOne\";", "local": false}, "group": {"syntax": "group object", "server": true, "broadcasted": false, "description": "Returns the group a unit is assigned to.", "example": "_playerGrp = group player", "local": false}, "removeAction": {"syntax": "unit removeAction index", "server": true, "broadcasted": false, "description": "Removes user added action with given id index. This only removes actions added with the addAction command. You cannot remove default game actions, such as reload. This command has local effect. The action will only be removed on the computer that executes the command.", "example": "player removeAction 0;", "local": false}, "buttonAction": {"syntax": "buttonAction idc", "server": false, "broadcasted": false, "description": "Return the action assigned to a control of the currently active user dialog. Can be used for buttons and active texts. Read Dialog Control for more information about user dialogs and controls.", "example": "buttonSetAction [100, {player exec \"reply.sqs\"}] _action = buttonAction 100", "local": true}, "formation": {"syntax": "String = formation grp", "server": true, "broadcasted": false, "description": "Returns the current formation of a group.", "example": "formation group player", "local": false}, "pickWeaponPool": {"syntax": "pickWeaponPool object", "server": false, "broadcasted": false, "description": "Transfer weapons and magazines from cargo of object into weapon pool (used in campaign to transfer weapons into next mission).", "example": "Example needed", "local": false}, "enableEndDialog": {"syntax": "enableEndDialog", "server": false, "broadcasted": false, "description": "Enables the execution of a custom camera sequence after the players death, coded in the script onPlayerKilled.sqs.", "example": "enableEndDialog;", "local": false}, "playSound": {"syntax": "playSound soundName", "server": false, "broadcasted": false, "description": "Selects sound from Description.ext#CfgSounds or config.cpp.", "example": "playSound \"soundname\"", "local": false}, "tg": {"syntax": "tg x", "server": false, "broadcasted": false, "description": "Identical to tan", "example": "_tangent = tg 45 Result is 1", "local": false}, "lbSetValue": {"syntax": "lbSetValue [idc, index, value]", "server": false, "broadcasted": false, "description": "Sets the additional integer value in the item with the given index of the listbox or combobox with id idc of the topmost user dialog to the given value.", "example": "lbSetValue [101, 0, 1];", "local": false}, "camCommand": {"syntax": "camera camCommand command", "server": false, "broadcasted": false, "description": "Executes a command on the given camera / actor object. Known commands for:", "example": "_camera camCommand \"manual on\";", "local": true}, "titleCut": {"syntax": "titleCut [text, type, speed]", "server": false, "broadcasted": false, "description": "this command was obsoleted, use cutText instead.", "example": "titleCut [\"Hello, how are you?\",\"Plain Down\",3];", "local": false}, "accTime": {"syntax": "Number = accTime", "server": false, "broadcasted": false, "description": "Returns the current time acceleration factor", "example": "_acc = accTime", "local": false}, "lbText": {"syntax": "lbText [idc, index]", "server": false, "broadcasted": false, "description": "Returns the shown text in the item with the given index of the listbox or combobox with id idc of the topmost user dialog.", "example": "_text = lbText [101, 0];", "local": true}, "forceMap": {"syntax": "forceMap show", "server": false, "broadcasted": false, "description": "Opens non-interactive main map in background that overrides user screen. The user is able to fire but cannot see the world just the map. To force open interactive map use openMap command.", "example": "forceMap true", "local": false}, "getMarkerColor": {"syntax": "getMarkerColor markerName", "server": true, "broadcasted": false, "description": "Returns marker color for given marker. See setMarkerColor.", "example": "\"MarkerOne\" setMarkerColor \"ColorBlack\"; _color = getMarkerColor \"MarkerOne\"; //returns \"ColorBlack\"", "local": false}, "showCinemaBorder": {"syntax": "showCinemaBorder show", "server": false, "broadcasted": false, "description": "Forces drawing of cinema borders when using custom camera camCreate. This is normally used in cutscenes to indicate player has no control.", "example": "showCinemaBorder false;", "local": false}, "skipTime": {"syntax": "skipTime duration", "server": false, "broadcasted": false, "description": "Jumps the specified number of hours forward or backward.", "example": "skipTime 5;", "local": false}, "nearestBuilding": {"syntax": "nearestBuilding position", "server": false, "broadcasted": false, "description": "Finds the nearest building to a given object or position. A \"building\" is defined as an object that is of class \"House\" and contains a path LOD.", "example": "_nBuilding = nearestBuilding player;", "local": false}, "count": {"syntax": "count array", "server": false, "broadcasted": false, "description": "Can be used to count:", "example": "_cnt = count [0,0,1,2]; // returns 4 _cnt = count units group player; // returns number of units in player group", "local": true}, "setVelocity": {"syntax": "vehicleName setVelocity [x, y, z]", "server": false, "broadcasted": true, "description": "Set velocity (speed vector) of a vehicle. Units are in metres per second.", "example": "_truck1 setVelocity [20, 0, 0];", "local": true}, "captive": {"syntax": "captive object", "server": true, "broadcasted": false, "description": "Returns the captive state of the given unit (set with setCaptive). A captive unit will not be attacked by its enemies.", "example": "if (captive _general) then { removeAllWeapons _general; };", "local": false}, "selectWeapon": {"syntax": "unitName selectWeapon muzzleName", "server": false, "broadcasted": true, "description": "Selects the given weapon. Note: For weapons that have more than one muzzle, you have to input the", "example": "_soldier1 selectWeapon \"LAWLauncher\";", "local": true}, "orderGetIn": {"syntax": "unitArray orderGetIn order", "server": false, "broadcasted": true, "description": "Force all units in the array to get in or out of their assigned vehicles. Units must be assigned to a vehicle before this command will do anything.", "example": "[_unitOne, _unitTwo] orderGetIn true", "local": true}, "putWeaponPool": {"syntax": "putWeaponPool object", "server": false, "broadcasted": false, "description": "Transfer weapons and magazines from weapon pool into cargo of object obj. Used in campaign to transfer weapons into next mission.", "example": "Example needed", "local": false}, "setPos": {"syntax": "object setPos pos", "server": true, "broadcasted": true, "description": "Sets object position.", "example": "player setPos [getPos player select 0, getPos player select 1, (getPos player select 2) +10]; //the same as above using modelToWorld: player setPos (player modelToWorld [0,0,10]); //the same as above using vectorAdd: player setPos (getPos player vectorAdd [0,0,10]);", "local": false}, "addMagazinePool": {"syntax": "addMagazinePool [magazineName, count]", "server": false, "broadcasted": false, "description": "Add magazines to the magazine pool, of which the player may choose in the following mission. Available in campaigns only.", "example": "addMagazinePool [\"M16\", 20];", "local": false}, "locked": {"syntax": "locked vehicle", "server": true, "broadcasted": false, "description": "Check if vehicle is locked for Persons. If it is locked, Persons cannot mount / dismount without order.", "example": "_locked = locked _jeepOne;", "local": false}, "getMarkerPos": {"syntax": "getMarkerPos markerName", "server": false, "broadcasted": false, "description": "Returns the position of a given marker in format [x,y,0]. Array element 3 (height above ground) is always zero. If a non-existing marker is referenced the values returned are [0,0,0].", "example": "\"MarkerOne\" setMarkerPos [200,100]; _pos = getMarkerPos \"MarkerOne\" _pos is [200,100,0]", "local": false}, "ctrlText": {"syntax": "ctrlText idc", "server": false, "broadcasted": false, "description": "Returns the text of a control of the currently active user dialog. This command can be used on static texts, buttons, edit lines and active texts as well as for images, where it returns the image path. Does not work on HTML control and returns empty string \"\".", "example": "_text = ctrlText 100", "local": false}, "resize": {"syntax": "array resize count", "server": false, "broadcasted": false, "description": "Changes the size of the given array. The command does not return new array, it resizes the source array to the desired number of elements. If the new size is bigger than the current size, the new places are filled with nils.", "example": "_arrayNum = [0,1,2,3,4]; _arrayNum resize 2; // _arrayNum is now [0,1]", "local": false}, "camSetFov": {"syntax": "camera camSetFov level", "server": false, "broadcasted": false, "description": "Set the zoom level (Field Of View) of the given camera.", "example": "_cam camSetFov 0.75;", "local": true}, "lbClear": {"syntax": "lbClear idc", "server": false, "broadcasted": false, "description": "Clear all items in listbox or combobox with id idc of topmost user dialog.", "example": "lbClear 101;", "local": true}, "fire": {"syntax": "unit fire muzzle", "server": false, "broadcasted": true, "description": "Forces a unit to fire the given weapon.", "example": "_soldier fire \"M16\";", "local": true}}}
